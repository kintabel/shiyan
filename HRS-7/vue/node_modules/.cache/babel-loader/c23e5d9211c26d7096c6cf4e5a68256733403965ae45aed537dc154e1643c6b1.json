{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  slot: \"header\",\n  class: \"clearfix\"\n};\nconst _hoisted_3 = {\n  slot: \"header\",\n  class: \"clearfix\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"float\": \"right\"\n  }\n};\nconst _hoisted_5 = {\n  \"slot-scope\": \"scope\"\n};\nconst _hoisted_6 = {\n  \"slot-scope\": \"scope\"\n};\nconst _hoisted_7 = {\n  \"slot-scope\": \"scope\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"leave-info\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"no-leave\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"leave-detail\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"leave-actions\"\n};\nconst _hoisted_12 = {\n  slot: \"footer\",\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 原有头部代码保持不变 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"医生排班管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      style: {\n        \"float\": \"right\",\n        \"padding\": \"3px 0\"\n      },\n      type: \"text\",\n      onClick: $options.showNextWeek\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 排下一周班次 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 6\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n            slot: \"header\",\n            class: \"clearfix\"\n          }, [_createElementVNode(\"span\", null, \"科室列表\")], -1 /* HOISTED */)), _createVNode(_component_el_tree, {\n            data: $data.departments,\n            props: $data.defaultProps,\n            onNodeClick: $options.handleDepartmentClick\n          }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 18\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, \"排班表 - \" + _toDisplayString($data.selectedDepartment ? $data.selectedDepartment.name : '请选择科室'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_date_picker, {\n            modelValue: $data.currentWeek,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentWeek = $event),\n            type: \"week\",\n            format: \"yyyy 第 WW 周\",\n            placeholder: \"选择周\",\n            onChange: $options.fetchSchedules\n          }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"])])]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n            data: $data.scheduleData,\n            border: \"\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            default: _withCtx(() => [_createCommentVNode(\" 原有表格列保持不变 \"), _createVNode(_component_el_table_column, {\n              prop: \"doctorName\",\n              label: \"医生\",\n              width: \"150\",\n              fixed: \"\"\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_5, [_createTextVNode(_toDisplayString(_ctx.scope.row.doctorName), 1 /* TEXT */)])]),\n\n              _: 1 /* STABLE */\n            }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.weekDays, day => {\n              return _openBlock(), _createBlock(_component_el_table_column, {\n                key: day.date,\n                label: day.label,\n                width: \"150\"\n              }, {\n                default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_6, [_createVNode(_component_el_select, {\n                  modelValue: _ctx.scope.row.schedules[day.date],\n                  \"onUpdate:modelValue\": $event => _ctx.scope.row.schedules[day.date] = $event,\n                  placeholder: \"班次\",\n                  size: \"mini\",\n                  onChange: $event => $options.handleShiftChange(_ctx.scope.row.doctorId, day.date, $event)\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_el_option, {\n                    label: \"白班\",\n                    value: \"DAY\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"夜班\",\n                    value: \"NIGHT\"\n                  }), _createVNode(_component_el_option, {\n                    label: \"休息\",\n                    value: null\n                  })]),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])])]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n            }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 修改后的请假信息列 \"), _createVNode(_component_el_table_column, {\n              label: \"请假信息\",\n              width: \"180\",\n              fixed: \"right\"\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_7, [$options.hasLeaveInfo(_ctx.scope.row.doctorId) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getLeaveInfo(_ctx.scope.row.doctorId), leave => {\n                return _openBlock(), _createBlock(_component_el_tag, {\n                  key: leave.id,\n                  type: $options.getLeaveTagType(leave.status),\n                  size: \"mini\",\n                  style: {\n                    \"margin-right\": \"5px\",\n                    \"margin-bottom\": \"5px\",\n                    \"cursor\": \"pointer\"\n                  },\n                  onClick: $event => $options.showLeaveDetail(leave, _ctx.scope.row.doctorName)\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString($options.formatLeaveDate(leave.leaveDate)) + \": \" + _toDisplayString($options.getLeaveTypeName(leave.type)), 1 /* TEXT */)]),\n\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\", \"onClick\"]);\n              }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" 无请假 \"))])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 请假详情对话框 \"), _createVNode(_component_el_dialog, {\n    title: \"请假详情\",\n    visible: $data.leaveDetailVisible,\n    width: \"500px\",\n    \"close-on-click-modal\": false\n  }, {\n    default: _withCtx(() => [$data.currentLeave ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createVNode(_component_el_descriptions, {\n      column: 1,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"医生姓名\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.currentDoctorName), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"请假日期\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.formatLeaveDate($data.currentLeave.leaveDate)), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"请假类型\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getLeaveTypeName($data.currentLeave.leaveType)), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"请假原因\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.currentLeave.reason), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"申请时间\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.formatDateTime($data.currentLeave.createTime)), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), $data.currentLeave.approvalStatus == '0' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_el_button, {\n      type: \"success\",\n      onClick: _cache[1] || (_cache[1] = $event => $options.handleLeaveAction('1'))\n    }, {\n      default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"通过申请\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"danger\",\n      onClick: _cache[2] || (_cache[2] = $event => $options.handleLeaveAction('0'))\n    }, {\n      default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"拒绝申请\")])),\n      _: 1 /* STABLE */\n    })])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_12, [_createVNode(_component_el_button, {\n      onClick: _cache[3] || (_cache[3] = $event => $data.leaveDetailVisible = false)\n    }, {\n      default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"关 闭\")])),\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"visible\"])]);\n}","map":{"version":3,"names":["class","slot","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_createCommentVNode","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","$options","showNextWeek","_cache","_component_el_row","gutter","_component_el_col","span","_component_el_tree","data","$data","departments","props","defaultProps","onNodeClick","handleDepartmentClick","_hoisted_3","_toDisplayString","selectedDepartment","name","_hoisted_4","_component_el_date_picker","currentWeek","$event","format","placeholder","onChange","fetchSchedules","_createBlock","_component_el_table","scheduleData","border","_component_el_table_column","prop","label","width","fixed","_hoisted_5","_ctx","scope","row","doctorName","_Fragment","_renderList","weekDays","day","key","date","_hoisted_6","_component_el_select","schedules","size","handleShiftChange","doctorId","_component_el_option","value","_hoisted_7","hasLeaveInfo","_hoisted_8","getLeaveInfo","leave","_component_el_tag","id","getLeaveTagType","status","showLeaveDetail","formatLeaveDate","leaveDate","getLeaveTypeName","_hoisted_9","loading","_component_el_dialog","title","visible","leaveDetailVisible","currentLeave","_hoisted_10","_component_el_descriptions","column","_component_el_descriptions_item","currentDoctorName","leaveType","reason","formatDateTime","createTime","approvalStatus","_hoisted_11","handleLeaveAction","_hoisted_12"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\hospitalAdmin\\Scheduling.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <!-- 原有头部代码保持不变 -->\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生排班管理</span>\r\n        <el-button\r\n            style=\"float: right; padding: 3px 0\"\r\n            type=\"text\"\r\n            @click=\"showNextWeek\"\r\n        >\r\n          排下一周班次\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>排班表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-date-picker\r\n                    v-model=\"currentWeek\"\r\n                    type=\"week\"\r\n                    format=\"yyyy 第 WW 周\"\r\n                    placeholder=\"选择周\"\r\n                    @change=\"fetchSchedules\"\r\n                >\r\n                </el-date-picker>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"scheduleData\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <!-- 原有表格列保持不变 -->\r\n              <el-table-column prop=\"doctorName\" label=\"医生\" width=\"150\" fixed>\r\n                <template slot-scope=\"scope\">\r\n                  {{ scope.row.doctorName }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column\r\n                  v-for=\"day in weekDays\"\r\n                  :key=\"day.date\"\r\n                  :label=\"day.label\"\r\n                  width=\"150\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-select\r\n                      v-model=\"scope.row.schedules[day.date]\"\r\n                      placeholder=\"班次\"\r\n                      size=\"mini\"\r\n                      @change=\"handleShiftChange(scope.row.doctorId, day.date, $event)\"\r\n                  >\r\n                    <el-option label=\"白班\" value=\"DAY\"></el-option>\r\n                    <el-option label=\"夜班\" value=\"NIGHT\"></el-option>\r\n                    <el-option label=\"休息\" :value=\"null\"></el-option>\r\n                  </el-select>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <!-- 修改后的请假信息列 -->\r\n              <el-table-column label=\"请假信息\" width=\"180\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                  <div v-if=\"hasLeaveInfo(scope.row.doctorId)\" class=\"leave-info\">\r\n                    <el-tag\r\n                        v-for=\"leave in getLeaveInfo(scope.row.doctorId)\"\r\n                        :key=\"leave.id\"\r\n                        :type=\"getLeaveTagType(leave.status)\"\r\n                        size=\"mini\"\r\n                        style=\"margin-right: 5px; margin-bottom: 5px; cursor: pointer;\"\r\n                        @click=\"showLeaveDetail(leave, scope.row.doctorName)\"\r\n                    >\r\n                      {{ formatLeaveDate(leave.leaveDate) }}: {{ getLeaveTypeName(leave.type) }}\r\n                    </el-tag>\r\n                  </div>\r\n                  <div v-else class=\"no-leave\">\r\n                    无请假\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <!-- 请假详情对话框 -->\r\n    <el-dialog\r\n        title=\"请假详情\"\r\n        :visible.sync=\"leaveDetailVisible\"\r\n        width=\"500px\"\r\n        :close-on-click-modal=\"false\"\r\n    >\r\n      <div v-if=\"currentLeave\" class=\"leave-detail\">\r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"医生姓名\">{{ currentDoctorName }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请假日期\">{{ formatLeaveDate(currentLeave.leaveDate) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请假类型\">{{ getLeaveTypeName(currentLeave.leaveType) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请假原因\">{{ currentLeave.reason }}</el-descriptions-item>\r\n\r\n          <el-descriptions-item label=\"申请时间\">{{ formatDateTime(currentLeave.createTime) }}</el-descriptions-item>\r\n        </el-descriptions>\r\n\r\n        <div v-if=\"currentLeave.approvalStatus == '0'\" class=\"leave-actions\">\r\n          <el-button type=\"success\" @click=\"handleLeaveAction('1')\">通过申请</el-button>\r\n          <el-button type=\"danger\" @click=\"handleLeaveAction('0')\">拒绝申请</el-button>\r\n        </div>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"leaveDetailVisible = false\">关 闭</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from 'dayjs'\r\nimport {\r\n  getSchedulesByDepartment,\r\n  addSchedule,\r\n  updateSchedule,\r\n  deleteSchedule\r\n} from '@/api/scheduleApi'\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'Schedule',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      hospitalId: null,\r\n      departments: [],\r\n      selectedDepartment: null,\r\n      doctors: [],\r\n      currentWeek: this.getNextWeekStartDate(),\r\n      weekDays: [],\r\n      scheduleData: [],\r\n      leaveInfo: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      },\r\n      // 新增的请假详情相关数据\r\n      leaveDetailVisible: false,\r\n      currentLeave: null,\r\n      currentDoctorName: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchDepartments()\r\n    this.generateWeekDays()\r\n  },\r\n  methods: {\r\n    getNextWeekStartDate() {\r\n      const today = new Date()\r\n      const nextMonday = new Date(today)\r\n      nextMonday.setDate(today.getDate() + ((1 + 7 - today.getDay()) % 7 || 7))\r\n      return nextMonday\r\n    },\r\n    generateWeekDays() {\r\n      const startDate = new Date(this.currentWeek)\r\n      this.weekDays = []\r\n      for (let i = 0; i < 7; i++) {\r\n        const date = new Date(startDate)\r\n        date.setDate(startDate.getDate() + i)\r\n        this.weekDays.push({\r\n          date: parseTime(date, '{y}-{m}-{d}'),\r\n          label: parseTime(date, '{m}-{d} 周') + ['日', '一', '二', '三', '四', '五', '六'][date.getDay()]\r\n        })\r\n      }\r\n    },\r\n    fetchDepartments() {\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          this.departments = response.data\r\n        } else {\r\n          this.$message.error(response.data.message || '获取科室列表失败')\r\n        }\r\n      })\r\n    },\r\n    async handleDepartmentClick(data) {\r\n      this.selectedDepartment = data\r\n      await this.fetchDoctors(data.id)\r\n      await this.fetchSchedules()\r\n      await this.fetchLeaveInfo()\r\n    },\r\n    fetchDoctors(departmentId) {\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: departmentId\r\n        }\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          this.doctors = response.data\r\n          this.prepareScheduleData()\r\n        } else {\r\n          this.$message.error(response.data.message || '获取医生列表失败')\r\n        }\r\n      })\r\n    },\r\n    prepareScheduleData() {\r\n      this.scheduleData = this.doctors.map(doctor => {\r\n        const schedules = {}\r\n        this.weekDays.forEach(day => {\r\n          schedules[day.date] = null\r\n        })\r\n        return {\r\n          doctorId: doctor.id,\r\n          doctorName: doctor.name,\r\n          schedules: schedules\r\n        }\r\n      })\r\n    },\r\n    async fetchSchedules() {\r\n      if (!this.selectedDepartment) return\r\n\r\n      this.loading = true\r\n      this.generateWeekDays()\r\n      this.prepareScheduleData()\r\n      this.fetchLeaveInfo()\r\n      try {\r\n        const startDate = new Date(this.currentWeek)\r\n        const endDate = new Date(startDate)\r\n        endDate.setDate(startDate.getDate() + 6)\r\n\r\n        const response = await getSchedulesByDepartment(\r\n            this.user.id,\r\n            this.selectedDepartment.id,\r\n            startDate,\r\n            endDate\r\n        )\r\n\r\n        response.data.forEach(schedule => {\r\n          const scheduleDate = parseTime(schedule.scheduleDate, '{y}-{m}-{d}')\r\n          const doctorSchedule = this.scheduleData.find(\r\n              item => item.doctorId === schedule.doctorId\r\n          )\r\n          if (doctorSchedule) {\r\n            doctorSchedule.schedules[scheduleDate] = schedule.shift_type\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('获取排班信息失败:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async fetchLeaveInfo() {\r\n      if (!this.selectedDepartment) return;\r\n\r\n      try {\r\n        const startDate = new Date(this.currentWeek)\r\n        const endDate = new Date(startDate)\r\n        endDate.setDate(startDate.getDate() + 6)\r\n\r\n        const response = await this.$request.get('/api/schedule/leave/list', {\r\n          params: {\r\n            hospitalAdminId: this.user.id,\r\n            departmentId: this.selectedDepartment.id,\r\n            startDate: startDate.toISOString().split('T')[0],\r\n            endDate: endDate.toISOString().split('T')[0]\r\n          }\r\n        });\r\n\r\n        if (response.code == 200) {\r\n          this.leaveInfo = response.data || [];\r\n        } else {\r\n          this.$message.error(response.message || '获取请假信息失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取请假信息失败:', error);\r\n        this.$message.error('获取请假信息失败');\r\n      }\r\n    },\r\n    hasLeaveInfo(doctorId) {\r\n      return this.leaveInfo.some(leave => leave.doctorId === doctorId);\r\n    },\r\n    getLeaveInfo(doctorId) {\r\n      return this.leaveInfo.filter(leave => leave.doctorId === doctorId);\r\n    },\r\n    formatLeaveDate(date) {\r\n      return dayjs(date).format('MM-DD');\r\n    },\r\n    formatDateTime(date) {\r\n      return dayjs(date).format('YYYY-MM-DD HH:mm:ss');\r\n    },\r\n    getLeaveTypeName(type) {\r\n      const map = {\r\n        personal: '事假',\r\n        sick: '病假',\r\n        annual: '年假',\r\n        other: '其他'\r\n      };\r\n      return map[type] || type;\r\n    },\r\n    getLeaveTagType(status) {\r\n      const map = {\r\n        PENDING: 'warning',\r\n        APPROVED: 'success',\r\n        REJECTED: 'danger',\r\n        CANCELLED: 'info'\r\n      };\r\n      return map[status] || '';\r\n    },\r\n    getLeaveStatusName(status) {\r\n      const map = {\r\n        PENDING: '待审批',\r\n        APPROVED: '已通过',\r\n        REJECTED: '已拒绝',\r\n        CANCELLED: '已取消'\r\n      };\r\n      return map[status] || status;\r\n    },\r\n    async handleShiftChange(doctorId, date, shiftType) {\r\n      try {\r\n        const existingSchedule = await this.findExistingSchedule(doctorId, date)\r\n\r\n        if (shiftType) {\r\n          if (existingSchedule) {\r\n            await updateSchedule({\r\n              id: existingSchedule.id,\r\n              shift_type: shiftType\r\n            })\r\n          } else {\r\n            await addSchedule({\r\n              hospitalId: this.user.id,\r\n              departmentId: this.selectedDepartment.id,\r\n              doctorId: doctorId,\r\n              scheduleDate: date,\r\n              shiftType: shiftType,\r\n              fatigueScore: 0\r\n            })\r\n          }\r\n        } else {\r\n          if (existingSchedule) {\r\n            await deleteSchedule(existingSchedule.id)\r\n          }\r\n        }\r\n\r\n        this.$message.success('排班更新成功')\r\n      } catch (error) {\r\n        console.error('更新排班失败:', error)\r\n        this.$message.error('排班更新失败')\r\n      }\r\n    },\r\n    async findExistingSchedule(doctorId, date) {\r\n      try {\r\n        const response = await getSchedulesByDepartment(\r\n            this.user.id,\r\n            this.selectedDepartment.id,\r\n            new Date(date))\r\n        return response.data.find(\r\n            item => item.doctorId === doctorId &&\r\n                parseTime(item.scheduleDate, '{y}-{m}-{d}') === date\r\n        )\r\n      } catch (error) {\r\n        console.error('查找排班记录失败:', error)\r\n        return null\r\n      }\r\n    },\r\n    showNextWeek() {\r\n      const nextWeek = new Date(this.currentWeek)\r\n      nextWeek.setDate(nextWeek.getDate() + 7)\r\n      this.currentWeek = nextWeek\r\n      this.fetchSchedules()\r\n      this.fetchLeaveInfo()\r\n    },\r\n\r\n    showLeaveDetail(leave, doctorName) {\r\n      this.currentLeave = leave;\r\n      this.currentDoctorName = doctorName;\r\n      this.leaveDetailVisible = true;\r\n    },\r\n\r\n    async handleLeaveAction(action) {\r\n      if(action == 1){\r\n        try {\r\n          console.log(action)\r\n          this.loading = true;\r\n          const id = this.currentLeave.id;\r\n          const response = await this.$request.post(`/api/schedule/leave/approve/${id}`);\r\n          if (response.code == 200) {\r\n            this.$message.success(`请假${action == '1' ? '通过' : '拒绝'}成功`);\r\n            await this.fetchLeaveInfo(); // 重新加载请假信息\r\n            this.leaveDetailVisible = false; // 关闭对话框\r\n          } else {\r\n            this.$message.error(response.message || '操作失败');\r\n          }\r\n        } catch (error) {\r\n          console.error('处理请假失败:', error);\r\n          this.$message.error('操作失败');\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      }else{\r\n        await this.fetchLeaveInfo(); // 重新加载请假信息\r\n        this.leaveDetailVisible = false; // 关闭对话框\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.leave-info {\r\n  min-height: 40px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n}\r\n\r\n.no-leave {\r\n  color: #999;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n/* 新增样式 */\r\n.leave-detail {\r\n  padding: 10px;\r\n}\r\n\r\n.leave-actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.leave-actions .el-button {\r\n  margin: 0 10px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}