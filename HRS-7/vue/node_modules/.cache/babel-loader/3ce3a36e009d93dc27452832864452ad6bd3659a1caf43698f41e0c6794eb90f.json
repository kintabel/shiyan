{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'ArchivesAddDoctor',\n  data() {\n    return {\n      isLoading: false,\n      hospitalizationId: this.$route.query.hospitalizationId || '',\n      form: {\n        disease: '',\n        surgery: ''\n      },\n      dailyChecklists: [],\n      rules: {\n        disease: [{\n          required: true,\n          message: '请输入疾病诊断',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  async created() {\n    await this.fetchExistingData();\n  },\n  methods: {\n    // 获取已有数据\n    async fetchExistingData() {\n      this.isLoading = true;\n      try {\n        // 获取疾病和手术信息\n        const infoRes = await this.$request.get(`doctor/information/getByHospitalizationId?hospitalizationId=${this.hospitalizationId}`);\n        if (infoRes.code === 200 && infoRes.data) {\n          this.form.disease = infoRes.data.disease || '';\n          this.form.surgery = infoRes.data.surgery || '';\n        }\n\n        // 获取每日清单\n        const dailyRes = await this.$request.get(`doctor/daily/getByHospitalizationId?hospitalizationId=${this.hospitalizationId}`);\n        if (dailyRes.code === 200 && dailyRes.data) {\n          this.dailyChecklists = dailyRes.data.map(item => ({\n            ...item,\n            date: item.date || parseTime(new Date(), '{y}-{m}-{d}'),\n            surgeryTime: item.surgeryTime || null\n          }));\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error);\n        this.$message.error('获取数据失败');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    // 添加每日清单\n    addDailyChecklist() {\n      const today = new Date();\n      const dateStr = parseTime(today, '{y}-{m}-{d}');\n\n      // 检查今天是否已有记录\n      const todayRecord = this.dailyChecklists.find(item => item.date === dateStr);\n      if (todayRecord) {\n        this.$message.warning('今天已存在记录，请编辑现有记录');\n        return;\n      }\n      this.dailyChecklists.push({\n        date: dateStr,\n        medicine: '',\n        transfusion: '',\n        surgery: '',\n        surgeryTime: null,\n        dailySituation: '',\n        cost: 0\n      });\n    },\n    // 处理手术安排变化\n    handleSurgeryChange(index) {\n      if (!this.dailyChecklists[index].surgery || this.dailyChecklists[index].surgery.trim() === '') {\n        this.dailyChecklists[index].surgeryTime = null;\n      }\n    },\n    // 删除每日清单\n    removeDailyChecklist(index) {\n      this.$confirm('确定要删除这条记录吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.dailyChecklists.splice(index, 1);\n        this.$message.success('删除成功');\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n    // 提交表单\n    async submitForm() {\n      try {\n        await this.$refs.form.validate();\n\n        // 处理每日清单数据\n        const processedChecklists = this.dailyChecklists.map(item => ({\n          ...item,\n          surgeryTime: item.surgery && item.surgery.trim() !== '' ? item.surgeryTime : null\n        }));\n\n        // 提交基本信息\n        const infoRes = await this.$request.post('doctor/information/update', {\n          ...this.form,\n          hospitalizationId: this.hospitalizationId\n        });\n        if (infoRes.code !== 200) {\n          throw new Error(infoRes.message || '更新基本信息失败');\n        }\n\n        // 提交每日清单\n        if (processedChecklists.length > 0) {\n          const dailyRes = await this.$request.post('doctor/daily/saveOrUpdate', {\n            hospitalizationId: this.hospitalizationId,\n            checklists: processedChecklists\n          });\n          if (dailyRes.code !== 200) {\n            throw new Error(dailyRes.message || '保存每日清单失败');\n          }\n        }\n        this.$message.success('保存成功');\n        this.$router.go(-1);\n      } catch (error) {\n        this.$message.error(error.message || '提交失败');\n        console.error('提交失败:', error);\n      }\n    },\n    // 取消\n    cancel() {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","isLoading","hospitalizationId","$route","query","form","disease","surgery","dailyChecklists","rules","required","message","trigger","created","fetchExistingData","methods","infoRes","$request","get","code","dailyRes","map","item","date","Date","surgeryTime","error","console","$message","addDailyChecklist","today","dateStr","todayRecord","find","warning","push","medicine","transfusion","dailySituation","cost","handleSurgeryChange","index","trim","removeDailyChecklist","$confirm","confirmButtonText","cancelButtonText","type","then","splice","success","catch","info","submitForm","$refs","validate","processedChecklists","post","Error","length","checklists","$router","go","cancel"],"sources":["src/views/doctor/ArchiveAddDoctor.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-archive-container\">\r\n    <h4>添加住院信息</h4>\r\n\r\n    <el-form ref=\"form\" :model=\"form\" label-width=\"120px\" :rules=\"rules\">\r\n      <!-- 基本信息部分 -->\r\n      <el-card class=\"box-card\" shadow=\"hover\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>基本信息</span>\r\n        </div>\r\n\r\n        <el-form-item label=\"疾病诊断\" prop=\"disease\">\r\n          <el-input\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入疾病诊断\"\r\n              v-model=\"form.disease\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-card>\r\n\r\n      <!-- 手术信息部分 -->\r\n      <el-card class=\"box-card\" shadow=\"hover\" style=\"margin-top: 20px;\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>手术信息</span>\r\n        </div>\r\n        <el-form-item label=\"手术信息\" prop=\"surgery\">\r\n          <el-input\r\n              type=\"textarea\"\r\n              :rows=\"2\"\r\n              placeholder=\"请输入手术信息\"\r\n              v-model=\"form.surgery\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-card>\r\n\r\n      <!-- 每日清单部分 -->\r\n      <el-card class=\"box-card\" shadow=\"hover\" style=\"margin-top: 20px;\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>每日清单</span>\r\n          <el-button\r\n              style=\"float: right; padding: 3px 0\"\r\n              type=\"text\"\r\n              @click=\"addDailyChecklist\">\r\n            添加今日清单\r\n          </el-button>\r\n        </div>\r\n\r\n        <div v-if=\"dailyChecklists.length > 0\">\r\n          <div v-for=\"(item, index) in dailyChecklists\" :key=\"index\" class=\"daily-item\">\r\n            <el-divider content-position=\"left\">{{ item.date }}</el-divider>\r\n\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"每日开药\">\r\n                  <el-input v-model=\"item.medicine\" placeholder=\"请输入药品及用量\"></el-input>\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"输液\">\r\n                  <el-input v-model=\"item.transfusion\" placeholder=\"请输入输液信息\"></el-input>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"12\">\r\n                <el-form-item label=\"手术安排\">\r\n                  <el-input v-model=\"item.surgery\" placeholder=\"如有手术请填写\" @change=\"handleSurgeryChange(index)\"></el-input>\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"12\" v-if=\"item.surgery && item.surgery.trim() !== ''\">\r\n                <el-form-item label=\"手术时间\">\r\n                  <el-date-picker\r\n                      v-model=\"item.surgeryTime\"\r\n                      type=\"datetime\"\r\n                      placeholder=\"选择手术时间\"\r\n                      value-format=\"yyyy-MM-dd HH:mm:ss\">\r\n                  </el-date-picker>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n\r\n            <el-form-item label=\"每日情况\">\r\n              <el-input\r\n                  type=\"textarea\"\r\n                  :rows=\"2\"\r\n                  placeholder=\"记录患者每日情况\"\r\n                  v-model=\"item.dailySituation\">\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"每日开销\">\r\n              <el-input-number v-model=\"item.cost\" :precision=\"2\" :step=\"0.1\" :min=\"0\"></el-input-number>\r\n            </el-form-item>\r\n\r\n            <el-button\r\n                type=\"danger\"\r\n                size=\"mini\"\r\n                @click=\"removeDailyChecklist(index)\"\r\n                style=\"float: right;\">\r\n              删除\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n        <div v-else class=\"no-data\">\r\n          <el-empty description=\"暂无每日清单记录\"></el-empty>\r\n        </div>\r\n      </el-card>\r\n\r\n      <div class=\"form-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">提交</el-button>\r\n        <el-button @click=\"cancel\">取消</el-button>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'ArchivesAddDoctor',\r\n  data() {\r\n    return {\r\n      isLoading: false,\r\n      hospitalizationId: this.$route.query.hospitalizationId || '',\r\n      form: {\r\n        disease: '',\r\n        surgery: '',\r\n      },\r\n      dailyChecklists: [],\r\n      rules: {\r\n        disease: [\r\n          { required: true, message: '请输入疾病诊断', trigger: 'blur' }\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    await this.fetchExistingData();\r\n  },\r\n  methods: {\r\n    // 获取已有数据\r\n    async fetchExistingData() {\r\n      this.isLoading = true;\r\n      try {\r\n        // 获取疾病和手术信息\r\n        const infoRes = await this.$request.get(`doctor/information/getByHospitalizationId?hospitalizationId=${this.hospitalizationId}`);\r\n        if (infoRes.code === 200 && infoRes.data) {\r\n          this.form.disease = infoRes.data.disease || '';\r\n          this.form.surgery = infoRes.data.surgery || '';\r\n        }\r\n\r\n        // 获取每日清单\r\n        const dailyRes = await this.$request.get(`doctor/daily/getByHospitalizationId?hospitalizationId=${this.hospitalizationId}`);\r\n        if (dailyRes.code === 200 && dailyRes.data) {\r\n          this.dailyChecklists = dailyRes.data.map(item => ({\r\n            ...item,\r\n            date: item.date || parseTime(new Date(), '{y}-{m}-{d}'),\r\n            surgeryTime: item.surgeryTime || null\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        console.error('获取数据失败:', error);\r\n        this.$message.error('获取数据失败');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    // 添加每日清单\r\n    addDailyChecklist() {\r\n      const today = new Date();\r\n      const dateStr = parseTime(today, '{y}-{m}-{d}');\r\n\r\n      // 检查今天是否已有记录\r\n      const todayRecord = this.dailyChecklists.find(item => item.date === dateStr);\r\n      if (todayRecord) {\r\n        this.$message.warning('今天已存在记录，请编辑现有记录');\r\n        return;\r\n      }\r\n\r\n      this.dailyChecklists.push({\r\n        date: dateStr,\r\n        medicine: '',\r\n        transfusion: '',\r\n        surgery: '',\r\n        surgeryTime: null,\r\n        dailySituation: '',\r\n        cost: 0\r\n      });\r\n    },\r\n\r\n    // 处理手术安排变化\r\n    handleSurgeryChange(index) {\r\n      if (!this.dailyChecklists[index].surgery || this.dailyChecklists[index].surgery.trim() === '') {\r\n        this.dailyChecklists[index].surgeryTime = null;\r\n      }\r\n    },\r\n\r\n    // 删除每日清单\r\n    removeDailyChecklist(index) {\r\n      this.$confirm('确定要删除这条记录吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.dailyChecklists.splice(index, 1);\r\n        this.$message.success('删除成功');\r\n      }).catch(() => {\r\n        this.$message.info('已取消删除');\r\n      });\r\n    },\r\n\r\n    // 提交表单\r\n    async submitForm() {\r\n      try {\r\n        await this.$refs.form.validate();\r\n\r\n        // 处理每日清单数据\r\n        const processedChecklists = this.dailyChecklists.map(item => ({\r\n          ...item,\r\n          surgeryTime: item.surgery && item.surgery.trim() !== '' ? item.surgeryTime : null\r\n        }));\r\n\r\n        // 提交基本信息\r\n        const infoRes = await this.$request.post('doctor/information/update', {\r\n          ...this.form,\r\n          hospitalizationId: this.hospitalizationId\r\n        });\r\n\r\n        if (infoRes.code !== 200) {\r\n          throw new Error(infoRes.message || '更新基本信息失败');\r\n        }\r\n\r\n        // 提交每日清单\r\n        if (processedChecklists.length > 0) {\r\n          const dailyRes = await this.$request.post('doctor/daily/saveOrUpdate', {\r\n            hospitalizationId: this.hospitalizationId,\r\n            checklists: processedChecklists\r\n          });\r\n\r\n          if (dailyRes.code !== 200) {\r\n            throw new Error(dailyRes.message || '保存每日清单失败');\r\n          }\r\n        }\r\n\r\n        this.$message.success('保存成功');\r\n        this.$router.go(-1);\r\n      } catch (error) {\r\n        this.$message.error(error.message || '提交失败');\r\n        console.error('提交失败:', error);\r\n      }\r\n    },\r\n\r\n    // 取消\r\n    cancel() {\r\n      this.$router.go(-1);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 保持原有样式不变 */\r\n.add-archive-container {\r\n  padding: 20px;\r\n}\r\n\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.daily-item {\r\n  padding: 10px;\r\n  border: 1px solid #ebeef5;\r\n  border-radius: 4px;\r\n  margin-bottom: 15px;\r\n  position: relative;\r\n}\r\n\r\n.form-footer {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.no-data {\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  color: #909399;\r\n}\r\n</style>"],"mappings":";AAuHA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,iBAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,iBAAA;MACAG,IAAA;QACAC,OAAA;QACAC,OAAA;MACA;MACAC,eAAA;MACAC,KAAA;QACAH,OAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,iBAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,kBAAA;MACA,KAAAb,SAAA;MACA;QACA;QACA,MAAAe,OAAA,cAAAC,QAAA,CAAAC,GAAA,qEAAAhB,iBAAA;QACA,IAAAc,OAAA,CAAAG,IAAA,YAAAH,OAAA,CAAAhB,IAAA;UACA,KAAAK,IAAA,CAAAC,OAAA,GAAAU,OAAA,CAAAhB,IAAA,CAAAM,OAAA;UACA,KAAAD,IAAA,CAAAE,OAAA,GAAAS,OAAA,CAAAhB,IAAA,CAAAO,OAAA;QACA;;QAEA;QACA,MAAAa,QAAA,cAAAH,QAAA,CAAAC,GAAA,+DAAAhB,iBAAA;QACA,IAAAkB,QAAA,CAAAD,IAAA,YAAAC,QAAA,CAAApB,IAAA;UACA,KAAAQ,eAAA,GAAAY,QAAA,CAAApB,IAAA,CAAAqB,GAAA,CAAAC,IAAA;YACA,GAAAA,IAAA;YACAC,IAAA,EAAAD,IAAA,CAAAC,IAAA,IAAAzB,SAAA,KAAA0B,IAAA;YACAC,WAAA,EAAAH,IAAA,CAAAG,WAAA;UACA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;QACA,KAAAzB,SAAA;MACA;IACA;IAEA;IACA4B,kBAAA;MACA,MAAAC,KAAA,OAAAN,IAAA;MACA,MAAAO,OAAA,GAAAjC,SAAA,CAAAgC,KAAA;;MAEA;MACA,MAAAE,WAAA,QAAAxB,eAAA,CAAAyB,IAAA,CAAAX,IAAA,IAAAA,IAAA,CAAAC,IAAA,KAAAQ,OAAA;MACA,IAAAC,WAAA;QACA,KAAAJ,QAAA,CAAAM,OAAA;QACA;MACA;MAEA,KAAA1B,eAAA,CAAA2B,IAAA;QACAZ,IAAA,EAAAQ,OAAA;QACAK,QAAA;QACAC,WAAA;QACA9B,OAAA;QACAkB,WAAA;QACAa,cAAA;QACAC,IAAA;MACA;IACA;IAEA;IACAC,oBAAAC,KAAA;MACA,UAAAjC,eAAA,CAAAiC,KAAA,EAAAlC,OAAA,SAAAC,eAAA,CAAAiC,KAAA,EAAAlC,OAAA,CAAAmC,IAAA;QACA,KAAAlC,eAAA,CAAAiC,KAAA,EAAAhB,WAAA;MACA;IACA;IAEA;IACAkB,qBAAAF,KAAA;MACA,KAAAG,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA,KAAAxC,eAAA,CAAAyC,MAAA,CAAAR,KAAA;QACA,KAAAb,QAAA,CAAAsB,OAAA;MACA,GAAAC,KAAA;QACA,KAAAvB,QAAA,CAAAwB,IAAA;MACA;IACA;IAEA;IACA,MAAAC,WAAA;MACA;QACA,WAAAC,KAAA,CAAAjD,IAAA,CAAAkD,QAAA;;QAEA;QACA,MAAAC,mBAAA,QAAAhD,eAAA,CAAAa,GAAA,CAAAC,IAAA;UACA,GAAAA,IAAA;UACAG,WAAA,EAAAH,IAAA,CAAAf,OAAA,IAAAe,IAAA,CAAAf,OAAA,CAAAmC,IAAA,YAAApB,IAAA,CAAAG,WAAA;QACA;;QAEA;QACA,MAAAT,OAAA,cAAAC,QAAA,CAAAwC,IAAA;UACA,QAAApD,IAAA;UACAH,iBAAA,OAAAA;QACA;QAEA,IAAAc,OAAA,CAAAG,IAAA;UACA,UAAAuC,KAAA,CAAA1C,OAAA,CAAAL,OAAA;QACA;;QAEA;QACA,IAAA6C,mBAAA,CAAAG,MAAA;UACA,MAAAvC,QAAA,cAAAH,QAAA,CAAAwC,IAAA;YACAvD,iBAAA,OAAAA,iBAAA;YACA0D,UAAA,EAAAJ;UACA;UAEA,IAAApC,QAAA,CAAAD,IAAA;YACA,UAAAuC,KAAA,CAAAtC,QAAA,CAAAT,OAAA;UACA;QACA;QAEA,KAAAiB,QAAA,CAAAsB,OAAA;QACA,KAAAW,OAAA,CAAAC,EAAA;MACA,SAAApC,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA,CAAAA,KAAA,CAAAf,OAAA;QACAgB,OAAA,CAAAD,KAAA,UAAAA,KAAA;MACA;IACA;IAEA;IACAqC,OAAA;MACA,KAAAF,OAAA,CAAAC,EAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}