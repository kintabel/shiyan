{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'PrescribingAdministration',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      // 开药表单数据\n      prescriptionForm: {\n        drugId: '',\n        // 药品ID\n        drugName: '',\n        // 药品名称\n        quantity: 1,\n        // 药品数量\n        instructions: '' // 用药说明\n      },\n\n      // 已开药品列表\n      prescriptionList: [],\n      // 药物库存选项\n      drugOptions: []\n    };\n  },\n  created() {\n    this.fetchDrugStock(); // 加载药物库存信息\n  },\n\n  methods: {\n    // 获取药物库存信息\n    fetchDrugStock() {\n      console.log(this.$route.params.id);\n      console.log(this.user.id);\n      this.$request.get('/stock/selectByDocId', {\n        params: {\n          doctorId: this.user.id\n        }\n      }).then(response => {\n        if (response.data && response.data.length > 0) {\n          this.drugOptions = response.data.filter(drug => drug.type === 1); // 只显示药物类型\n        }\n      }).catch(error => {\n        console.error('获取药物库存信息失败:', error);\n        this.$message.error('获取药物库存信息失败，请稍后重试');\n      });\n    },\n    // 处理药物选择\n    handleDrugChange(selectedDrugName) {\n      const selectedDrug = this.drugOptions.find(drug => drug.name === selectedDrugName);\n      if (selectedDrug) {\n        this.prescriptionForm.drugName = selectedDrug.name;\n        this.prescriptionForm.quantity = 1; // 重置数量\n      }\n    },\n\n    // 获取药品的最大数量（基于库存）\n    getMaxQuantity(drugName) {\n      const selectedDrug = this.drugOptions.find(drug => drug.name === drugName);\n      return selectedDrug ? selectedDrug.stock : 100; // 默认最大值为100\n    },\n\n    // 添加药品到列表\n    handleAddPrescription() {\n      if (!this.prescriptionForm.drugName || !this.prescriptionForm.instructions) {\n        this.$message.warning('请填写完整的药品信息');\n        return;\n      }\n      this.prescriptionList.push({\n        ...this.prescriptionForm\n      });\n      this.handleResetForm(); // 添加后重置表单\n    },\n\n    // 重置表单\n    handleResetForm() {\n      this.prescriptionForm = {\n        drugName: '',\n        quantity: 1,\n        instructions: ''\n      };\n    },\n    // 删除药品\n    handleDeletePrescription(row) {\n      this.prescriptionList = this.prescriptionList.filter(item => item.drugName !== row.drugName);\n      this.$message.success('删除成功');\n    },\n    // 提交开药\n    handleSubmitPrescription() {\n      if (this.prescriptionList.length === 0) {\n        this.$message.warning('请至少添加一种药品');\n        return;\n      }\n      this.$confirm('是否确认提交开药信息？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 组合要发送的数据\n        const dataToSend = {\n          prescriptions: this.prescriptionList,\n          order: this.$route.params.id\n        };\n        this.$request.post('/prescribe/submit', dataToSend).then(response => {\n          if (response.code == 200) {\n            this.$message.success('开药信息提交成功');\n            this.prescriptionList = []; // 清空列表\n          } else {\n            this.$message.error(response.data.message || '开药信息提交失败');\n          }\n        }).catch(error => {\n          console.error('开药信息提交失败:', error);\n          this.$message.error('开药信息提交失败，请稍后重试');\n        });\n      }).catch(() => {\n        this.$message.info('已取消提交');\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","prescriptionForm","drugId","drugName","quantity","instructions","prescriptionList","drugOptions","created","fetchDrugStock","methods","console","log","$route","params","id","$request","get","doctorId","then","response","length","filter","drug","type","catch","error","$message","handleDrugChange","selectedDrugName","selectedDrug","find","getMaxQuantity","stock","handleAddPrescription","warning","push","handleResetForm","handleDeletePrescription","row","item","success","handleSubmitPrescription","$confirm","confirmButtonText","cancelButtonText","dataToSend","prescriptions","order","post","code","message","info"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\doctor\\Prescription.vue"],"sourcesContent":["<template>\r\n  <div class=\"prescribing-administration\">\r\n    <h2>开药管理</h2>\r\n    <el-button type=\"text\" @click=\"$router.go(-1)\">返回</el-button>\r\n\r\n    <!-- 开药表单 -->\r\n    <el-form :model=\"prescriptionForm\" label-width=\"120px\" class=\"prescription-form\">\r\n      <!-- 药品名称下拉框 -->\r\n      <el-form-item label=\"药品名称\">\r\n        <el-select\r\n            v-model=\"prescriptionForm.drugName\"\r\n            placeholder=\"请选择药品\"\r\n            filterable\r\n            clearable\r\n            @change=\"handleDrugChange\"\r\n        >\r\n          <el-option\r\n              v-for=\"drug in drugOptions\"\r\n              :key=\"drug.id\"\r\n              :label=\"drug.name\"\r\n              :value=\"drug.name\"\r\n          >\r\n            <span>{{ drug.name }}</span>\r\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n              库存: {{ drug.stock }}\r\n            </span>\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"药品数量\">\r\n        <el-input-number\r\n            v-model=\"prescriptionForm.quantity\"\r\n            :min=\"1\"\r\n            :max=\"getMaxQuantity(prescriptionForm.drugName)\"\r\n        ></el-input-number>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"用药说明\">\r\n        <el-input\r\n            type=\"textarea\"\r\n            v-model=\"prescriptionForm.instructions\"\r\n            placeholder=\"请输入用药说明\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleAddPrescription\">添加药品</el-button>\r\n        <el-button type=\"info\" @click=\"handleResetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 已开药品列表 -->\r\n    <el-table :data=\"prescriptionList\" stripe class=\"prescription-table\">\r\n      <el-table-column prop=\"drugName\" label=\"药品名称\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"quantity\" label=\"数量\" width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"instructions\" label=\"用药说明\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDeletePrescription(scope.row)\"\r\n          >删除</el-button\r\n          >\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 提交按钮 -->\r\n    <div class=\"submit-section\">\r\n      <el-button type=\"success\" @click=\"handleSubmitPrescription\">提交开药</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PrescribingAdministration',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      // 开药表单数据\r\n      prescriptionForm: {\r\n        drugId: '', // 药品ID\r\n        drugName: '', // 药品名称\r\n        quantity: 1, // 药品数量\r\n        instructions: '', // 用药说明\r\n      },\r\n      // 已开药品列表\r\n      prescriptionList: [],\r\n      // 药物库存选项\r\n      drugOptions: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchDrugStock(); // 加载药物库存信息\r\n  },\r\n  methods: {\r\n    // 获取药物库存信息\r\n    fetchDrugStock() {\r\n      console.log(this.$route.params.id)\r\n      console.log(this.user.id)\r\n      this.$request\r\n          .get('/stock/selectByDocId', {\r\n            params: {\r\n             doctorId: this.user.id,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data && response.data.length > 0) {\r\n              this.drugOptions = response.data.filter((drug) => drug.type === 1); // 只显示药物类型\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('获取药物库存信息失败:', error);\r\n            this.$message.error('获取药物库存信息失败，请稍后重试');\r\n          });\r\n    },\r\n\r\n    // 处理药物选择\r\n    handleDrugChange(selectedDrugName) {\r\n      const selectedDrug = this.drugOptions.find((drug) => drug.name === selectedDrugName);\r\n      if (selectedDrug) {\r\n        this.prescriptionForm.drugName = selectedDrug.name;\r\n        this.prescriptionForm.quantity = 1; // 重置数量\r\n      }\r\n    },\r\n\r\n    // 获取药品的最大数量（基于库存）\r\n    getMaxQuantity(drugName) {\r\n      const selectedDrug = this.drugOptions.find((drug) => drug.name === drugName);\r\n      return selectedDrug ? selectedDrug.stock : 100; // 默认最大值为100\r\n    },\r\n\r\n    // 添加药品到列表\r\n    handleAddPrescription() {\r\n      if (!this.prescriptionForm.drugName || !this.prescriptionForm.instructions) {\r\n        this.$message.warning('请填写完整的药品信息');\r\n        return;\r\n      }\r\n      this.prescriptionList.push({ ...this.prescriptionForm });\r\n      this.handleResetForm(); // 添加后重置表单\r\n    },\r\n\r\n    // 重置表单\r\n    handleResetForm() {\r\n      this.prescriptionForm = {\r\n        drugName: '',\r\n        quantity: 1,\r\n        instructions: '',\r\n      };\r\n    },\r\n\r\n    // 删除药品\r\n    handleDeletePrescription(row) {\r\n      this.prescriptionList = this.prescriptionList.filter(\r\n          (item) => item.drugName !== row.drugName\r\n      );\r\n      this.$message.success('删除成功');\r\n    },\r\n\r\n    // 提交开药\r\n    handleSubmitPrescription() {\r\n      if (this.prescriptionList.length === 0) {\r\n        this.$message.warning('请至少添加一种药品');\r\n        return;\r\n      }\r\n      this.$confirm('是否确认提交开药信息？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n          .then(() => {\r\n            // 组合要发送的数据\r\n            const dataToSend = {\r\n              prescriptions: this.prescriptionList,\r\n              order: this.$route.params.id\r\n            };\r\n            this.$request.post('/prescribe/submit', dataToSend)\r\n                .then(response => {\r\n                  if (response.code == 200) {\r\n                    this.$message.success('开药信息提交成功');\r\n                    this.prescriptionList = []; // 清空列表\r\n                  } else {\r\n                    this.$message.error(response.data.message || '开药信息提交失败');\r\n                  }\r\n                })\r\n                .catch(error => {\r\n                  console.error('开药信息提交失败:', error);\r\n                  this.$message.error('开药信息提交失败，请稍后重试');\r\n                });\r\n          })\r\n          .catch(() => {\r\n            this.$message.info('已取消提交');\r\n          });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.prescribing-administration {\r\n  padding: 20px;\r\n}\r\n\r\n.prescription-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.prescription-table {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.submit-section {\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}