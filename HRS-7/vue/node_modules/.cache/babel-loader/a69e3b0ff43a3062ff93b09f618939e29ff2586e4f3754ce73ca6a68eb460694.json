{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport dayjs from 'dayjs';\nimport { getSchedulesByDepartment, addSchedule, updateSchedule, deleteSchedule } from '@/api/scheduleApi';\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'Schedule',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      loading: false,\n      hospitalId: null,\n      departments: [],\n      selectedDepartment: null,\n      doctors: [],\n      currentWeek: this.getNextWeekStartDate(),\n      weekDays: [],\n      scheduleData: [],\n      leaveInfo: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      // 新增的请假详情相关数据\n      leaveDetailVisible: false,\n      currentLeave: null,\n      currentDoctorName: ''\n    };\n  },\n  created() {\n    this.fetchDepartments();\n    this.generateWeekDays();\n  },\n  methods: {\n    getNextWeekStartDate() {\n      const today = new Date();\n      const nextMonday = new Date(today);\n      nextMonday.setDate(today.getDate() + ((1 + 7 - today.getDay()) % 7 || 7));\n      return nextMonday;\n    },\n    generateWeekDays() {\n      const startDate = new Date(this.currentWeek);\n      this.weekDays = [];\n      for (let i = 0; i < 7; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + i);\n        this.weekDays.push({\n          date: parseTime(date, '{y}-{m}-{d}'),\n          label: parseTime(date, '{m}-{d} 周') + ['日', '一', '二', '三', '四', '五', '六'][date.getDay()]\n        });\n      }\n    },\n    fetchDepartments() {\n      this.$request.get('/hospital/departmentList', {\n        params: {\n          userId: this.user.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.departments = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取科室列表失败');\n        }\n      });\n    },\n    async handleDepartmentClick(data) {\n      this.selectedDepartment = data;\n      await this.fetchDoctors(data.id);\n      await this.fetchSchedules();\n      await this.fetchLeaveInfo();\n    },\n    fetchDoctors(departmentId) {\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\n        params: {\n          userId: this.user.id,\n          departmentId: departmentId\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.doctors = response.data;\n          this.prepareScheduleData();\n        } else {\n          this.$message.error(response.data.message || '获取医生列表失败');\n        }\n      });\n    },\n    prepareScheduleData() {\n      this.scheduleData = this.doctors.map(doctor => {\n        const schedules = {};\n        this.weekDays.forEach(day => {\n          schedules[day.date] = null;\n        });\n        return {\n          doctorId: doctor.id,\n          doctorName: doctor.name,\n          schedules: schedules\n        };\n      });\n    },\n    async fetchSchedules() {\n      if (!this.selectedDepartment) return;\n      this.loading = true;\n      this.generateWeekDays();\n      this.prepareScheduleData();\n      this.fetchLeaveInfo();\n      try {\n        const startDate = new Date(this.currentWeek);\n        const endDate = new Date(startDate);\n        endDate.setDate(startDate.getDate() + 6);\n        const response = await getSchedulesByDepartment(this.user.id, this.selectedDepartment.id, startDate, endDate);\n        response.data.forEach(schedule => {\n          const scheduleDate = parseTime(schedule.scheduleDate, '{y}-{m}-{d}');\n          const doctorSchedule = this.scheduleData.find(item => item.doctorId === schedule.doctorId);\n          if (doctorSchedule) {\n            doctorSchedule.schedules[scheduleDate] = schedule.shift_type;\n          }\n        });\n      } catch (error) {\n        console.error('获取排班信息失败:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchLeaveInfo() {\n      if (!this.selectedDepartment) return;\n      try {\n        const startDate = new Date(this.currentWeek);\n        const endDate = new Date(startDate);\n        endDate.setDate(startDate.getDate() + 6);\n        const response = await this.$request.get('/api/schedule/leave/list', {\n          params: {\n            hospitalAdminId: this.user.id,\n            departmentId: this.selectedDepartment.id,\n            startDate: startDate.toISOString().split('T')[0],\n            endDate: endDate.toISOString().split('T')[0]\n          }\n        });\n        if (response.code == 200) {\n          this.leaveInfo = response.data || [];\n        } else {\n          this.$message.error(response.message || '获取请假信息失败');\n        }\n      } catch (error) {\n        console.error('获取请假信息失败:', error);\n        this.$message.error('获取请假信息失败');\n      }\n    },\n    hasLeaveInfo(doctorId) {\n      return this.leaveInfo.some(leave => leave.doctorId === doctorId);\n    },\n    getLeaveInfo(doctorId) {\n      return this.leaveInfo.filter(leave => leave.doctorId === doctorId);\n    },\n    formatLeaveDate(date) {\n      return dayjs(date).format('MM-DD');\n    },\n    formatDateTime(date) {\n      return dayjs(date).format('YYYY-MM-DD HH:mm:ss');\n    },\n    getLeaveTypeName(type) {\n      const map = {\n        personal: '事假',\n        sick: '病假',\n        annual: '年假',\n        other: '其他'\n      };\n      return map[type] || type;\n    },\n    getLeaveTagType(status) {\n      const map = {\n        PENDING: 'warning',\n        APPROVED: 'success',\n        REJECTED: 'danger',\n        CANCELLED: 'info'\n      };\n      return map[status] || '';\n    },\n    getLeaveStatusName(status) {\n      const map = {\n        PENDING: '待审批',\n        APPROVED: '已通过',\n        REJECTED: '已拒绝',\n        CANCELLED: '已取消'\n      };\n      return map[status] || status;\n    },\n    async handleShiftChange(doctorId, date, shiftType) {\n      try {\n        const existingSchedule = await this.findExistingSchedule(doctorId, date);\n        if (shiftType) {\n          if (existingSchedule) {\n            await updateSchedule({\n              id: existingSchedule.id,\n              shift_type: shiftType\n            });\n          } else {\n            await addSchedule({\n              hospitalId: this.user.id,\n              departmentId: this.selectedDepartment.id,\n              doctorId: doctorId,\n              scheduleDate: date,\n              shiftType: shiftType,\n              fatigueScore: 0\n            });\n          }\n        } else {\n          if (existingSchedule) {\n            await deleteSchedule(existingSchedule.id);\n          }\n        }\n        this.$message.success('排班更新成功');\n      } catch (error) {\n        console.error('更新排班失败:', error);\n        this.$message.error('排班更新失败');\n      }\n    },\n    async findExistingSchedule(doctorId, date) {\n      try {\n        const response = await getSchedulesByDepartment(this.user.id, this.selectedDepartment.id, new Date(date));\n        return response.data.find(item => item.doctorId === doctorId && parseTime(item.scheduleDate, '{y}-{m}-{d}') === date);\n      } catch (error) {\n        console.error('查找排班记录失败:', error);\n        return null;\n      }\n    },\n    showNextWeek() {\n      const nextWeek = new Date(this.currentWeek);\n      nextWeek.setDate(nextWeek.getDate() + 7);\n      this.currentWeek = nextWeek;\n      this.fetchSchedules();\n      this.fetchLeaveInfo();\n    },\n    showLeaveDetail(leave, doctorName) {\n      this.currentLeave = leave;\n      this.currentDoctorName = doctorName;\n      this.leaveDetailVisible = true;\n    },\n    async handleLeaveAction(action) {\n      if (action == 1) {\n        try {\n          console.log(action);\n          this.loading = true;\n          const id = this.currentLeave.id;\n          const response = await this.$request.post(`/api/schedule/leave/approve/${id}`);\n          if (response.code == 200) {\n            this.$message.success(`请假${action == '1' ? '通过' : '拒绝'}成功`);\n            await this.fetchLeaveInfo(); // 重新加载请假信息\n            this.leaveDetailVisible = false; // 关闭对话框\n          } else {\n            this.$message.error(response.message || '操作失败');\n          }\n        } catch (error) {\n          console.error('处理请假失败:', error);\n          this.$message.error('操作失败');\n        } finally {\n          this.loading = false;\n        }\n      } else {\n        await this.fetchLeaveInfo(); // 重新加载请假信息\n        this.leaveDetailVisible = false; // 关闭对话框\n      }\n    }\n  }\n};","map":{"version":3,"names":["dayjs","getSchedulesByDepartment","addSchedule","updateSchedule","deleteSchedule","parseTime","name","data","user","JSON","parse","localStorage","getItem","loading","hospitalId","departments","selectedDepartment","doctors","currentWeek","getNextWeekStartDate","weekDays","scheduleData","leaveInfo","defaultProps","children","label","leaveDetailVisible","currentLeave","currentDoctorName","created","fetchDepartments","generateWeekDays","methods","today","Date","nextMonday","setDate","getDate","getDay","startDate","i","date","push","$request","get","params","userId","id","then","response","code","$message","error","message","handleDepartmentClick","fetchDoctors","fetchSchedules","fetchLeaveInfo","departmentId","prepareScheduleData","map","doctor","schedules","forEach","day","doctorId","doctorName","endDate","schedule","scheduleDate","doctorSchedule","find","item","shift_type","console","hospitalAdminId","toISOString","split","hasLeaveInfo","some","leave","getLeaveInfo","filter","formatLeaveDate","format","formatDateTime","getLeaveTypeName","type","personal","sick","annual","other","getLeaveTagType","status","PENDING","APPROVED","REJECTED","CANCELLED","getLeaveStatusName","handleShiftChange","shiftType","existingSchedule","findExistingSchedule","fatigueScore","success","showNextWeek","nextWeek","showLeaveDetail","handleLeaveAction","action","log","post"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\hospitalAdmin\\Scheduling.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <!-- 原有头部代码保持不变 -->\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生排班管理</span>\r\n        <el-button\r\n            style=\"float: right; padding: 3px 0\"\r\n            type=\"text\"\r\n            @click=\"showNextWeek\"\r\n        >\r\n          排下一周班次\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>排班表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-date-picker\r\n                    v-model=\"currentWeek\"\r\n                    type=\"week\"\r\n                    format=\"yyyy 第 WW 周\"\r\n                    placeholder=\"选择周\"\r\n                    @change=\"fetchSchedules\"\r\n                >\r\n                </el-date-picker>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"scheduleData\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <!-- 原有表格列保持不变 -->\r\n              <el-table-column prop=\"doctorName\" label=\"医生\" width=\"150\" fixed>\r\n                <template slot-scope=\"scope\">\r\n                  {{ scope.row.doctorName }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column\r\n                  v-for=\"day in weekDays\"\r\n                  :key=\"day.date\"\r\n                  :label=\"day.label\"\r\n                  width=\"150\"\r\n              >\r\n                <template slot-scope=\"scope\">\r\n                  <el-select\r\n                      v-model=\"scope.row.schedules[day.date]\"\r\n                      placeholder=\"班次\"\r\n                      size=\"mini\"\r\n                      @change=\"handleShiftChange(scope.row.doctorId, day.date, $event)\"\r\n                  >\r\n                    <el-option label=\"白班\" value=\"DAY\"></el-option>\r\n                    <el-option label=\"夜班\" value=\"NIGHT\"></el-option>\r\n                    <el-option label=\"休息\" :value=\"null\"></el-option>\r\n                  </el-select>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <!-- 修改后的请假信息列 -->\r\n              <el-table-column label=\"请假信息\" width=\"180\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                  <div v-if=\"hasLeaveInfo(scope.row.doctorId)\" class=\"leave-info\">\r\n                    <el-tag\r\n                        v-for=\"leave in getLeaveInfo(scope.row.doctorId)\"\r\n                        :key=\"leave.id\"\r\n                        :type=\"getLeaveTagType(leave.status)\"\r\n                        size=\"mini\"\r\n                        style=\"margin-right: 5px; margin-bottom: 5px; cursor: pointer;\"\r\n                        @click=\"showLeaveDetail(leave, scope.row.doctorName)\"\r\n                    >\r\n                      {{ formatLeaveDate(leave.leaveDate) }}: {{ getLeaveTypeName(leave.type) }}\r\n                    </el-tag>\r\n                  </div>\r\n                  <div v-else class=\"no-leave\">\r\n                    无请假\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <!-- 请假详情对话框 -->\r\n    <el-dialog\r\n        title=\"请假详情\"\r\n        :visible.sync=\"leaveDetailVisible\"\r\n        width=\"500px\"\r\n        :close-on-click-modal=\"false\"\r\n    >\r\n      <div v-if=\"currentLeave\" class=\"leave-detail\">\r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"医生姓名\">{{ currentDoctorName }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请假日期\">{{ formatLeaveDate(currentLeave.leaveDate) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请假类型\">{{ getLeaveTypeName(currentLeave.leaveType) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请假原因\">{{ currentLeave.reason }}</el-descriptions-item>\r\n\r\n          <el-descriptions-item label=\"申请时间\">{{ formatDateTime(currentLeave.createTime) }}</el-descriptions-item>\r\n        </el-descriptions>\r\n\r\n        <div v-if=\"currentLeave.approvalStatus == '0'\" class=\"leave-actions\">\r\n          <el-button type=\"success\" @click=\"handleLeaveAction('1')\">通过申请</el-button>\r\n          <el-button type=\"danger\" @click=\"handleLeaveAction('0')\">拒绝申请</el-button>\r\n        </div>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"leaveDetailVisible = false\">关 闭</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from 'dayjs'\r\nimport {\r\n  getSchedulesByDepartment,\r\n  addSchedule,\r\n  updateSchedule,\r\n  deleteSchedule\r\n} from '@/api/scheduleApi'\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'Schedule',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      hospitalId: null,\r\n      departments: [],\r\n      selectedDepartment: null,\r\n      doctors: [],\r\n      currentWeek: this.getNextWeekStartDate(),\r\n      weekDays: [],\r\n      scheduleData: [],\r\n      leaveInfo: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      },\r\n      // 新增的请假详情相关数据\r\n      leaveDetailVisible: false,\r\n      currentLeave: null,\r\n      currentDoctorName: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchDepartments()\r\n    this.generateWeekDays()\r\n  },\r\n  methods: {\r\n    getNextWeekStartDate() {\r\n      const today = new Date()\r\n      const nextMonday = new Date(today)\r\n      nextMonday.setDate(today.getDate() + ((1 + 7 - today.getDay()) % 7 || 7))\r\n      return nextMonday\r\n    },\r\n    generateWeekDays() {\r\n      const startDate = new Date(this.currentWeek)\r\n      this.weekDays = []\r\n      for (let i = 0; i < 7; i++) {\r\n        const date = new Date(startDate)\r\n        date.setDate(startDate.getDate() + i)\r\n        this.weekDays.push({\r\n          date: parseTime(date, '{y}-{m}-{d}'),\r\n          label: parseTime(date, '{m}-{d} 周') + ['日', '一', '二', '三', '四', '五', '六'][date.getDay()]\r\n        })\r\n      }\r\n    },\r\n    fetchDepartments() {\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          this.departments = response.data\r\n        } else {\r\n          this.$message.error(response.data.message || '获取科室列表失败')\r\n        }\r\n      })\r\n    },\r\n    async handleDepartmentClick(data) {\r\n      this.selectedDepartment = data\r\n      await this.fetchDoctors(data.id)\r\n      await this.fetchSchedules()\r\n      await this.fetchLeaveInfo()\r\n    },\r\n    fetchDoctors(departmentId) {\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: departmentId\r\n        }\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          this.doctors = response.data\r\n          this.prepareScheduleData()\r\n        } else {\r\n          this.$message.error(response.data.message || '获取医生列表失败')\r\n        }\r\n      })\r\n    },\r\n    prepareScheduleData() {\r\n      this.scheduleData = this.doctors.map(doctor => {\r\n        const schedules = {}\r\n        this.weekDays.forEach(day => {\r\n          schedules[day.date] = null\r\n        })\r\n        return {\r\n          doctorId: doctor.id,\r\n          doctorName: doctor.name,\r\n          schedules: schedules\r\n        }\r\n      })\r\n    },\r\n    async fetchSchedules() {\r\n      if (!this.selectedDepartment) return\r\n\r\n      this.loading = true\r\n      this.generateWeekDays()\r\n      this.prepareScheduleData()\r\n      this.fetchLeaveInfo()\r\n      try {\r\n        const startDate = new Date(this.currentWeek)\r\n        const endDate = new Date(startDate)\r\n        endDate.setDate(startDate.getDate() + 6)\r\n\r\n        const response = await getSchedulesByDepartment(\r\n            this.user.id,\r\n            this.selectedDepartment.id,\r\n            startDate,\r\n            endDate\r\n        )\r\n\r\n        response.data.forEach(schedule => {\r\n          const scheduleDate = parseTime(schedule.scheduleDate, '{y}-{m}-{d}')\r\n          const doctorSchedule = this.scheduleData.find(\r\n              item => item.doctorId === schedule.doctorId\r\n          )\r\n          if (doctorSchedule) {\r\n            doctorSchedule.schedules[scheduleDate] = schedule.shift_type\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('获取排班信息失败:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async fetchLeaveInfo() {\r\n      if (!this.selectedDepartment) return;\r\n\r\n      try {\r\n        const startDate = new Date(this.currentWeek)\r\n        const endDate = new Date(startDate)\r\n        endDate.setDate(startDate.getDate() + 6)\r\n\r\n        const response = await this.$request.get('/api/schedule/leave/list', {\r\n          params: {\r\n            hospitalAdminId: this.user.id,\r\n            departmentId: this.selectedDepartment.id,\r\n            startDate: startDate.toISOString().split('T')[0],\r\n            endDate: endDate.toISOString().split('T')[0]\r\n          }\r\n        });\r\n\r\n        if (response.code == 200) {\r\n          this.leaveInfo = response.data || [];\r\n        } else {\r\n          this.$message.error(response.message || '获取请假信息失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取请假信息失败:', error);\r\n        this.$message.error('获取请假信息失败');\r\n      }\r\n    },\r\n    hasLeaveInfo(doctorId) {\r\n      return this.leaveInfo.some(leave => leave.doctorId === doctorId);\r\n    },\r\n    getLeaveInfo(doctorId) {\r\n      return this.leaveInfo.filter(leave => leave.doctorId === doctorId);\r\n    },\r\n    formatLeaveDate(date) {\r\n      return dayjs(date).format('MM-DD');\r\n    },\r\n    formatDateTime(date) {\r\n      return dayjs(date).format('YYYY-MM-DD HH:mm:ss');\r\n    },\r\n    getLeaveTypeName(type) {\r\n      const map = {\r\n        personal: '事假',\r\n        sick: '病假',\r\n        annual: '年假',\r\n        other: '其他'\r\n      };\r\n      return map[type] || type;\r\n    },\r\n    getLeaveTagType(status) {\r\n      const map = {\r\n        PENDING: 'warning',\r\n        APPROVED: 'success',\r\n        REJECTED: 'danger',\r\n        CANCELLED: 'info'\r\n      };\r\n      return map[status] || '';\r\n    },\r\n    getLeaveStatusName(status) {\r\n      const map = {\r\n        PENDING: '待审批',\r\n        APPROVED: '已通过',\r\n        REJECTED: '已拒绝',\r\n        CANCELLED: '已取消'\r\n      };\r\n      return map[status] || status;\r\n    },\r\n    async handleShiftChange(doctorId, date, shiftType) {\r\n      try {\r\n        const existingSchedule = await this.findExistingSchedule(doctorId, date)\r\n\r\n        if (shiftType) {\r\n          if (existingSchedule) {\r\n            await updateSchedule({\r\n              id: existingSchedule.id,\r\n              shift_type: shiftType\r\n            })\r\n          } else {\r\n            await addSchedule({\r\n              hospitalId: this.user.id,\r\n              departmentId: this.selectedDepartment.id,\r\n              doctorId: doctorId,\r\n              scheduleDate: date,\r\n              shiftType: shiftType,\r\n              fatigueScore: 0\r\n            })\r\n          }\r\n        } else {\r\n          if (existingSchedule) {\r\n            await deleteSchedule(existingSchedule.id)\r\n          }\r\n        }\r\n\r\n        this.$message.success('排班更新成功')\r\n      } catch (error) {\r\n        console.error('更新排班失败:', error)\r\n        this.$message.error('排班更新失败')\r\n      }\r\n    },\r\n    async findExistingSchedule(doctorId, date) {\r\n      try {\r\n        const response = await getSchedulesByDepartment(\r\n            this.user.id,\r\n            this.selectedDepartment.id,\r\n            new Date(date))\r\n        return response.data.find(\r\n            item => item.doctorId === doctorId &&\r\n                parseTime(item.scheduleDate, '{y}-{m}-{d}') === date\r\n        )\r\n      } catch (error) {\r\n        console.error('查找排班记录失败:', error)\r\n        return null\r\n      }\r\n    },\r\n    showNextWeek() {\r\n      const nextWeek = new Date(this.currentWeek)\r\n      nextWeek.setDate(nextWeek.getDate() + 7)\r\n      this.currentWeek = nextWeek\r\n      this.fetchSchedules()\r\n      this.fetchLeaveInfo()\r\n    },\r\n\r\n    showLeaveDetail(leave, doctorName) {\r\n      this.currentLeave = leave;\r\n      this.currentDoctorName = doctorName;\r\n      this.leaveDetailVisible = true;\r\n    },\r\n\r\n    async handleLeaveAction(action) {\r\n      if(action == 1){\r\n        try {\r\n          console.log(action)\r\n          this.loading = true;\r\n          const id = this.currentLeave.id;\r\n          const response = await this.$request.post(`/api/schedule/leave/approve/${id}`);\r\n          if (response.code == 200) {\r\n            this.$message.success(`请假${action == '1' ? '通过' : '拒绝'}成功`);\r\n            await this.fetchLeaveInfo(); // 重新加载请假信息\r\n            this.leaveDetailVisible = false; // 关闭对话框\r\n          } else {\r\n            this.$message.error(response.message || '操作失败');\r\n          }\r\n        } catch (error) {\r\n          console.error('处理请假失败:', error);\r\n          this.$message.error('操作失败');\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      }else{\r\n        await this.fetchLeaveInfo(); // 重新加载请假信息\r\n        this.leaveDetailVisible = false; // 关闭对话框\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.leave-info {\r\n  min-height: 40px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n}\r\n\r\n.no-leave {\r\n  color: #999;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n/* 新增样式 */\r\n.leave-detail {\r\n  padding: 10px;\r\n}\r\n\r\n.leave-actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.leave-actions .el-button {\r\n  margin: 0 10px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}