{"ast":null,"code":"export default {\n  name: 'Registration',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      doctor: null,\n      isLoading: true,\n      morningTimeSlots: ['上午 9-10点', '上午 10-11点', '上午 11-12点'],\n      // 上午时间段\n      afternoonTimeSlots: ['下午 2-3点', '下午 3-4点', '下午 4-5点', '下午 5-6点'] // 下午时间段\n    };\n  },\n\n  created() {\n    const doctorId = this.$route.params.doctorId;\n    if (doctorId) {\n      this.fetchDoctorInfo(doctorId);\n    } else {\n      this.isLoading = false;\n    }\n  },\n  methods: {\n    fetchDoctorInfo(doctorId) {\n      this.$request.get('/doctor/selectDoctorById', {\n        params: {\n          doctorId\n        }\n      }).then(response => {\n        if (response.data) {\n          this.doctor = response.data;\n        } else {\n          console.error('获取医生详细信息失败:', response.data);\n          this.$message.error('获取医生详细信息失败，请稍后重试');\n        }\n      }).catch(error => {\n        console.error('获取医生详细信息失败:', error);\n        this.$message.error('获取医生详细信息失败，请稍后重试');\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    getRegistrationRoute(date, timeSlot) {\n      return {\n        name: 'SubmitRegistration',\n        // 提交挂号界面的路由名称\n        query: {\n          doctorId: this.$route.params.doctorId,\n          // 医生 ID\n          date: date,\n          // 挂号日期\n          timeSlot: timeSlot,\n          // 具体时间段（如 \"上午 9-10点\"）\n          price: this.getPrice(this.doctor.status, timeSlot) // 挂号价格\n        }\n      };\n    },\n\n    getDoctorTitle(status) {\n      switch (status) {\n        case 1:\n          return '医师';\n        case 2:\n          return '副主治医师';\n        case 3:\n          return '主治医师';\n        case 4:\n          return '专家';\n        case 5:\n          return '急诊';\n        default:\n          return '未知职称';\n      }\n    },\n    getDates() {\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const day = String(today.getDate()).padStart(2, '0');\n      return [`${year}-${month}-${day}`];\n    },\n    getPrice(status, timeSlot) {\n      // 这里可以根据职称和时间段设置不同的价格\n      const isMorning = timeSlot.includes('上午');\n      switch (status) {\n        case 1:\n          return isMorning ? 50 : 40;\n        case 2:\n          return isMorning ? 80 : 70;\n        case 3:\n          return isMorning ? 100 : 90;\n        case 4:\n          return isMorning ? 150 : 120;\n        case 5:\n          return isMorning ? 60 : 50;\n        default:\n          return 0;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","doctor","isLoading","morningTimeSlots","afternoonTimeSlots","created","doctorId","$route","params","fetchDoctorInfo","methods","$request","get","then","response","console","error","$message","catch","finally","getRegistrationRoute","date","timeSlot","query","price","getPrice","status","getDoctorTitle","getDates","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","isMorning","includes"],"sources":["src/views/manager/Registration.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-page\">\r\n    <div class=\"doctor-info\" v-if=\"doctor\">\r\n      <h2>{{ doctor.name }} - {{ getDoctorTitle(doctor.status) }}</h2>\r\n      <p>{{ doctor.introduction }}</p>\r\n    </div>\r\n    <div class=\"registration-info\" v-if=\"doctor\">\r\n      <h2>挂号信息</h2>\r\n      <ul>\r\n        <!-- 上午时间段 -->\r\n        <li v-for=\"(timeSlot, index) in morningTimeSlots\" :key=\"index\">\r\n          <router-link\r\n              :to=\"getRegistrationRoute(getDates()[0], timeSlot)\"\r\n              class=\"registration-link\"\r\n          >\r\n            {{ getDates()[0] }} - {{ timeSlot }} - 价格：{{ getPrice(doctor.status, timeSlot) }} 元\r\n          </router-link>\r\n        </li>\r\n        <!-- 下午时间段 -->\r\n        <li v-for=\"(timeSlot, index) in afternoonTimeSlots\" :key=\"index + 100\">\r\n          <router-link\r\n              :to=\"getRegistrationRoute(getDates()[0], timeSlot)\"\r\n              class=\"registration-link\"\r\n          >\r\n            {{ getDates()[0] }} - {{ timeSlot }} - 价格：{{ getPrice(doctor.status, timeSlot) }} 元\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else>\r\n      <p>未获取到医生信息，请稍后重试。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Registration',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      doctor: null,\r\n      isLoading: true,\r\n      morningTimeSlots: ['上午 9-10点', '上午 10-11点', '上午 11-12点'], // 上午时间段\r\n      afternoonTimeSlots: ['下午 2-3点', '下午 3-4点', '下午 4-5点', '下午 5-6点'] // 下午时间段\r\n    };\r\n  },\r\n  created() {\r\n    const doctorId = this.$route.params.doctorId;\r\n    if (doctorId) {\r\n      this.fetchDoctorInfo(doctorId);\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n  },\r\n  methods: {\r\n    fetchDoctorInfo(doctorId) {\r\n      this.$request.get('/doctor/selectDoctorById', {\r\n        params: { doctorId }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.doctor = response.data;\r\n            } else {\r\n              console.error('获取医生详细信息失败:', response.data);\r\n              this.$message.error('获取医生详细信息失败，请稍后重试');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生详细信息失败:', error);\r\n            this.$message.error('获取医生详细信息失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false;\r\n          });\r\n    },\r\n    getRegistrationRoute(date, timeSlot) {\r\n      return {\r\n        name: 'SubmitRegistration', // 提交挂号界面的路由名称\r\n        query: {\r\n          doctorId: this.$route.params.doctorId, // 医生 ID\r\n          date: date, // 挂号日期\r\n          timeSlot: timeSlot, // 具体时间段（如 \"上午 9-10点\"）\r\n          price: this.getPrice(this.doctor.status, timeSlot) // 挂号价格\r\n        }\r\n      };\r\n    },\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1:\r\n          return '医师';\r\n        case 2:\r\n          return '副主治医师';\r\n        case 3:\r\n          return '主治医师';\r\n        case 4:\r\n          return '专家';\r\n        case 5:\r\n          return '急诊';\r\n        default:\r\n          return '未知职称';\r\n      }\r\n    },\r\n    getDates() {\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth() + 1).padStart(2, '0');\r\n      const day = String(today.getDate()).padStart(2, '0');\r\n      return [`${year}-${month}-${day}`];\r\n    },\r\n    getPrice(status, timeSlot) {\r\n      // 这里可以根据职称和时间段设置不同的价格\r\n      const isMorning = timeSlot.includes('上午');\r\n      switch (status) {\r\n        case 1:\r\n          return isMorning ? 50 : 40;\r\n        case 2:\r\n          return isMorning ? 80 : 70;\r\n        case 3:\r\n          return isMorning ? 100 : 90;\r\n        case 4:\r\n          return isMorning ? 150 : 120;\r\n        case 5:\r\n          return isMorning ? 60 : 50;\r\n        default:\r\n          return 0;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-page {\r\n  padding: 20px;\r\n}\r\n\r\n.doctor-info {\r\n  height: 30%;\r\n  border-bottom: 1px solid #ccc;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.registration-info {\r\n  height: 70%;\r\n  padding-top: 20px;\r\n}\r\n\r\n.registration-link {\r\n  display: block;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.registration-link:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n</style>"],"mappings":"AAoCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,MAAA;MACAC,SAAA;MACAC,gBAAA;MAAA;MACAC,kBAAA;IACA;EACA;;EACAC,QAAA;IACA,MAAAC,QAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,QAAA;IACA,IAAAA,QAAA;MACA,KAAAG,eAAA,CAAAH,QAAA;IACA;MACA,KAAAJ,SAAA;IACA;EACA;EACAQ,OAAA;IACAD,gBAAAH,QAAA;MACA,KAAAK,QAAA,CAAAC,GAAA;QACAJ,MAAA;UAAAF;QAAA;MACA,GACAO,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAnB,IAAA;UACA,KAAAM,MAAA,GAAAa,QAAA,CAAAnB,IAAA;QACA;UACAoB,OAAA,CAAAC,KAAA,gBAAAF,QAAA,CAAAnB,IAAA;UACA,KAAAsB,QAAA,CAAAD,KAAA;QACA;MACA,GACAE,KAAA,CAAAF,KAAA;QACAD,OAAA,CAAAC,KAAA,gBAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA,GACAG,OAAA;QACA,KAAAjB,SAAA;MACA;IACA;IACAkB,qBAAAC,IAAA,EAAAC,QAAA;MACA;QACA5B,IAAA;QAAA;QACA6B,KAAA;UACAjB,QAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,QAAA;UAAA;UACAe,IAAA,EAAAA,IAAA;UAAA;UACAC,QAAA,EAAAA,QAAA;UAAA;UACAE,KAAA,OAAAC,QAAA,MAAAxB,MAAA,CAAAyB,MAAA,EAAAJ,QAAA;QACA;MACA;IACA;;IACAK,eAAAD,MAAA;MACA,QAAAA,MAAA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;IACAE,SAAA;MACA,MAAAC,KAAA,OAAAC,IAAA;MACA,MAAAC,IAAA,GAAAF,KAAA,CAAAG,WAAA;MACA,MAAAC,KAAA,GAAAC,MAAA,CAAAL,KAAA,CAAAM,QAAA,QAAAC,QAAA;MACA,MAAAC,GAAA,GAAAH,MAAA,CAAAL,KAAA,CAAAS,OAAA,IAAAF,QAAA;MACA,WAAAL,IAAA,IAAAE,KAAA,IAAAI,GAAA;IACA;IACAZ,SAAAC,MAAA,EAAAJ,QAAA;MACA;MACA,MAAAiB,SAAA,GAAAjB,QAAA,CAAAkB,QAAA;MACA,QAAAd,MAAA;QACA;UACA,OAAAa,SAAA;QACA;UACA,OAAAA,SAAA;QACA;UACA,OAAAA,SAAA;QACA;UACA,OAAAA,SAAA;QACA;UACA,OAAAA,SAAA;QACA;UACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}