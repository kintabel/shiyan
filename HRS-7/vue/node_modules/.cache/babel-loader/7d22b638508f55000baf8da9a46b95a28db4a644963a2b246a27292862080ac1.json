{"ast":null,"code":"export default {\n  name: 'SubmitRegistration',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      // 从 localStorage 获取用户信息\n      doctor: null,\n      nowUser: null,\n      registrationDate: this.$route.query.date,\n      registrationTime: this.$route.query.time,\n      registrationPrice: this.$route.query.price,\n      isLoading: true\n    };\n  },\n  created() {\n    const doctorId = this.$route.query.doctorId;\n    const userId = this.user.id;\n    if (doctorId) {\n      this.fetchDoctorInfo(doctorId);\n    } else {\n      this.isLoading = false;\n    }\n    this.fetchUserInfo(userId), console.log('当前用户信息:', this.user); // 打印用户信息\n  },\n\n  methods: {\n    fetchDoctorInfo(doctorId) {\n      this.$request.get('/doctor/selectDoctorById', {\n        params: {\n          doctorId\n        }\n      }).then(response => {\n        if (response.data) {\n          this.doctor = response.data;\n        } else {\n          console.error('获取医生详细信息失败:', response.data);\n          this.$message.error('获取医生详细信息失败，请稍后重试');\n        }\n      }).catch(error => {\n        console.error('获取医生详细信息失败:', error);\n        this.$message.error('获取医生详细信息失败，请稍后重试');\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    fetchUserInfo(userId) {\n      this.$request.get('/user/selectById', {\n        params: {\n          userId\n        }\n      }).then(response => {\n        if (response.data) {\n          this.nowUser = response.data;\n        } else {\n          console.error('获取医生详细信息失败:', response.data);\n          this.$message.error('获取医生详细信息失败，请稍后重试');\n        }\n      }).catch(error => {\n        console.error('获取医生详细信息失败:', error);\n        this.$message.error('获取医生详细信息失败，请稍后重试');\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","doctor","nowUser","registrationDate","$route","query","date","registrationTime","time","registrationPrice","price","isLoading","created","doctorId","userId","id","fetchDoctorInfo","fetchUserInfo","console","log","methods","$request","get","params","then","response","error","$message","catch","finally"],"sources":["src/views/manager/SubmitRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"submit-registration-page\">\r\n    <h2>提交挂号信息</h2>\r\n    <div v-if=\"doctor\">\r\n      <p>医生姓名：{{ doctor.name }}</p>\r\n      <p>挂号日期：{{ registrationDate }}</p>\r\n      <p>时间段：{{ registrationTime }}</p>\r\n      <p>价格：{{ registrationPrice }} 元</p>\r\n      <p>用户：{{ nowUser.name }}</p>\r\n      <p>用户联系方式：{{ nowUser.phone }}</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>未获取到医生信息，请稍后重试。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SubmitRegistration',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'), // 从 localStorage 获取用户信息\r\n      doctor: null,\r\n      nowUser:null,\r\n      registrationDate: this.$route.query.date,\r\n      registrationTime: this.$route.query.time,\r\n      registrationPrice: this.$route.query.price,\r\n      isLoading: true\r\n    };\r\n  },\r\n  created() {\r\n    const doctorId = this.$route.query.doctorId;\r\n    const userId = this.user.id;\r\n    if (doctorId) {\r\n      this.fetchDoctorInfo(doctorId);\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n    this.fetchUserInfo(userId),\r\n    console.log('当前用户信息:', this.user); // 打印用户信息\r\n  },\r\n  methods: {\r\n    fetchDoctorInfo(doctorId) {\r\n      this.$request.get('/doctor/selectDoctorById', {\r\n        params: { doctorId }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.doctor = response.data;\r\n            } else {\r\n              console.error('获取医生详细信息失败:', response.data);\r\n              this.$message.error('获取医生详细信息失败，请稍后重试');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生详细信息失败:', error);\r\n            this.$message.error('获取医生详细信息失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false;\r\n          });\r\n    },\r\n    fetchUserInfo(userId) {\r\n      this.$request.get('/user/selectById', {\r\n        params: {userId}\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.nowUser = response.data;\r\n            } else {\r\n              console.error('获取医生详细信息失败:', response.data);\r\n              this.$message.error('获取医生详细信息失败，请稍后重试');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生详细信息失败:', error);\r\n            this.$message.error('获取医生详细信息失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false;\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.submit-registration-page {\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"AAkBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MAAA;MACAC,MAAA;MACAC,OAAA;MACAC,gBAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA;MACAC,gBAAA,OAAAH,MAAA,CAAAC,KAAA,CAAAG,IAAA;MACAC,iBAAA,OAAAL,MAAA,CAAAC,KAAA,CAAAK,KAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,QAAA,QAAAT,MAAA,CAAAC,KAAA,CAAAQ,QAAA;IACA,MAAAC,MAAA,QAAAlB,IAAA,CAAAmB,EAAA;IACA,IAAAF,QAAA;MACA,KAAAG,eAAA,CAAAH,QAAA;IACA;MACA,KAAAF,SAAA;IACA;IACA,KAAAM,aAAA,CAAAH,MAAA,GACAI,OAAA,CAAAC,GAAA,iBAAAvB,IAAA;EACA;;EACAwB,OAAA;IACAJ,gBAAAH,QAAA;MACA,KAAAQ,QAAA,CAAAC,GAAA;QACAC,MAAA;UAAAV;QAAA;MACA,GACAW,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAA9B,IAAA;UACA,KAAAM,MAAA,GAAAwB,QAAA,CAAA9B,IAAA;QACA;UACAuB,OAAA,CAAAQ,KAAA,gBAAAD,QAAA,CAAA9B,IAAA;UACA,KAAAgC,QAAA,CAAAD,KAAA;QACA;MACA,GACAE,KAAA,CAAAF,KAAA;QACAR,OAAA,CAAAQ,KAAA,gBAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA,GACAG,OAAA;QACA,KAAAlB,SAAA;MACA;IACA;IACAM,cAAAH,MAAA;MACA,KAAAO,QAAA,CAAAC,GAAA;QACAC,MAAA;UAAAT;QAAA;MACA,GACAU,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAA9B,IAAA;UACA,KAAAO,OAAA,GAAAuB,QAAA,CAAA9B,IAAA;QACA;UACAuB,OAAA,CAAAQ,KAAA,gBAAAD,QAAA,CAAA9B,IAAA;UACA,KAAAgC,QAAA,CAAAD,KAAA;QACA;MACA,GACAE,KAAA,CAAAF,KAAA;QACAR,OAAA,CAAAQ,KAAA,gBAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA,GACAG,OAAA;QACA,KAAAlB,SAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}