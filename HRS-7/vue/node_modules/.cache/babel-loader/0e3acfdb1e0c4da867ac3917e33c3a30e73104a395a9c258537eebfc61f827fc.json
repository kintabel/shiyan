{"ast":null,"code":"export default {\n  name: \"WorkloadStatistics\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      adminId: this.query.userId || this.user.id,\n      loading: false,\n      currentDepartment: null,\n      departments: [],\n      doctors: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  computed: {\n    lastMonth() {\n      const date = new Date();\n      date.setMonth(date.getMonth() - 1);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      return `${year}-${month}`;\n    },\n    filteredDoctors() {\n      if (!this.currentDepartment) return this.doctors;\n      return this.doctors.filter(doctor => doctor.department === this.currentDepartment.name);\n    }\n  },\n  methods: {\n    handleDepartmentClick(data) {\n      this.currentDepartment = data;\n      this.getDoctorsByDepartment();\n    },\n    generateStatistics() {\n      if (!this.adminId) {\n        alert('未获取到管理员ID');\n        return;\n      }\n      this.loading = true;\n      this.$request.post('/workload-statistics', null, {\n        params: {\n          adminId: this.adminId,\n          yearMonth: this.lastMonth\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          alert('工作量统计生成成功');\n        } else {\n          alert(response.message || '生成失败');\n        }\n      }).catch(error => {\n        console.error('请求失败:', error);\n        alert('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getDepartments() {\n      this.$request.get('/hospital/departmentList', {\n        params: {\n          userId: this.user.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.departments = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取科室列表失败');\n        }\n      });\n    },\n    getDoctorsByDepartment() {\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\n        params: {\n          userId: this.user.id,\n          departmentId: departmentId\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.doctors = response.data;\n          this.prepareScheduleData();\n        } else {\n          this.$message.error(response.data.message || '获取医生列表失败');\n        }\n      });\n    }\n  },\n  mounted() {\n    console.log('当前管理员ID:', this.user.id);\n    this.getDepartments();\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","adminId","query","userId","id","loading","currentDepartment","departments","doctors","defaultProps","children","label","computed","lastMonth","date","Date","setMonth","getMonth","year","getFullYear","month","String","padStart","filteredDoctors","filter","doctor","department","methods","handleDepartmentClick","getDoctorsByDepartment","generateStatistics","alert","$request","post","params","yearMonth","then","response","code","message","catch","error","console","finally","getDepartments","get","$message","departmentId","prepareScheduleData","mounted","log"],"sources":["src/views/hospitalAdmin/WorkLoad.vue"],"sourcesContent":["<template>\r\n  <div class=\"workload-page\">\r\n    <h2 class=\"page-title\">医生工作量统计</h2>\r\n\r\n    <div class=\"container\">\r\n      <!-- 左侧部门导航 -->\r\n      <div class=\"department-sidebar\">\r\n        <el-tree\r\n            :data=\"departments\"\r\n            node-key=\"id\"\r\n            :props=\"defaultProps\"\r\n            @node-click=\"handleDepartmentClick\"\r\n            highlight-current\r\n        />\r\n      </div>\r\n\r\n      <!-- 右侧医生列表 -->\r\n      <div class=\"doctor-content\">\r\n        <div class=\"action-bar\">\r\n          <el-button\r\n              type=\"primary\"\r\n              @click=\"generateStatistics\"\r\n              :loading=\"loading\"\r\n          >\r\n            生成上月工作量统计\r\n          </el-button>\r\n          <span class=\"month-display\">统计月份：{{ lastMonth }}</span>\r\n        </div>\r\n\r\n        <el-table :data=\"filteredDoctors\" border style=\"width: 100%\">\r\n          <el-table-column prop=\"name\" label=\"姓名\" width=\"120\" />\r\n          <el-table-column prop=\"title\" label=\"职称\" width=\"120\" />\r\n          <el-table-column prop=\"department\" label=\"科室\" />\r\n          <el-table-column label=\"操作\" width=\"180\">\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"WorkloadStatistics\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      adminId: this.query.userId || this.user.id,\r\n      loading: false,\r\n      currentDepartment: null,\r\n      departments: [],\r\n      doctors: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    lastMonth() {\r\n      const date = new Date()\r\n      date.setMonth(date.getMonth() - 1)\r\n      const year = date.getFullYear()\r\n      const month = String(date.getMonth() + 1).padStart(2, '0')\r\n      return `${year}-${month}`\r\n    },\r\n    filteredDoctors() {\r\n      if (!this.currentDepartment) return this.doctors\r\n      return this.doctors.filter(\r\n          doctor => doctor.department === this.currentDepartment.name\r\n      )\r\n    }\r\n  },\r\n  methods: {\r\n    handleDepartmentClick(data) {\r\n      this.currentDepartment = data\r\n      this.getDoctorsByDepartment()\r\n    },\r\n    generateStatistics() {\r\n      if (!this.adminId) {\r\n        alert('未获取到管理员ID')\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.$request.post('/workload-statistics', null, {\r\n        params: {\r\n          adminId: this.adminId,\r\n          yearMonth: this.lastMonth\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              alert('工作量统计生成成功')\r\n            } else {\r\n              alert(response.message || '生成失败')\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('请求失败:', error)\r\n            alert('请求失败，请稍后重试')\r\n          })\r\n          .finally(() => {\r\n            this.loading = false\r\n          })\r\n    },\r\n    getDepartments() {\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          this.departments = response.data\r\n        } else {\r\n          this.$message.error(response.data.message || '获取科室列表失败')\r\n        }\r\n      })\r\n    },\r\n    getDoctorsByDepartment() {\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: departmentId\r\n        }\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          this.doctors = response.data\r\n          this.prepareScheduleData()\r\n        } else {\r\n          this.$message.error(response.data.message || '获取医生列表失败')\r\n        }\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('当前管理员ID:', this.user.id)\r\n    this.getDepartments()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.workload-page {\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.page-title {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  height: calc(100vh - 100px);\r\n}\r\n\r\n.department-sidebar {\r\n  width: 200px;\r\n  padding-right: 20px;\r\n  border-right: 1px solid #ebeef5;\r\n}\r\n\r\n.doctor-content {\r\n  flex: 1;\r\n  padding-left: 20px;\r\n  overflow: auto;\r\n}\r\n\r\n.action-bar {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.month-display {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.el-tree {\r\n  background: transparent;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":"AA0CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA,OAAAC,KAAA,CAAAC,MAAA,SAAAP,IAAA,CAAAQ,EAAA;MACAC,OAAA;MACAC,iBAAA;MACAC,WAAA;MACAC,OAAA;MACAC,YAAA;QACAC,QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,MAAAC,IAAA,OAAAC,IAAA;MACAD,IAAA,CAAAE,QAAA,CAAAF,IAAA,CAAAG,QAAA;MACA,MAAAC,IAAA,GAAAJ,IAAA,CAAAK,WAAA;MACA,MAAAC,KAAA,GAAAC,MAAA,CAAAP,IAAA,CAAAG,QAAA,QAAAK,QAAA;MACA,UAAAJ,IAAA,IAAAE,KAAA;IACA;IACAG,gBAAA;MACA,UAAAjB,iBAAA,cAAAE,OAAA;MACA,YAAAA,OAAA,CAAAgB,MAAA,CACAC,MAAA,IAAAA,MAAA,CAAAC,UAAA,UAAApB,iBAAA,CAAAZ,IACA;IACA;EACA;EACAiC,OAAA;IACAC,sBAAAjC,IAAA;MACA,KAAAW,iBAAA,GAAAX,IAAA;MACA,KAAAkC,sBAAA;IACA;IACAC,mBAAA;MACA,UAAA7B,OAAA;QACA8B,KAAA;QACA;MACA;MAEA,KAAA1B,OAAA;MACA,KAAA2B,QAAA,CAAAC,IAAA;QACAC,MAAA;UACAjC,OAAA,OAAAA,OAAA;UACAkC,SAAA,OAAAtB;QACA;MACA,GACAuB,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,IAAA;UACAP,KAAA;QACA;UACAA,KAAA,CAAAM,QAAA,CAAAE,OAAA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACAV,KAAA;MACA,GACAY,OAAA;QACA,KAAAtC,OAAA;MACA;IACA;IACAuC,eAAA;MACA,KAAAZ,QAAA,CAAAa,GAAA;QACAX,MAAA;UACA/B,MAAA,OAAAP,IAAA,CAAAQ;QACA;MACA,GAAAgC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,IAAA;UACA,KAAA/B,WAAA,GAAA8B,QAAA,CAAA1C,IAAA;QACA;UACA,KAAAmD,QAAA,CAAAL,KAAA,CAAAJ,QAAA,CAAA1C,IAAA,CAAA4C,OAAA;QACA;MACA;IACA;IACAV,uBAAA;MACA,KAAAG,QAAA,CAAAa,GAAA;QACAX,MAAA;UACA/B,MAAA,OAAAP,IAAA,CAAAQ,EAAA;UACA2C,YAAA,EAAAA;QACA;MACA,GAAAX,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,IAAA;UACA,KAAA9B,OAAA,GAAA6B,QAAA,CAAA1C,IAAA;UACA,KAAAqD,mBAAA;QACA;UACA,KAAAF,QAAA,CAAAL,KAAA,CAAAJ,QAAA,CAAA1C,IAAA,CAAA4C,OAAA;QACA;MACA;IACA;EACA;EACAU,QAAA;IACAP,OAAA,CAAAQ,GAAA,kBAAAtD,IAAA,CAAAQ,EAAA;IACA,KAAAwC,cAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}