{"ast":null,"code":"export default {\n  name: 'Consultation',\n  data() {\n    return {\n      consultation: null,\n      // 问诊信息\n      records: [],\n      // 问诊记录\n      newRecord: '',\n      // 新增问诊记录内容\n      loading: false,\n      // 加载状态\n      error: '' // 错误信息\n    };\n  },\n\n  created() {\n    this.fetchConsultation(); // 初始化加载问诊信息\n    this.fetchRecords(); // 初始化加载问诊记录\n  },\n\n  methods: {\n    // 获取问诊信息\n    fetchConsultation() {\n      this.loading = true;\n      this.error = '';\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n      const name = this.$route.params.name; // 从路由参数中获取患者姓名\n      console.log(name);\n      console.log(id);\n      this.$request.get('/registration/detail', {\n        params: {\n          orderId: id\n        }\n      }).then(response => {\n        if (response.data) {\n          this.consultation = response.data;\n        } else {\n          this.error = response.data.message || '获取问诊信息失败';\n        }\n      }).catch(error => {\n        console.error('获取问诊信息失败:', error);\n        this.error = '获取问诊信息失败，请稍后重试';\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 获取问诊记录\n    fetchRecords() {\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n      const name = this.$route.params.name;\n      console.log(name);\n      this.$request.get('/doctor/getConsultationRecords', {\n        params: {\n          userName: name\n        }\n      }).then(response => {\n        if (response.data) {\n          this.records = response.data;\n        } else {\n          this.error = response.data.message || '获取问诊记录失败';\n        }\n      }).catch(error => {\n        console.error('获取问诊记录失败:', error);\n        this.error = '获取问诊记录失败，请稍后重试';\n      });\n    },\n    // 格式化手机号（脱敏显示）\n    formatPhone(phone) {\n      if (phone && phone.length === 11) {\n        return phone.substring(0, 3) + '****' + phone.substring(7);\n      }\n      return phone;\n    },\n    // 格式化问诊状态\n    formatStatus(status) {\n      switch (status) {\n        case 0:\n          return '进行中';\n        case 1:\n          return '待开药';\n        case 2:\n          return '待提交';\n        case 5:\n          return '复诊中';\n        default:\n          return '未知状态';\n      }\n    },\n    // 新增问诊记录\n    handleAddRecord() {\n      if (!this.newRecord.trim()) {\n        this.$message.warning('请输入问诊记录内容');\n        return;\n      }\n      const name = this.$route.params.name;\n      const id = this.$route.params.id;\n      console.log(name);\n      this.$request.post('/doctor/addConsultationRecord', {\n        orderId: id,\n        userName: name,\n        content: this.newRecord\n      }).then(response => {\n        if (response.data) {\n          this.$message.success('问诊记录添加成功');\n          this.newRecord = ''; // 清空输入框\n          this.fetchRecords(); // 重新加载问诊记录\n        } else {\n          this.$message.error(response.data.message || '问诊记录添加失败');\n        }\n      }).catch(error => {\n        console.error('问诊记录添加失败:', error);\n        this.$message.error('问诊记录添加失败，请稍后重试');\n      });\n    },\n    // 删除问诊记录\n    handleDeleteRecord(recordId) {\n      this.$confirm('确定删除该问诊记录吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$request.delete(`/doctor/deleteConsultationRecord/${recordId}`).then(response => {\n          if (response.code == 200) {\n            this.$message.success('问诊记录删除成功');\n            this.fetchRecords(); // 重新加载问诊记录\n          } else {\n            this.$message.error(response.data.message || '问诊记录删除失败');\n          }\n        }).catch(error => {\n          console.error('问诊记录删除失败:', error);\n          this.$message.error('问诊记录删除失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 用户取消操作\n      });\n    },\n    // 完成问诊\n    handleCompleteConsultation() {\n      this.$confirm('确定完成问诊吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n\n        this.$request.post(`/doctor/completeConsultation/${id}`).then(response => {\n          if (response.code == 200) {\n            this.$message.success('问诊已完成');\n            this.fetchConsultation(); // 重新加载问诊信息\n          } else {\n            this.$message.error(response.data.message || '完成问诊失败');\n          }\n        }).catch(error => {\n          console.error('完成问诊失败:', error);\n          this.$message.error('完成问诊失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 用户取消操作\n      });\n    },\n    // 取消问诊\n    handleCancelConsultation() {\n      this.$confirm('确定取消问诊吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n        console.log(\"当前:\" + id);\n        this.$request.post(`/doctor/cancelConsultation/${id}`).then(response => {\n          if (response.code == 200) {\n            this.$message.success('问诊已取消');\n            this.$router.go(-1);\n          } else {\n            this.$message.error(response.data.message || '取消问诊失败');\n          }\n        }).catch(error => {\n          console.error('取消问诊失败:', error);\n          this.$message.error('取消问诊失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 用户取消操作\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","consultation","records","newRecord","loading","error","created","fetchConsultation","fetchRecords","methods","id","$route","params","console","log","$request","get","orderId","then","response","message","catch","finally","userName","formatPhone","phone","length","substring","formatStatus","status","handleAddRecord","trim","$message","warning","post","content","success","handleDeleteRecord","recordId","$confirm","confirmButtonText","cancelButtonText","type","delete","code","handleCompleteConsultation","handleCancelConsultation","$router","go"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\doctor\\Consultation.vue"],"sourcesContent":["<template>\r\n  <div class=\"consultation\">\r\n    <!-- 添加返回按钮 -->\r\n    <el-button type=\"text\" @click=\"$router.go(-1)\">返回</el-button>\r\n    <h2>问诊</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 问诊信息 -->\r\n    <div v-if=\"consultation\" class=\"consultation-info\">\r\n      <el-descriptions :column=\"1\" border>\r\n        <el-descriptions-item label=\"患者姓名\">{{ consultation.userName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者性别\">{{ consultation.userGender }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者手机号\">{{ formatPhone(consultation.userPhone) }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"预约时间\">{{ consultation.registerTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"问诊状态\">{{ formatStatus(consultation.status) }}</el-descriptions-item>\r\n      </el-descriptions>\r\n    </div>\r\n\r\n    <!-- 问诊记录 -->\r\n    <div class=\"consultation-records\">\r\n      <h3>问诊记录</h3>\r\n      <el-table :data=\"records\" stripe>\r\n        <el-table-column prop=\"consultationDate\" label=\"时间\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"content\" label=\"内容\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" @click=\"handleDeleteRecord(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 新增问诊记录 -->\r\n    <div class=\"add-record\">\r\n      <h3>新增问诊记录</h3>\r\n      <el-input\r\n          type=\"textarea\"\r\n          :rows=\"4\"\r\n          v-model=\"newRecord\"\r\n          placeholder=\"请输入问诊记录\"\r\n      ></el-input>\r\n      <el-button type=\"primary\" @click=\"handleAddRecord\">提交</el-button>\r\n    </div>\r\n\r\n    <!-- 操作按钮 -->\r\n    <div class=\"actions\">\r\n      <el-button type=\"primary\" @click=\"handleCompleteConsultation\">完成问诊</el-button>\r\n      <el-button type=\"danger\" @click=\"handleCancelConsultation\">取消问诊</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Consultation',\r\n  data() {\r\n    return {\r\n      consultation: null, // 问诊信息\r\n      records: [], // 问诊记录\r\n      newRecord: '', // 新增问诊记录内容\r\n      loading: false, // 加载状态\r\n      error: '' // 错误信息\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchConsultation(); // 初始化加载问诊信息\r\n    this.fetchRecords(); // 初始化加载问诊记录\r\n  },\r\n  methods: {\r\n    // 获取问诊信息\r\n    fetchConsultation() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n      const name = this.$route.params.name; // 从路由参数中获取患者姓名\r\n      console.log(name);\r\n      console.log(id);\r\n      this.$request.get('/registration/detail', {\r\n        params: { orderId : id }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.consultation = response.data;\r\n            } else {\r\n              this.error = response.data.message || '获取问诊信息失败';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取问诊信息失败:', error);\r\n            this.error = '获取问诊信息失败，请稍后重试';\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    // 获取问诊记录\r\n    fetchRecords() {\r\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n      const name = this.$route.params.name;\r\n      console.log(name);\r\n      this.$request.get('/doctor/getConsultationRecords', {\r\n        params: { userName : name }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.records = response.data;\r\n            } else {\r\n              this.error = response.data.message || '获取问诊记录失败';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取问诊记录失败:', error);\r\n            this.error = '获取问诊记录失败，请稍后重试';\r\n          });\r\n    },\r\n\r\n    // 格式化手机号（脱敏显示）\r\n    formatPhone(phone) {\r\n      if (phone && phone.length === 11) {\r\n        return phone.substring(0, 3) + '****' + phone.substring(7);\r\n      }\r\n      return phone;\r\n    },\r\n\r\n    // 格式化问诊状态\r\n    formatStatus(status) {\r\n      switch (status) {\r\n        case 0:\r\n          return '进行中';\r\n        case 1:\r\n          return '待开药';\r\n        case 2:\r\n          return '待提交';\r\n        case 5:\r\n          return '复诊中';\r\n        default:\r\n          return '未知状态';\r\n      }\r\n    },\r\n\r\n    // 新增问诊记录\r\n    handleAddRecord() {\r\n      if (!this.newRecord.trim()) {\r\n        this.$message.warning('请输入问诊记录内容');\r\n        return;\r\n      }\r\n\r\n      const name = this.$route.params.name;\r\n      const id = this.$route.params.id;\r\n      console.log(name);\r\n      this.$request.post('/doctor/addConsultationRecord', {\r\n        orderId: id,\r\n        userName: name,\r\n        content: this.newRecord\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.$message.success('问诊记录添加成功');\r\n              this.newRecord = ''; // 清空输入框\r\n              this.fetchRecords(); // 重新加载问诊记录\r\n            } else {\r\n              this.$message.error(response.data.message || '问诊记录添加失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('问诊记录添加失败:', error);\r\n            this.$message.error('问诊记录添加失败，请稍后重试');\r\n          });\r\n    },\r\n\r\n    // 删除问诊记录\r\n    handleDeleteRecord(recordId) {\r\n      this.$confirm('确定删除该问诊记录吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$request.delete(`/doctor/deleteConsultationRecord/${recordId}`)\r\n            .then(response => {\r\n              if (response.code == 200) {\r\n                this.$message.success('问诊记录删除成功');\r\n                this.fetchRecords(); // 重新加载问诊记录\r\n              } else {\r\n                this.$message.error(response.data.message || '问诊记录删除失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('问诊记录删除失败:', error);\r\n              this.$message.error('问诊记录删除失败，请稍后重试');\r\n            });\r\n      }).catch(() => {\r\n        // 用户取消操作\r\n      });\r\n    },\r\n\r\n    // 完成问诊\r\n    handleCompleteConsultation() {\r\n      this.$confirm('确定完成问诊吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n\r\n        this.$request.post(`/doctor/completeConsultation/${id}`)\r\n            .then(response => {\r\n              if (response.code == 200) {\r\n                this.$message.success('问诊已完成');\r\n                this.fetchConsultation(); // 重新加载问诊信息\r\n              } else {\r\n                this.$message.error(response.data.message || '完成问诊失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('完成问诊失败:', error);\r\n              this.$message.error('完成问诊失败，请稍后重试');\r\n            });\r\n      }).catch(() => {\r\n        // 用户取消操作\r\n      });\r\n    },\r\n\r\n    // 取消问诊\r\n    handleCancelConsultation() {\r\n      this.$confirm('确定取消问诊吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n        console.log(\"当前:\" + id);\r\n        this.$request.post(`/doctor/cancelConsultation/${id}`)\r\n            .then(response => {\r\n              if (response.code == 200) {\r\n                this.$message.success('问诊已取消');\r\n                this.$router.go(-1);\r\n              } else {\r\n                this.$message.error(response.data.message || '取消问诊失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('取消问诊失败:', error);\r\n              this.$message.error('取消问诊失败，请稍后重试');\r\n            });\r\n      }).catch(() => {\r\n        // 用户取消操作\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.consultation {\r\n  padding: 20px;\r\n}\r\n\r\n.loading,\r\n.error {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n\r\n.consultation-info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.consultation-records {\r\n  margin-top: 20px;\r\n}\r\n\r\n.add-record {\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}