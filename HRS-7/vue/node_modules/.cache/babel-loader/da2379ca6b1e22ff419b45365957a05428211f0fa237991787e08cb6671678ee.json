{"ast":null,"code":"export default {\n  name: 'DoctorManagement',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      loading: false,\n      selectedDepartment: null,\n      departments: [],\n      doctors: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  methods: {\n    handleDepartmentClick(data) {\n      this.selectedDepartment = data;\n      this.getDoctorsByDepartment();\n    },\n    refreshDoctors() {\n      if (this.selectedDepartment) {\n        this.getDoctorsByDepartment();\n      } else {\n        this.$message.warning('请先选择科室');\n      }\n    },\n    getDepartments() {\n      this.loading = true;\n      this.$request.get('/hospital/departmentList', {\n        params: {\n          userId: this.user.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.departments = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取科室列表失败');\n        }\n      }).catch(error => {\n        console.error('获取科室列表失败:', error);\n        this.$message.error('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getDoctorsByDepartment() {\n      if (!this.selectedDepartment) return;\n      this.loading = true;\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\n        params: {\n          userId: this.user.id,\n          departmentId: this.selectedDepartment.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.doctors = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取医生列表失败');\n        }\n      }).catch(error => {\n        console.error('获取医生列表失败:', error);\n        this.$message.error('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getDoctorTitle(status) {\n      switch (status) {\n        case 1:\n          return '医师';\n        case 2:\n          return '副主治医师';\n        case 3:\n          return '主治医师';\n        case 4:\n          return '专家';\n        case 5:\n          return '急诊';\n        default:\n          return '未知职称';\n      }\n    }\n  },\n  mounted() {\n    this.getDepartments();\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","loading","selectedDepartment","departments","doctors","defaultProps","children","label","methods","handleDepartmentClick","getDoctorsByDepartment","refreshDoctors","$message","warning","getDepartments","$request","get","params","userId","id","then","response","code","error","message","catch","console","finally","departmentId","getDoctorTitle","status","mounted"],"sources":["src/views/hospitalAdmin/DoctorList.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生信息管理</span>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>医生列表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-button type=\"primary\" @click=\"refreshDoctors\" :loading=\"loading\">\r\n                  刷新列表\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"doctors\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"name\" label=\"姓名\" width=\"120\" />\r\n              <el-table-column label=\"职称\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ getDoctorTitle(scope.row.status) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"phone\" label=\"电话\" width=\"150\" />\r\n              <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"introduction\" label=\"简介\" />\r\n              <el-table-column prop=\"finalSalary\" label=\"薪资\"/>\r\n              <el-table-column prop=\"evaluationCount\" label=\"评价次数\"/>\r\n              <el-table-column prop=\"evaluation\" label=\"评级\"/>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DoctorManagement',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      selectedDepartment: null,\r\n      departments: [],\r\n      doctors: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleDepartmentClick(data) {\r\n      this.selectedDepartment = data;\r\n      this.getDoctorsByDepartment();\r\n    },\r\n\r\n    refreshDoctors() {\r\n      if (this.selectedDepartment) {\r\n        this.getDoctorsByDepartment();\r\n      } else {\r\n        this.$message.warning('请先选择科室');\r\n      }\r\n    },\r\n\r\n    getDepartments() {\r\n      this.loading = true;\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.departments = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取科室列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取科室列表失败:', error);\r\n            this.$message.error('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDoctorsByDepartment() {\r\n      if (!this.selectedDepartment) return;\r\n\r\n      this.loading = true;\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: this.selectedDepartment.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.doctors = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取医生列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生列表失败:', error);\r\n            this.$message.error('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    },\r\n\r\n  },\r\n  mounted() {\r\n    this.getDepartments();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n.el-tree {\r\n  background: transparent;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":"AA4DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,kBAAA;MACAC,WAAA;MACAC,OAAA;MACAC,YAAA;QACAC,QAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,sBAAAd,IAAA;MACA,KAAAO,kBAAA,GAAAP,IAAA;MACA,KAAAe,sBAAA;IACA;IAEAC,eAAA;MACA,SAAAT,kBAAA;QACA,KAAAQ,sBAAA;MACA;QACA,KAAAE,QAAA,CAAAC,OAAA;MACA;IACA;IAEAC,eAAA;MACA,KAAAb,OAAA;MACA,KAAAc,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAC,MAAA,OAAAtB,IAAA,CAAAuB;QACA;MACA,GACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,IAAA;UACA,KAAAnB,WAAA,GAAAkB,QAAA,CAAA1B,IAAA;QACA;UACA,KAAAiB,QAAA,CAAAW,KAAA,CAAAF,QAAA,CAAA1B,IAAA,CAAA6B,OAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAX,QAAA,CAAAW,KAAA;MACA,GACAI,OAAA;QACA,KAAA1B,OAAA;MACA;IACA;IAEAS,uBAAA;MACA,UAAAR,kBAAA;MAEA,KAAAD,OAAA;MACA,KAAAc,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAC,MAAA,OAAAtB,IAAA,CAAAuB,EAAA;UACAS,YAAA,OAAA1B,kBAAA,CAAAiB;QACA;MACA,GACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAC,IAAA;UACA,KAAAlB,OAAA,GAAAiB,QAAA,CAAA1B,IAAA;QACA;UACA,KAAAiB,QAAA,CAAAW,KAAA,CAAAF,QAAA,CAAA1B,IAAA,CAAA6B,OAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,cAAAA,KAAA;QACA,KAAAX,QAAA,CAAAW,KAAA;MACA,GACAI,OAAA;QACA,KAAA1B,OAAA;MACA;IACA;IAEA4B,eAAAC,MAAA;MACA,QAAAA,MAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;MACA;IACA;EAEA;EACAC,QAAA;IACA,KAAAjB,cAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}