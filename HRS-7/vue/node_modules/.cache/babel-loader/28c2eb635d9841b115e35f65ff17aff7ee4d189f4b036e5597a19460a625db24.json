{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'SubmitRegistration',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      doctor: null,\n      nowUser: null,\n      registrationDate: this.$route.query.date || parseTime(new Date(), '{y}-{m}-{d}'),\n      registrationTimeSlot: this.$route.query.timeSlot,\n      registrationPrice: this.$route.query.price,\n      shiftType: parseInt(this.$route.query.shiftType) || 1,\n      // 1-白天 2-晚上\n      isLoading: true,\n      submitting: false,\n      status: this.$route.query.status || 0\n    };\n  },\n  created() {\n    const doctorId = this.$route.query.doctorId;\n    const userId = this.user.id;\n\n    // 检查必要参数\n    if (!doctorId || !this.registrationTimeSlot) {\n      this.$message.error('缺少必要参数，请重新选择');\n      this.$router.go(-1);\n      return;\n    }\n    this.fetchDoctorInfo(doctorId);\n    this.fetchUserInfo(userId);\n  },\n  methods: {\n    // 格式化日期显示\n    formatDate(date) {\n      return parseTime(date, '{y}年{m}月{d}日');\n    },\n    // 获取医生职称\n    getDoctorTitle(status) {\n      switch (status) {\n        case 1:\n          return '医师';\n        case 2:\n          return '副主治医师';\n        case 3:\n          return '主治医师';\n        case 4:\n          return '专家';\n        case 5:\n          return '急诊';\n        default:\n          return '未知职称';\n      }\n    },\n    // 获取医生信息\n    fetchDoctorInfo(doctorId) {\n      this.isLoading = true;\n      this.$request.get('/doctor/selectDoctorById', {\n        params: {\n          doctorId\n        }\n      }).then(response => {\n        if (response.data) {\n          this.doctor = response.data;\n        } else {\n          this.handleError('获取医生详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取医生详细信息失败', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    // 获取用户信息\n    fetchUserInfo(userId) {\n      this.$request.get(`/user/selectById/${userId}`).then(response => {\n        if (response.data) {\n          this.nowUser = response.data;\n        } else {\n          this.handleError('获取用户详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取用户详细信息失败', error);\n      });\n    },\n    // 提交挂号信息\n    submitRegistration() {\n      if (!this.doctor || !this.nowUser) {\n        this.$message.error('信息不完整，无法提交');\n        return;\n      }\n      this.submitting = true;\n      const registrationData = {\n        doctorId: this.doctor.id,\n        userId: this.nowUser.id,\n        registrationDate: this.registrationDate,\n        registrationTimeSlot: this.registrationTimeSlot,\n        registrationPrice: this.registrationPrice,\n        shiftType: this.shiftType === 1 ? 'DAY' : 'NIGHT',\n        status: this.status\n      };\n      this.$request.post('/registration/insert', registrationData).then(response => {\n        if (response.code == 200) {\n          const order = response.data?.order;\n          this.$message.success('挂号成功');\n          this.$router.push({\n            name: 'RegistrationSuccess',\n            query: {\n              order\n            }\n          });\n        } else {\n          this.handleError('挂号失败', response.msg);\n        }\n      }).catch(error => {\n        this.handleError('提交挂号信息失败', error);\n      }).finally(() => {\n        this.submitting = false;\n      });\n    },\n    // 返回上一页\n    goBack() {\n      this.$router.go(-1);\n    },\n    // 错误处理\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(`${message}，请稍后重试`);\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","user","JSON","parse","localStorage","getItem","doctor","nowUser","registrationDate","$route","query","date","Date","registrationTimeSlot","timeSlot","registrationPrice","price","shiftType","parseInt","isLoading","submitting","status","created","doctorId","userId","id","$message","error","$router","go","fetchDoctorInfo","fetchUserInfo","methods","formatDate","getDoctorTitle","$request","get","params","then","response","handleError","catch","finally","submitRegistration","registrationData","post","code","order","success","push","msg","goBack","message","console"],"sources":["src/views/user/SubmitRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"submit-registration-page\">\r\n    <!-- 数据加载中提示 -->\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <h2>提交挂号信息</h2>\r\n      <el-form label-width=\"120px\" v-if=\"doctor\">\r\n        <el-form-item label=\"医生姓名\">\r\n          <span>{{ doctor.name }} - {{ getDoctorTitle(doctor.status) }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"班次类型\">\r\n          <el-tag :type=\"shiftType === 1 ? 'success' : 'warning'\">\r\n            {{ shiftType === 1 ? '白班' : '夜班' }}\r\n          </el-tag>\r\n        </el-form-item>\r\n        <el-form-item label=\"挂号日期\">\r\n          <span>{{ formatDate(registrationDate) }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"时间段\">\r\n          <span>{{ registrationTimeSlot }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <span>{{ registrationPrice }} 元</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"患者姓名\">\r\n          <span>{{ nowUser.name }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系方式\">\r\n          <span>{{ nowUser.phone }}</span>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n              @click=\"submitRegistration\"\r\n              type=\"primary\"\r\n              :loading=\"submitting\"\r\n          >\r\n            确认提交\r\n          </el-button>\r\n          <el-button @click=\"goBack\">返回修改</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div v-else>\r\n        <el-empty description=\"未获取到医生信息\">\r\n          <el-button type=\"primary\" @click=\"goBack\">返回选择</el-button>\r\n        </el-empty>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'SubmitRegistration',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      doctor: null,\r\n      nowUser: null,\r\n      registrationDate: this.$route.query.date || parseTime(new Date(), '{y}-{m}-{d}'),\r\n      registrationTimeSlot: this.$route.query.timeSlot,\r\n      registrationPrice: this.$route.query.price,\r\n      shiftType: parseInt(this.$route.query.shiftType) || 1, // 1-白天 2-晚上\r\n      isLoading: true,\r\n      submitting: false,\r\n      status: this.$route.query.status || 0\r\n    }\r\n  },\r\n  created() {\r\n    const doctorId = this.$route.query.doctorId\r\n    const userId = this.user.id\r\n\r\n    // 检查必要参数\r\n    if (!doctorId || !this.registrationTimeSlot) {\r\n      this.$message.error('缺少必要参数，请重新选择')\r\n      this.$router.go(-1)\r\n      return\r\n    }\r\n\r\n    this.fetchDoctorInfo(doctorId)\r\n    this.fetchUserInfo(userId)\r\n  },\r\n  methods: {\r\n    // 格式化日期显示\r\n    formatDate(date) {\r\n      return parseTime(date, '{y}年{m}月{d}日')\r\n    },\r\n\r\n    // 获取医生职称\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    },\r\n\r\n    // 获取医生信息\r\n    fetchDoctorInfo(doctorId) {\r\n      this.isLoading = true\r\n      this.$request.get('/doctor/selectDoctorById', {\r\n        params: { doctorId }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.doctor = response.data\r\n            } else {\r\n              this.handleError('获取医生详细信息失败', response.data)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('获取医生详细信息失败', error)\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false\r\n          })\r\n    },\r\n\r\n    // 获取用户信息\r\n    fetchUserInfo(userId) {\r\n      this.$request.get(`/user/selectById/${userId}`)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.nowUser = response.data\r\n            } else {\r\n              this.handleError('获取用户详细信息失败', response.data)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('获取用户详细信息失败', error)\r\n          })\r\n    },\r\n\r\n    // 提交挂号信息\r\n    submitRegistration() {\r\n      if (!this.doctor || !this.nowUser) {\r\n        this.$message.error('信息不完整，无法提交')\r\n        return\r\n      }\r\n\r\n      this.submitting = true\r\n\r\n      const registrationData = {\r\n        doctorId: this.doctor.id,\r\n        userId: this.nowUser.id,\r\n        registrationDate: this.registrationDate,\r\n        registrationTimeSlot: this.registrationTimeSlot,\r\n        registrationPrice: this.registrationPrice,\r\n        shiftType: this.shiftType === 1? 'DAY' : 'NIGHT',\r\n        status: this.status,\r\n      }\r\n\r\n      this.$request.post('/registration/insert', registrationData)\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              const order = response.data?.order\r\n              this.$message.success('挂号成功')\r\n              this.$router.push({\r\n                name: 'RegistrationSuccess',\r\n                query: { order }\r\n              })\r\n            } else {\r\n              this.handleError('挂号失败', response.msg)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('提交挂号信息失败', error)\r\n          })\r\n          .finally(() => {\r\n            this.submitting = false\r\n          })\r\n    },\r\n\r\n    // 返回上一页\r\n    goBack() {\r\n      this.$router.go(-1)\r\n    },\r\n\r\n    // 错误处理\r\n    handleError(message, error) {\r\n      console.error(message, error)\r\n      this.$message.error(`${message}，请稍后重试`)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.submit-registration-page {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.el-form-item__content span {\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.el-tag {\r\n  margin-left: 5px;\r\n}\r\n\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>"],"mappings":";AAsDA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,MAAA;MACAC,OAAA;MACAC,gBAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,IAAA,IAAAb,SAAA,KAAAc,IAAA;MACAC,oBAAA,OAAAJ,MAAA,CAAAC,KAAA,CAAAI,QAAA;MACAC,iBAAA,OAAAN,MAAA,CAAAC,KAAA,CAAAM,KAAA;MACAC,SAAA,EAAAC,QAAA,MAAAT,MAAA,CAAAC,KAAA,CAAAO,SAAA;MAAA;MACAE,SAAA;MACAC,UAAA;MACAC,MAAA,OAAAZ,MAAA,CAAAC,KAAA,CAAAW,MAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,QAAA,QAAAd,MAAA,CAAAC,KAAA,CAAAa,QAAA;IACA,MAAAC,MAAA,QAAAvB,IAAA,CAAAwB,EAAA;;IAEA;IACA,KAAAF,QAAA,UAAAV,oBAAA;MACA,KAAAa,QAAA,CAAAC,KAAA;MACA,KAAAC,OAAA,CAAAC,EAAA;MACA;IACA;IAEA,KAAAC,eAAA,CAAAP,QAAA;IACA,KAAAQ,aAAA,CAAAP,MAAA;EACA;EACAQ,OAAA;IACA;IACAC,WAAAtB,IAAA;MACA,OAAAb,SAAA,CAAAa,IAAA;IACA;IAEA;IACAuB,eAAAb,MAAA;MACA,QAAAA,MAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;QACA;UAAA;MACA;IACA;IAEA;IACAS,gBAAAP,QAAA;MACA,KAAAJ,SAAA;MACA,KAAAgB,QAAA,CAAAC,GAAA;QACAC,MAAA;UAAAd;QAAA;MACA,GACAe,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAvC,IAAA;UACA,KAAAM,MAAA,GAAAiC,QAAA,CAAAvC,IAAA;QACA;UACA,KAAAwC,WAAA,eAAAD,QAAA,CAAAvC,IAAA;QACA;MACA,GACAyC,KAAA,CAAAd,KAAA;QACA,KAAAa,WAAA,eAAAb,KAAA;MACA,GACAe,OAAA;QACA,KAAAvB,SAAA;MACA;IACA;IAEA;IACAY,cAAAP,MAAA;MACA,KAAAW,QAAA,CAAAC,GAAA,qBAAAZ,MAAA,IACAc,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAvC,IAAA;UACA,KAAAO,OAAA,GAAAgC,QAAA,CAAAvC,IAAA;QACA;UACA,KAAAwC,WAAA,eAAAD,QAAA,CAAAvC,IAAA;QACA;MACA,GACAyC,KAAA,CAAAd,KAAA;QACA,KAAAa,WAAA,eAAAb,KAAA;MACA;IACA;IAEA;IACAgB,mBAAA;MACA,UAAArC,MAAA,UAAAC,OAAA;QACA,KAAAmB,QAAA,CAAAC,KAAA;QACA;MACA;MAEA,KAAAP,UAAA;MAEA,MAAAwB,gBAAA;QACArB,QAAA,OAAAjB,MAAA,CAAAmB,EAAA;QACAD,MAAA,OAAAjB,OAAA,CAAAkB,EAAA;QACAjB,gBAAA,OAAAA,gBAAA;QACAK,oBAAA,OAAAA,oBAAA;QACAE,iBAAA,OAAAA,iBAAA;QACAE,SAAA,OAAAA,SAAA;QACAI,MAAA,OAAAA;MACA;MAEA,KAAAc,QAAA,CAAAU,IAAA,yBAAAD,gBAAA,EACAN,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAO,IAAA;UACA,MAAAC,KAAA,GAAAR,QAAA,CAAAvC,IAAA,EAAA+C,KAAA;UACA,KAAArB,QAAA,CAAAsB,OAAA;UACA,KAAApB,OAAA,CAAAqB,IAAA;YACAlD,IAAA;YACAW,KAAA;cAAAqC;YAAA;UACA;QACA;UACA,KAAAP,WAAA,SAAAD,QAAA,CAAAW,GAAA;QACA;MACA,GACAT,KAAA,CAAAd,KAAA;QACA,KAAAa,WAAA,aAAAb,KAAA;MACA,GACAe,OAAA;QACA,KAAAtB,UAAA;MACA;IACA;IAEA;IACA+B,OAAA;MACA,KAAAvB,OAAA,CAAAC,EAAA;IACA;IAEA;IACAW,YAAAY,OAAA,EAAAzB,KAAA;MACA0B,OAAA,CAAA1B,KAAA,CAAAyB,OAAA,EAAAzB,KAAA;MACA,KAAAD,QAAA,CAAAC,KAAA,IAAAyB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}