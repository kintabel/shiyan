{"ast":null,"code":"export default {\n  name: 'Consultation',\n  data() {\n    return {\n      consultation: null,\n      // 问诊信息\n      records: [],\n      // 问诊记录\n      newRecord: '',\n      // 新增问诊记录内容\n      loading: false,\n      // 加载状态\n      error: '' // 错误信息\n    };\n  },\n\n  created() {\n    this.fetchConsultation(); // 初始化加载问诊信息\n    this.fetchRecords(); // 初始化加载问诊记录\n  },\n\n  methods: {\n    // 获取问诊信息\n    fetchConsultation() {\n      this.loading = true;\n      this.error = '';\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n      const name = this.$route.params.name; // 从路由参数中获取患者姓名\n      console.log(name);\n      console.log(id);\n      this.$request.get('/registration/detail', {\n        params: {\n          orderId: id\n        }\n      }).then(response => {\n        if (response.data) {\n          this.consultation = response.data;\n        } else {\n          this.error = response.data.message || '获取问诊信息失败';\n        }\n      }).catch(error => {\n        console.log(response.data.code);\n        console.error('获取问诊信息失败:', error);\n        this.error = '获取问诊信息失败，请稍后重试';\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 获取问诊记录\n    fetchRecords() {\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n\n      this.$request.get('/doctor/getConsultationRecords', {\n        params: {\n          id\n        }\n      }).then(response => {\n        if (response.data && response.data.code === 200) {\n          this.records = response.data.data;\n        } else {\n          this.error = response.data.message || '获取问诊记录失败';\n        }\n      }).catch(error => {\n        console.error('获取问诊记录失败:', error);\n        this.error = '获取问诊记录失败，请稍后重试';\n      });\n    },\n    // 格式化手机号（脱敏显示）\n    formatPhone(phone) {\n      if (phone && phone.length === 11) {\n        return phone.substring(0, 3) + '****' + phone.substring(7);\n      }\n      return phone;\n    },\n    // 格式化问诊状态\n    formatStatus(status) {\n      switch (status) {\n        case 0:\n          return '进行中';\n        case 1:\n          return '已完成';\n        case 2:\n          return '已取消';\n        default:\n          return '未知状态';\n      }\n    },\n    // 新增问诊记录\n    handleAddRecord() {\n      if (!this.newRecord.trim()) {\n        this.$message.warning('请输入问诊记录内容');\n        return;\n      }\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n\n      this.$request.post('/doctor/addConsultationRecord', {\n        consultationId: id,\n        content: this.newRecord\n      }).then(response => {\n        if (response.data && response.data.code === 200) {\n          this.$message.success('问诊记录添加成功');\n          this.newRecord = ''; // 清空输入框\n          this.fetchRecords(); // 重新加载问诊记录\n        } else {\n          this.$message.error(response.data.message || '问诊记录添加失败');\n        }\n      }).catch(error => {\n        console.error('问诊记录添加失败:', error);\n        this.$message.error('问诊记录添加失败，请稍后重试');\n      });\n    },\n    // 删除问诊记录\n    handleDeleteRecord(recordId) {\n      this.$confirm('确定删除该问诊记录吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$request.post('/doctor/deleteConsultationRecord', {\n          recordId\n        }).then(response => {\n          if (response.data && response.data.code === 200) {\n            this.$message.success('问诊记录删除成功');\n            this.fetchRecords(); // 重新加载问诊记录\n          } else {\n            this.$message.error(response.data.message || '问诊记录删除失败');\n          }\n        }).catch(error => {\n          console.error('问诊记录删除失败:', error);\n          this.$message.error('问诊记录删除失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 用户取消操作\n      });\n    },\n    // 完成问诊\n    handleCompleteConsultation() {\n      this.$confirm('确定完成问诊吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n\n        this.$request.post('/doctor/completeConsultation', {\n          consultationId: id\n        }).then(response => {\n          if (response.data && response.data.code === 200) {\n            this.$message.success('问诊已完成');\n            this.fetchConsultation(); // 重新加载问诊信息\n          } else {\n            this.$message.error(response.data.message || '完成问诊失败');\n          }\n        }).catch(error => {\n          console.error('完成问诊失败:', error);\n          this.$message.error('完成问诊失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 用户取消操作\n      });\n    },\n    // 取消问诊\n    handleCancelConsultation() {\n      this.$confirm('确定取消问诊吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\n\n        this.$request.post('/doctor/cancelConsultation', {\n          consultationId: id\n        }).then(response => {\n          if (response.data && response.data.code === 200) {\n            this.$message.success('问诊已取消');\n            this.fetchConsultation(); // 重新加载问诊信息\n          } else {\n            this.$message.error(response.data.message || '取消问诊失败');\n          }\n        }).catch(error => {\n          console.error('取消问诊失败:', error);\n          this.$message.error('取消问诊失败，请稍后重试');\n        });\n      }).catch(() => {\n        // 用户取消操作\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","consultation","records","newRecord","loading","error","created","fetchConsultation","fetchRecords","methods","id","$route","params","console","log","$request","get","orderId","then","response","message","catch","code","finally","formatPhone","phone","length","substring","formatStatus","status","handleAddRecord","trim","$message","warning","post","consultationId","content","success","handleDeleteRecord","recordId","$confirm","confirmButtonText","cancelButtonText","type","handleCompleteConsultation","handleCancelConsultation"],"sources":["src/views/doctor/Consultation.vue"],"sourcesContent":["<template>\r\n  <div class=\"consultation\">\r\n    <h2>问诊</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 问诊信息 -->\r\n    <div v-if=\"consultation\" class=\"consultation-info\">\r\n      <el-descriptions :column=\"1\" border>\r\n        <el-descriptions-item label=\"患者姓名\">{{ consultation.userName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者性别\">{{ consultation.userGender }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者手机号\">{{ formatPhone(consultation.userPhone) }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"预约时间\">{{ consultation.registerTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"问诊状态\">{{ formatStatus(consultation.status) }}</el-descriptions-item>\r\n      </el-descriptions>\r\n    </div>\r\n\r\n    <!-- 问诊记录 -->\r\n    <div class=\"consultation-records\">\r\n      <h3>问诊记录</h3>\r\n      <el-table :data=\"records\" stripe>\r\n        <el-table-column prop=\"time\" label=\"时间\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"content\" label=\"内容\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" @click=\"handleDeleteRecord(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 新增问诊记录 -->\r\n    <div class=\"add-record\">\r\n      <h3>新增问诊记录</h3>\r\n      <el-input\r\n          type=\"textarea\"\r\n          :rows=\"4\"\r\n          v-model=\"newRecord\"\r\n          placeholder=\"请输入问诊记录\"\r\n      ></el-input>\r\n      <el-button type=\"primary\" @click=\"handleAddRecord\">提交</el-button>\r\n    </div>\r\n\r\n    <!-- 操作按钮 -->\r\n    <div class=\"actions\">\r\n      <el-button type=\"primary\" @click=\"handleCompleteConsultation\">完成问诊</el-button>\r\n      <el-button type=\"danger\" @click=\"handleCancelConsultation\">取消问诊</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Consultation',\r\n  data() {\r\n    return {\r\n      consultation: null, // 问诊信息\r\n      records: [], // 问诊记录\r\n      newRecord: '', // 新增问诊记录内容\r\n      loading: false, // 加载状态\r\n      error: '' // 错误信息\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchConsultation(); // 初始化加载问诊信息\r\n    this.fetchRecords(); // 初始化加载问诊记录\r\n  },\r\n  methods: {\r\n    // 获取问诊信息\r\n    fetchConsultation() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n      const name = this.$route.params.name; // 从路由参数中获取患者姓名\r\n      console.log(name);\r\n      console.log(id);\r\n      this.$request.get('/registration/detail', {\r\n        params: { orderId : id }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.consultation = response.data;\r\n            } else {\r\n              this.error = response.data.message || '获取问诊信息失败';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(response.data.code)\r\n            console.error('获取问诊信息失败:', error);\r\n            this.error = '获取问诊信息失败，请稍后重试';\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    // 获取问诊记录\r\n    fetchRecords() {\r\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n\r\n      this.$request.get('/doctor/getConsultationRecords', {\r\n        params: { id }\r\n      })\r\n          .then(response => {\r\n            if (response.data && response.data.code === 200) {\r\n              this.records = response.data.data;\r\n            } else {\r\n              this.error = response.data.message || '获取问诊记录失败';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取问诊记录失败:', error);\r\n            this.error = '获取问诊记录失败，请稍后重试';\r\n          });\r\n    },\r\n\r\n    // 格式化手机号（脱敏显示）\r\n    formatPhone(phone) {\r\n      if (phone && phone.length === 11) {\r\n        return phone.substring(0, 3) + '****' + phone.substring(7);\r\n      }\r\n      return phone;\r\n    },\r\n\r\n    // 格式化问诊状态\r\n    formatStatus(status) {\r\n      switch (status) {\r\n        case 0:\r\n          return '进行中';\r\n        case 1:\r\n          return '已完成';\r\n        case 2:\r\n          return '已取消';\r\n        default:\r\n          return '未知状态';\r\n      }\r\n    },\r\n\r\n    // 新增问诊记录\r\n    handleAddRecord() {\r\n      if (!this.newRecord.trim()) {\r\n        this.$message.warning('请输入问诊记录内容');\r\n        return;\r\n      }\r\n\r\n      const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n\r\n      this.$request.post('/doctor/addConsultationRecord', {\r\n        consultationId: id,\r\n        content: this.newRecord\r\n      })\r\n          .then(response => {\r\n            if (response.data && response.data.code === 200) {\r\n              this.$message.success('问诊记录添加成功');\r\n              this.newRecord = ''; // 清空输入框\r\n              this.fetchRecords(); // 重新加载问诊记录\r\n            } else {\r\n              this.$message.error(response.data.message || '问诊记录添加失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('问诊记录添加失败:', error);\r\n            this.$message.error('问诊记录添加失败，请稍后重试');\r\n          });\r\n    },\r\n\r\n    // 删除问诊记录\r\n    handleDeleteRecord(recordId) {\r\n      this.$confirm('确定删除该问诊记录吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$request.post('/doctor/deleteConsultationRecord', {\r\n          recordId\r\n        })\r\n            .then(response => {\r\n              if (response.data && response.data.code === 200) {\r\n                this.$message.success('问诊记录删除成功');\r\n                this.fetchRecords(); // 重新加载问诊记录\r\n              } else {\r\n                this.$message.error(response.data.message || '问诊记录删除失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('问诊记录删除失败:', error);\r\n              this.$message.error('问诊记录删除失败，请稍后重试');\r\n            });\r\n      }).catch(() => {\r\n        // 用户取消操作\r\n      });\r\n    },\r\n\r\n    // 完成问诊\r\n    handleCompleteConsultation() {\r\n      this.$confirm('确定完成问诊吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n\r\n        this.$request.post('/doctor/completeConsultation', {\r\n          consultationId: id\r\n        })\r\n            .then(response => {\r\n              if (response.data && response.data.code === 200) {\r\n                this.$message.success('问诊已完成');\r\n                this.fetchConsultation(); // 重新加载问诊信息\r\n              } else {\r\n                this.$message.error(response.data.message || '完成问诊失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('完成问诊失败:', error);\r\n              this.$message.error('完成问诊失败，请稍后重试');\r\n            });\r\n      }).catch(() => {\r\n        // 用户取消操作\r\n      });\r\n    },\r\n\r\n    // 取消问诊\r\n    handleCancelConsultation() {\r\n      this.$confirm('确定取消问诊吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const id = this.$route.params.id; // 从路由参数中获取问诊 ID\r\n\r\n        this.$request.post('/doctor/cancelConsultation', {\r\n          consultationId: id\r\n        })\r\n            .then(response => {\r\n              if (response.data && response.data.code === 200) {\r\n                this.$message.success('问诊已取消');\r\n                this.fetchConsultation(); // 重新加载问诊信息\r\n              } else {\r\n                this.$message.error(response.data.message || '取消问诊失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('取消问诊失败:', error);\r\n              this.$message.error('取消问诊失败，请稍后重试');\r\n            });\r\n      }).catch(() => {\r\n        // 用户取消操作\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.consultation {\r\n  padding: 20px;\r\n}\r\n\r\n.loading,\r\n.error {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n\r\n.consultation-info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.consultation-records {\r\n  margin-top: 20px;\r\n}\r\n\r\n.add-record {\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":"AAwDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MAAA;MACAC,OAAA;MAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,KAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,iBAAA;IACA,KAAAC,YAAA;EACA;;EACAC,OAAA;IACA;IACAF,kBAAA;MACA,KAAAH,OAAA;MACA,KAAAC,KAAA;MACA,MAAAK,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;MACA,MAAAX,IAAA,QAAAY,MAAA,CAAAC,MAAA,CAAAb,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAAf,IAAA;MACAc,OAAA,CAAAC,GAAA,CAAAJ,EAAA;MACA,KAAAK,QAAA,CAAAC,GAAA;QACAJ,MAAA;UAAAK,OAAA,EAAAP;QAAA;MACA,GACAQ,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAnB,IAAA;UACA,KAAAC,YAAA,GAAAkB,QAAA,CAAAnB,IAAA;QACA;UACA,KAAAK,KAAA,GAAAc,QAAA,CAAAnB,IAAA,CAAAoB,OAAA;QACA;MACA,GACAC,KAAA,CAAAhB,KAAA;QACAQ,OAAA,CAAAC,GAAA,CAAAK,QAAA,CAAAnB,IAAA,CAAAsB,IAAA;QACAT,OAAA,CAAAR,KAAA,cAAAA,KAAA;QACA,KAAAA,KAAA;MACA,GACAkB,OAAA;QACA,KAAAnB,OAAA;MACA;IACA;IAEA;IACAI,aAAA;MACA,MAAAE,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;;MAEA,KAAAK,QAAA,CAAAC,GAAA;QACAJ,MAAA;UAAAF;QAAA;MACA,GACAQ,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAnB,IAAA,IAAAmB,QAAA,CAAAnB,IAAA,CAAAsB,IAAA;UACA,KAAApB,OAAA,GAAAiB,QAAA,CAAAnB,IAAA,CAAAA,IAAA;QACA;UACA,KAAAK,KAAA,GAAAc,QAAA,CAAAnB,IAAA,CAAAoB,OAAA;QACA;MACA,GACAC,KAAA,CAAAhB,KAAA;QACAQ,OAAA,CAAAR,KAAA,cAAAA,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA;IACAmB,YAAAC,KAAA;MACA,IAAAA,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACA,OAAAD,KAAA,CAAAE,SAAA,kBAAAF,KAAA,CAAAE,SAAA;MACA;MACA,OAAAF,KAAA;IACA;IAEA;IACAG,aAAAC,MAAA;MACA,QAAAA,MAAA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;IAEA;IACAC,gBAAA;MACA,UAAA3B,SAAA,CAAA4B,IAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,MAAAvB,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;;MAEA,KAAAK,QAAA,CAAAmB,IAAA;QACAC,cAAA,EAAAzB,EAAA;QACA0B,OAAA,OAAAjC;MACA,GACAe,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAnB,IAAA,IAAAmB,QAAA,CAAAnB,IAAA,CAAAsB,IAAA;UACA,KAAAU,QAAA,CAAAK,OAAA;UACA,KAAAlC,SAAA;UACA,KAAAK,YAAA;QACA;UACA,KAAAwB,QAAA,CAAA3B,KAAA,CAAAc,QAAA,CAAAnB,IAAA,CAAAoB,OAAA;QACA;MACA,GACAC,KAAA,CAAAhB,KAAA;QACAQ,OAAA,CAAAR,KAAA,cAAAA,KAAA;QACA,KAAA2B,QAAA,CAAA3B,KAAA;MACA;IACA;IAEA;IACAiC,mBAAAC,QAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAzB,IAAA;QACA,KAAAH,QAAA,CAAAmB,IAAA;UACAK;QACA,GACArB,IAAA,CAAAC,QAAA;UACA,IAAAA,QAAA,CAAAnB,IAAA,IAAAmB,QAAA,CAAAnB,IAAA,CAAAsB,IAAA;YACA,KAAAU,QAAA,CAAAK,OAAA;YACA,KAAA7B,YAAA;UACA;YACA,KAAAwB,QAAA,CAAA3B,KAAA,CAAAc,QAAA,CAAAnB,IAAA,CAAAoB,OAAA;UACA;QACA,GACAC,KAAA,CAAAhB,KAAA;UACAQ,OAAA,CAAAR,KAAA,cAAAA,KAAA;UACA,KAAA2B,QAAA,CAAA3B,KAAA;QACA;MACA,GAAAgB,KAAA;QACA;MAAA,CACA;IACA;IAEA;IACAuB,2BAAA;MACA,KAAAJ,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAzB,IAAA;QACA,MAAAR,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;;QAEA,KAAAK,QAAA,CAAAmB,IAAA;UACAC,cAAA,EAAAzB;QACA,GACAQ,IAAA,CAAAC,QAAA;UACA,IAAAA,QAAA,CAAAnB,IAAA,IAAAmB,QAAA,CAAAnB,IAAA,CAAAsB,IAAA;YACA,KAAAU,QAAA,CAAAK,OAAA;YACA,KAAA9B,iBAAA;UACA;YACA,KAAAyB,QAAA,CAAA3B,KAAA,CAAAc,QAAA,CAAAnB,IAAA,CAAAoB,OAAA;UACA;QACA,GACAC,KAAA,CAAAhB,KAAA;UACAQ,OAAA,CAAAR,KAAA,YAAAA,KAAA;UACA,KAAA2B,QAAA,CAAA3B,KAAA;QACA;MACA,GAAAgB,KAAA;QACA;MAAA,CACA;IACA;IAEA;IACAwB,yBAAA;MACA,KAAAL,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAzB,IAAA;QACA,MAAAR,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;;QAEA,KAAAK,QAAA,CAAAmB,IAAA;UACAC,cAAA,EAAAzB;QACA,GACAQ,IAAA,CAAAC,QAAA;UACA,IAAAA,QAAA,CAAAnB,IAAA,IAAAmB,QAAA,CAAAnB,IAAA,CAAAsB,IAAA;YACA,KAAAU,QAAA,CAAAK,OAAA;YACA,KAAA9B,iBAAA;UACA;YACA,KAAAyB,QAAA,CAAA3B,KAAA,CAAAc,QAAA,CAAAnB,IAAA,CAAAoB,OAAA;UACA;QACA,GACAC,KAAA,CAAAhB,KAAA;UACAQ,OAAA,CAAAR,KAAA,YAAAA,KAAA;UACA,KAAA2B,QAAA,CAAA3B,KAAA;QACA;MACA,GAAAgB,KAAA;QACA;MAAA,CACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}