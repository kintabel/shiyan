{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"doctor-page-table\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  \"slot-scope\": \"scope\"\n};\nconst _hoisted_5 = {\n  \"slot-scope\": \"scope\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_spinner = _resolveComponent(\"el-spinner\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_spinner), _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"正在加载数据...\", -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_table, {\n    data: $options.transformData($data.report),\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, null, {\n      default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.scope.row.label), 1 /* TEXT */)])]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, null, {\n      default: _withCtx(() => [_createElementVNode(\"template\", _hoisted_5, [_createElementVNode(\"span\", null, _toDisplayString(_ctx.scope.row.value), 1 /* TEXT */)])]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$data","isLoading","_hoisted_2","_createVNode","_component_el_spinner","_createElementVNode","_hoisted_3","_component_el_table","data","$options","transformData","report","style","_component_el_table_column","_hoisted_4","_toDisplayString","_ctx","scope","row","label","_hoisted_5","value"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\doctor\\HospitalReport.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"transformData(report)\" style=\"width: 100%;\">\r\n        <el-table-column>\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.label }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column>\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.value }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'HospitalReport-doctor',\r\n  data() {\r\n    return {\r\n      report: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      reportId: this.$route.query.id,\r\n      keyToLabel: {\r\n        reportType: '报告类型',\r\n        userName: '患者姓名',\r\n        patientGender: '患者性别',\r\n        patientAge: '患者年龄',\r\n        patientHeight: '患者身高',\r\n        patientWeight: '患者体重',\r\n        doctorName: '主治医师',\r\n        hospitalName: '医院',\r\n        departmentName: '科室',\r\n        bloodPressure: '血压',\r\n        heartRate: '心率',\r\n        completeBloodCount: '血常规',\r\n        urinalysis: '尿常规',\r\n        contagiousDisease: '传染病史',\r\n        informationId: '其他信息'\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const reportId = this.$route.query.id;\r\n    await this.fetchHospitalizationReport(reportId);\r\n  },\r\n  methods: {\r\n    transformData(data) {\r\n      return Object.entries(data)\r\n          .filter(([key]) => key!== 'id')\r\n          .map(([key, value]) => ({\r\n            label: this.keyToLabel[key] || key,\r\n            value\r\n          }));\r\n    },\r\n    async fetchHospitalizationReport(reportId) {\r\n      try {\r\n        const response = await this.$request.get(`/user/selectReport/${reportId}`);\r\n        if (response.data) {\r\n          this.report = response.data;\r\n          console.log('报告单:', this.report);\r\n        } else {\r\n          this.handleError('获取报告单详细信息失败', response.data);\r\n        }\r\n      } catch (error) {\r\n        this.handleError('获取报告单详细信息失败', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.is-disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n.el-table {\r\n  border: 1px solid #e4e7ed;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.el-table__header-wrapper {\r\n  display: none;\r\n}\r\n\r\n.el-table__row--striped {\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.el-table__cell {\r\n  border-right: 1px solid #e4e7ed;\r\n  border-bottom: 1px solid #e4e7ed;\r\n  padding: 10px;\r\n}\r\n\r\n.el-table__cell:last-child {\r\n  border-right: none;\r\n}\r\n\r\n.el-table__row:last-child .el-table__cell {\r\n  border-bottom: none;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;;EACNA,KAAK,EAAC;;;;;;EAOZ,YAAU,EAAC;AAAO;;EAKlB,YAAU,EAAC;AAAO;;;;;uBAbpCC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBOC,KAAA,CAAAC,SAAS,I,cAApBH,mBAAA,CAGM,OAHNI,UAGM,GAFJC,YAAA,CAAcC,qBAAA,G,0BACdC,mBAAA,CAAsB,cAAhB,WAAS,qB,oBAEjBP,mBAAA,CAaM,OAAAQ,UAAA,GAZJH,YAAA,CAWWI,mBAAA;IAXAC,IAAI,EAAEC,QAAA,CAAAC,aAAa,CAACV,KAAA,CAAAW,MAAM;IAAGC,KAAoB,EAApB;MAAA;IAAA;;sBACtC,MAIkB,CAJlBT,YAAA,CAIkBU,0BAAA;wBAHhB,MAEW,CAFXR,mBAAA,CAEW,YAFXS,UAEW,GADTT,mBAAA,CAAkC,cAAAU,gBAAA,CAAzBC,IAAA,CAAAC,KAAK,CAACC,GAAG,CAACC,KAAK,iB;;;QAG5BhB,YAAA,CAIkBU,0BAAA;wBAHhB,MAEW,CAFXR,mBAAA,CAEW,YAFXe,UAEW,GADTf,mBAAA,CAAkC,cAAAU,gBAAA,CAAzBC,IAAA,CAAAC,KAAK,CAACC,GAAG,CAACG,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}