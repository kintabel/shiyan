{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'SelectRegistrationDetail',\n  data() {\n    return {\n      detail: null,\n      // 挂号详情信息\n      loading: false,\n      // 加载状态\n      error: '' // 错误信息\n    };\n  },\n\n  created() {\n    this.fetchDetail(); // 初始化加载详情信息\n  },\n\n  methods: {\n    // 获取挂号详情信息\n    fetchDetail() {\n      this.loading = true;\n      this.error = '';\n      const id = this.$route.params.id; // 从路由参数中获取挂号 ID\n      console.log(id);\n      this.$request.get('/registration/detail', {\n        params: {\n          orderId: id\n        }\n      }).then(response => {\n        if (response.data) {\n          this.detail = response.data;\n        } else {\n          this.error = response.data.message || '获取详情失败';\n        }\n      }).catch(error => {\n        console.error('获取挂号详情失败:', error);\n        this.error = '获取挂号详情失败，请稍后重试';\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 格式化手机号（脱敏显示）\n    formatPhone(phone) {\n      if (phone && phone.length === 11) {\n        return phone.substring(0, 3) + '****' + phone.substring(7);\n      }\n      return phone;\n    },\n    // 格式化订单状态\n    formatStatus(status) {\n      switch (status) {\n        case 0:\n          return '待问诊';\n        case 1:\n          return '已问诊';\n        case 2:\n          return '已开药';\n        case 3:\n          return '已完成';\n        case 4:\n          return '已取消';\n        case 5:\n          return '复诊';\n        default:\n          return '未知状态';\n      }\n    },\n    // 返回上一页\n    handleBack() {\n      this.$router.go(-1);\n    },\n    // 申诉按钮点击事件处理函数\n    handleAppeal() {\n      console.log('点击了申诉按钮');\n    },\n    handleReferral() {\n      console.log('点击了复诊按钮');\n      this.$router.push({\n        name: 'SubmitRegistration',\n        query: {\n          doctorName: this.detail.doctorName,\n          nowUserName: this.detail.userName,\n          nowUserPhone: this.detail.userPhone,\n          isRevisit: true // 标识这是复诊操作\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","detail","loading","error","created","fetchDetail","methods","id","$route","params","console","log","$request","get","orderId","then","response","message","catch","finally","formatPhone","phone","length","substring","formatStatus","status","handleBack","$router","go","handleAppeal","handleReferral","push","query","doctorName","nowUserName","userName","nowUserPhone","userPhone","isRevisit"],"sources":["src/views/user/SelectRegistrationDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-detail\">\r\n    <h2>挂号详情</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 详情信息 -->\r\n    <div v-if=\"detail\" class=\"detail-info\">\r\n      <el-descriptions :column=\"1\" border>\r\n        <el-descriptions-item label=\"订单号\">{{ detail.order }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"医院名称\">{{ detail.hospitalName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"科室名称\">{{ detail.departmentName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"医生姓名\">{{ detail.doctorName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"下单时间\">{{ detail.orderTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"预约时间\">{{ detail.registerTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"费用\">{{ detail.price }} 元</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者姓名\">{{ detail.userName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者性别\">{{ detail.userGender }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者手机号\">{{ formatPhone(detail.userPhone) }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"订单状态\">{{ formatStatus(detail.status) }}</el-descriptions-item>\r\n      </el-descriptions>\r\n    </div>\r\n\r\n    <!-- 返回按钮 -->\r\n    <div class=\"actions\">\r\n      <el-button type=\"primary\" @click=\"handleBack\">返回</el-button>\r\n      <!-- 添加申诉按钮，当 status 为 3 时显示 -->\r\n      <el-button v-if=\"detail && detail.status === 3\" type=\"warning\" @click=\"handleAppeal\">申诉</el-button>\r\n      <el-button v-if=\"detail && detail.status === 3\" type=\"success\" @click=\"handleReferral\">复诊</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SelectRegistrationDetail',\r\n  data() {\r\n    return {\r\n      detail: null, // 挂号详情信息\r\n      loading: false, // 加载状态\r\n      error: '' // 错误信息\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchDetail(); // 初始化加载详情信息\r\n  },\r\n  methods: {\r\n    // 获取挂号详情信息\r\n    fetchDetail() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      const id = this.$route.params.id; // 从路由参数中获取挂号 ID\r\n      console.log(id);\r\n      this.$request.get('/registration/detail', {\r\n        params: { orderId: id }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.detail = response.data;\r\n            } else {\r\n              this.error = response.data.message || '获取详情失败';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取挂号详情失败:', error);\r\n            this.error = '获取挂号详情失败，请稍后重试';\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    // 格式化手机号（脱敏显示）\r\n    formatPhone(phone) {\r\n      if (phone && phone.length === 11) {\r\n        return phone.substring(0, 3) + '****' + phone.substring(7);\r\n      }\r\n      return phone;\r\n    },\r\n\r\n    // 格式化订单状态\r\n    formatStatus(status) {\r\n      switch (status) {\r\n        case 0:\r\n          return '待问诊';\r\n        case 1:\r\n          return '已问诊';\r\n        case 2:\r\n          return '已开药';\r\n        case 3:\r\n          return '已完成';\r\n        case 4:\r\n          return '已取消';\r\n        case 5:\r\n          return '复诊';\r\n        default:\r\n          return '未知状态';\r\n      }\r\n    },\r\n\r\n    // 返回上一页\r\n    handleBack() {\r\n      this.$router.go(-1);\r\n    },\r\n\r\n    // 申诉按钮点击事件处理函数\r\n    handleAppeal() {\r\n      console.log('点击了申诉按钮');\r\n    },\r\n\r\n    handleReferral(){\r\n      console.log('点击了复诊按钮');\r\n      this.$router.push({\r\n        name: 'SubmitRegistration',\r\n        query: {\r\n          doctorName: this.detail.doctorName,\r\n          nowUserName: this.detail.userName,\r\n          nowUserPhone: this.detail.userPhone,\r\n          isRevisit: true // 标识这是复诊操作\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-detail {\r\n  padding: 20px;\r\n}\r\n\r\n.loading,\r\n.error {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n\r\n.detail-info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":";AAsCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MAAA;MACAC,OAAA;MAAA;MACAC,KAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;;EACAC,OAAA;IACA;IACAD,YAAA;MACA,KAAAH,OAAA;MACA,KAAAC,KAAA;MACA,MAAAI,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;MACAG,OAAA,CAAAC,GAAA,CAAAJ,EAAA;MACA,KAAAK,QAAA,CAAAC,GAAA;QACAJ,MAAA;UAAAK,OAAA,EAAAP;QAAA;MACA,GACAQ,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAhB,IAAA;UACA,KAAAC,MAAA,GAAAe,QAAA,CAAAhB,IAAA;QACA;UACA,KAAAG,KAAA,GAAAa,QAAA,CAAAhB,IAAA,CAAAiB,OAAA;QACA;MACA,GACAC,KAAA,CAAAf,KAAA;QACAO,OAAA,CAAAP,KAAA,cAAAA,KAAA;QACA,KAAAA,KAAA;MACA,GACAgB,OAAA;QACA,KAAAjB,OAAA;MACA;IACA;IAEA;IACAkB,YAAAC,KAAA;MACA,IAAAA,KAAA,IAAAA,KAAA,CAAAC,MAAA;QACA,OAAAD,KAAA,CAAAE,SAAA,kBAAAF,KAAA,CAAAE,SAAA;MACA;MACA,OAAAF,KAAA;IACA;IAEA;IACAG,aAAAC,MAAA;MACA,QAAAA,MAAA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MACA;IACA;IAEA;IACAC,WAAA;MACA,KAAAC,OAAA,CAAAC,EAAA;IACA;IAEA;IACAC,aAAA;MACAnB,OAAA,CAAAC,GAAA;IACA;IAEAmB,eAAA;MACApB,OAAA,CAAAC,GAAA;MACA,KAAAgB,OAAA,CAAAI,IAAA;QACAhC,IAAA;QACAiC,KAAA;UACAC,UAAA,OAAAhC,MAAA,CAAAgC,UAAA;UACAC,WAAA,OAAAjC,MAAA,CAAAkC,QAAA;UACAC,YAAA,OAAAnC,MAAA,CAAAoC,SAAA;UACAC,SAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}