{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from \"@/utils\";\nexport default {\n  name: 'SelectRegistrationDetail',\n  data() {\n    return {\n      detail: null,\n      // 挂号详情信息\n      loading: false,\n      // 加载状态\n      error: '' // 错误信息\n    };\n  },\n\n  created() {\n    this.fetchDetail(); // 初始化加载详情信息\n  },\n\n  methods: {\n    // 获取挂号详情信息\n    fetchDetail() {\n      this.loading = true;\n      this.error = '';\n      const id = this.$route.params.id; // 从路由参数中获取挂号 ID\n      console.log(id);\n      this.$request.get('/registration/detail', {\n        params: {\n          orderId: id\n        }\n      }).then(response => {\n        if (response.data) {\n          this.detail = response.data;\n        } else {\n          this.error = response.data.message || '获取详情失败';\n        }\n      }).catch(error => {\n        console.error('获取挂号详情失败:', error);\n        this.error = '获取挂号详情失败，请稍后重试';\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 格式化手机号（脱敏显示）\n    formatPhone(phone) {\n      if (phone && phone.length === 11) {\n        return phone.substring(0, 3) + '****' + phone.substring(7);\n      }\n      return phone;\n    },\n    // 格式化订单状态\n    formatStatus(status) {\n      switch (status) {\n        case 0:\n          return '待问诊';\n        case 1:\n          return '已问诊';\n        case 2:\n          return '已开药';\n        case 3:\n          return '已完成';\n        case 4:\n          return '已取消';\n        case 5:\n          return '复诊';\n        default:\n          return '未知状态';\n      }\n    },\n    // 返回上一页\n    handleBack() {\n      this.$router.go(-1);\n    },\n    // 申诉按钮点击事件处理函数\n    handleAppeal() {\n      console.log('点击了申诉按钮');\n      this.$confirm('确定选择申诉吗', '申诉', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$router.push({\n          name: 'Appeal',\n          query: {\n            orderId: this.detail.order\n          }\n        });\n      }).catch(() => {});\n    },\n    // 当日复诊确认\n    handleReferralConfirm1() {\n      console.log('点击了当日复诊确认按钮');\n      this.$confirm('确定选择当日复诊吗', '当日复诊', {\n        confirmButtonText: '当日复诊',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 点击确定，执行当日复诊逻辑\n        this.handleImmediateReferral();\n      }).catch(() => {});\n    },\n    // 预约复诊确认\n    handleReferralConfirm2() {\n      console.log('点击了预约复诊确认按钮');\n      this.$confirm('确定选择预约复诊吗', '预约复诊', {\n        confirmButtonText: '预约复诊',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 点击确定，执行当日复诊逻辑\n        this.handleScheduledReferral();\n      }).catch(() => {});\n    },\n    // 当日复诊逻辑\n    handleImmediateReferral() {\n      console.log('点击了当日复诊按钮');\n      this.$router.push({\n        name: 'Registration',\n        query: {\n          doctorName: this.detail.doctorName,\n          hospitalName: this.detail.hospitalName,\n          departmentName: this.detail.departmentName,\n          isRevisit: true,\n          isImmediate: true,\n          // 标识这是当日复诊操作\n          status: 5\n        }\n      });\n    },\n    // 预约复诊逻辑\n    handleScheduledReferral() {\n      console.log('点击了预约复诊按钮');\n      this.$router.push({\n        name: 'Registration',\n        query: {\n          doctorName: this.detail.doctorName,\n          isRevisit: true,\n          isImmediate: false,\n          status: 5\n        }\n      });\n    },\n    evaluation() {\n      if (!this.detail) return;\n      this.evaluationForm = {\n        registerOrder: this.detail.order,\n        evaluationType: 5,\n        // 默认5星好评\n        evaluationContent: '',\n        evaluationDate: parseTime(new Date(), '{y}-{m}-{d}')\n      };\n      this.evaluationDialogVisible = true;\n    },\n    // 提交评价\n    submitEvaluation() {\n      if (!this.evaluationForm.registerOrder) {\n        this.$message.error('评价失败：缺少必要参数');\n        return;\n      }\n      this.loading = true;\n      this.$request.post('/evaluation/add', this.evaluationForm).then(response => {\n        if (response.code === 200) {\n          this.$message.success('评价成功');\n          this.evaluationDialogVisible = false;\n          // 可以刷新详情数据\n          this.fetchDetail();\n        } else {\n          this.$message.error(response.message || '评价失败');\n        }\n      }).catch(error => {\n        console.error('评价失败:', error);\n        this.$message.error('评价失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","detail","loading","error","created","fetchDetail","methods","id","$route","params","console","log","$request","get","orderId","then","response","message","catch","finally","formatPhone","phone","length","substring","formatStatus","status","handleBack","$router","go","handleAppeal","$confirm","confirmButtonText","cancelButtonText","type","push","query","order","handleReferralConfirm1","handleImmediateReferral","handleReferralConfirm2","handleScheduledReferral","doctorName","hospitalName","departmentName","isRevisit","isImmediate","evaluation","evaluationForm","registerOrder","evaluationType","evaluationContent","evaluationDate","Date","evaluationDialogVisible","submitEvaluation","$message","post","code","success"],"sources":["src/views/user/SelectRegistrationDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-detail\">\r\n    <h2>挂号详情</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 详情信息 -->\r\n    <div v-if=\"detail\" class=\"detail-info\">\r\n      <el-descriptions :column=\"1\" border>\r\n        <el-descriptions-item label=\"订单号\">{{ detail.order }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"医院名称\">{{ detail.hospitalName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"科室名称\">{{ detail.departmentName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"医生姓名\">{{ detail.doctorName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"下单时间\">{{ detail.orderTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"预约时间\">{{ detail.registerTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"挂号班次\">{{ detail.shiftType === 'DAY' ? '白班' : '夜班' }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"费用\">{{ detail.price }} 元</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者姓名\">{{ detail.userName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者性别\">{{ detail.userGender }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"患者手机号\">{{ formatPhone(detail.userPhone) }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"订单状态\">{{ formatStatus(detail.status) }}</el-descriptions-item>\r\n      </el-descriptions>\r\n    </div>\r\n\r\n    <!-- 返回按钮 -->\r\n    <div class=\"actions\">\r\n      <el-button type=\"primary\" @click=\"handleBack\">返回</el-button>\r\n      <el-button v-if=\"detail && detail.status === 3\" type=\"warning\" @click=\"handleAppeal\">申诉</el-button>\r\n      <el-button v-if=\"detail && detail.status === 3\" type=\"success\" @click=\"handleReferralConfirm1\">当日复诊</el-button>\r\n      <el-button v-if=\"detail && detail.status === 3\" type=\"success\" @click=\"handleReferralConfirm2\">预约复诊</el-button>\r\n      <el-button v-if=\"detail && detail.status === 3\" type=\"success\" @click=\"evaluation\">满意度评价</el-button>\r\n    </div>\r\n\r\n    <!-- 评价对话框 - 现在嵌套在根div内 -->\r\n    <el-dialog\r\n        title=\"满意度评价\"\r\n        :visible.sync=\"evaluationDialogVisible\"\r\n        width=\"30%\"\r\n        center>\r\n      <div class=\"evaluation-content\">\r\n        <div class=\"evaluation-title\">请为本次就诊体验评分</div>\r\n        <el-rate\r\n            v-model=\"evaluationForm.evaluationType\"\r\n            :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"\r\n            :texts=\"['极差', '较差', '一般', '满意', '非常满意']\"\r\n            show-text>\r\n        </el-rate>\r\n        <el-input\r\n            type=\"textarea\"\r\n            :rows=\"4\"\r\n            placeholder=\"请输入您的评价内容（可选）\"\r\n            v-model=\"evaluationForm.evaluationContent\"\r\n            class=\"evaluation-textarea\">\r\n        </el-input>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"evaluationDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitEvaluation\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {parseTime} from \"@/utils\";\r\n\r\nexport default {\r\n  name: 'SelectRegistrationDetail',\r\n  data() {\r\n    return {\r\n      detail: null, // 挂号详情信息\r\n      loading: false, // 加载状态\r\n      error: '' // 错误信息\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchDetail(); // 初始化加载详情信息\r\n  },\r\n  methods: {\r\n    // 获取挂号详情信息\r\n    fetchDetail() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      const id = this.$route.params.id; // 从路由参数中获取挂号 ID\r\n      console.log(id);\r\n      this.$request.get('/registration/detail', {\r\n        params: { orderId: id }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.detail = response.data;\r\n            } else {\r\n              this.error = response.data.message || '获取详情失败';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取挂号详情失败:', error);\r\n            this.error = '获取挂号详情失败，请稍后重试';\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    // 格式化手机号（脱敏显示）\r\n    formatPhone(phone) {\r\n      if (phone && phone.length === 11) {\r\n        return phone.substring(0, 3) + '****' + phone.substring(7);\r\n      }\r\n      return phone;\r\n    },\r\n\r\n    // 格式化订单状态\r\n    formatStatus(status) {\r\n      switch (status) {\r\n        case 0:\r\n          return '待问诊';\r\n        case 1:\r\n          return '已问诊';\r\n        case 2:\r\n          return '已开药';\r\n        case 3:\r\n          return '已完成';\r\n        case 4:\r\n          return '已取消';\r\n        case 5:\r\n          return '复诊';\r\n        default:\r\n          return '未知状态';\r\n      }\r\n    },\r\n\r\n    // 返回上一页\r\n    handleBack() {\r\n      this.$router.go(-1);\r\n    },\r\n\r\n    // 申诉按钮点击事件处理函数\r\n    handleAppeal() {\r\n      console.log('点击了申诉按钮');\r\n      this.$confirm('确定选择申诉吗', '申诉', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            this.$router.push({\r\n              name: 'Appeal',\r\n              query: {\r\n                orderId: this.detail.order\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n\r\n    // 当日复诊确认\r\n    handleReferralConfirm1() {\r\n      console.log('点击了当日复诊确认按钮');\r\n      this.$confirm('确定选择当日复诊吗', '当日复诊', {\r\n        confirmButtonText: '当日复诊',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            // 点击确定，执行当日复诊逻辑\r\n            this.handleImmediateReferral();\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n\r\n    // 预约复诊确认\r\n    handleReferralConfirm2() {\r\n      console.log('点击了预约复诊确认按钮');\r\n      this.$confirm('确定选择预约复诊吗', '预约复诊', {\r\n        confirmButtonText: '预约复诊',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n          .then(() => {\r\n            // 点击确定，执行当日复诊逻辑\r\n            this.handleScheduledReferral();\r\n          })\r\n          .catch(() => {\r\n          });\r\n    },\r\n\r\n    // 当日复诊逻辑\r\n    handleImmediateReferral() {\r\n      console.log('点击了当日复诊按钮');\r\n      this.$router.push({\r\n        name: 'Registration',\r\n        query: {\r\n          doctorName: this.detail.doctorName,\r\n          hospitalName: this.detail.hospitalName,\r\n          departmentName: this.detail.departmentName,\r\n          isRevisit: true,\r\n          isImmediate: true, // 标识这是当日复诊操作\r\n          status: 5\r\n        }\r\n      });\r\n    },\r\n\r\n    // 预约复诊逻辑\r\n    handleScheduledReferral() {\r\n      console.log('点击了预约复诊按钮');\r\n      this.$router.push({\r\n        name: 'Registration',\r\n        query: {\r\n          doctorName: this.detail.doctorName,\r\n          isRevisit: true,\r\n          isImmediate: false,\r\n          status: 5\r\n        }\r\n      });\r\n    },\r\n\r\n    evaluation() {\r\n      if (!this.detail) return;\r\n\r\n      this.evaluationForm = {\r\n        registerOrder: this.detail.order,\r\n        evaluationType: 5, // 默认5星好评\r\n        evaluationContent: '',\r\n        evaluationDate: parseTime(new Date(), '{y}-{m}-{d}')\r\n      };\r\n      this.evaluationDialogVisible = true;\r\n    },\r\n\r\n    // 提交评价\r\n    submitEvaluation() {\r\n      if (!this.evaluationForm.registerOrder) {\r\n        this.$message.error('评价失败：缺少必要参数');\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.$request.post('/evaluation/add', this.evaluationForm)\r\n          .then(response => {\r\n            if (response.code === 200) {\r\n              this.$message.success('评价成功');\r\n              this.evaluationDialogVisible = false;\r\n              // 可以刷新详情数据\r\n              this.fetchDetail();\r\n            } else {\r\n              this.$message.error(response.message || '评价失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('评价失败:', error);\r\n            this.$message.error('评价失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-detail {\r\n  padding: 20px;\r\n}\r\n\r\n.loading,\r\n.error {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n\r\n.detail-info {\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n.evaluation-content {\r\n  text-align: center;\r\n}\r\n\r\n.evaluation-title {\r\n  margin-bottom: 20px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.evaluation-textarea {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 调整评分组件样式 */\r\n.el-rate {\r\n  margin: 0 auto;\r\n  display: inline-block;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}