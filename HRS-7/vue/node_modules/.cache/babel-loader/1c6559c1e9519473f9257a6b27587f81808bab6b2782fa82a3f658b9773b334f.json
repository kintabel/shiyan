{"ast":null,"code":"export default {\n  name: 'Appeal',\n  data() {\n    return {\n      appealForm: {\n        orderId: this.$route.query.orderId || '',\n        content: '',\n        attachment: null\n      },\n      uploadUrl: '',\n      loading: false,\n      error: '',\n      appealFormRef: null,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.uploadUrl = this.$baseUrl + '/files/add';\n  },\n  methods: {\n    // 处理附件上传变化\n    handleAttachmentChange(file) {\n      this.appealForm.attachment = file;\n    },\n    submitAppeal() {\n      this.$refs.appealFormRef.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.error = '';\n\n          // 创建一个 FormData 对象来处理文件上传\n          const formData = new FormData();\n          formData.append('orderId', this.appealForm.orderId);\n          formData.append('content', this.appealForm.content);\n          if (this.appealForm.attachment) {\n            formData.append('attachment', this.appealForm.attachment);\n          }\n          if (this.appealForm.attachment) {\n            // 获取文件的原始名字\n            const fileName = this.appealForm.attachment.name;\n            formData.append('attachment', this.appealForm.attachment);\n            // 添加文件原始名字到 FormData\n            formData.append('fileName', fileName);\n          }\n          console.log(formData.get('fileName'));\n          // this.$request.post('/register/appeal', formData, {\n          //   headers: {\n          //     'Content-Type': 'multipart/form-data'\n          //   }\n          // })\n          //     .then(response => {\n          //       this.loading = false;\n          //       if (response.data && response.data.success) {\n          //         this.$message.success('申诉提交成功');\n          //         this.handleBack();\n          //       } else {\n          //         this.$message.error(response.data.message || '申诉提交失败，请稍后重试');\n          //       }\n          //     })\n          //     .catch(error => {\n          //       this.loading = false;\n          //       console.error('申诉提交失败:', error);\n          //       this.$message.error('申诉提交失败，请稍后重试');\n          //     });\n        } else {\n          this.$message.error('请填写完整的申诉信息');\n        }\n      });\n    },\n    handleFileSuccess(response) {\n      if (response.code == 200) {\n        this.appealForm.attachmentUrl = response.data;\n        this.$message.success('文件上传成功');\n      } else {\n        this.$message.error('文件上传失败');\n      }\n    },\n    // 返回上一页\n    handleBack() {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"names":["name","data","appealForm","orderId","$route","query","content","attachment","uploadUrl","loading","error","appealFormRef","user","JSON","parse","localStorage","getItem","created","$baseUrl","methods","handleAttachmentChange","file","submitAppeal","$refs","validate","valid","formData","FormData","append","fileName","console","log","get","$message","handleFileSuccess","response","code","attachmentUrl","success","handleBack","$router","go"],"sources":["src/views/user/Appeal.vue"],"sourcesContent":["<template>\r\n  <div class=\"appeal-container\">\r\n    <h2>挂号申诉</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 申诉表单 -->\r\n    <div v-if=\"!loading &&!error\" class=\"appeal-form\">\r\n      <el-form :model=\"appealForm\" ref=\"appealFormRef\" label-width=\"120px\">\r\n        <el-form-item label=\"订单号\">\r\n          <el-input v-model=\"appealForm.orderId\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"申诉内容\" prop=\"content\">\r\n          <el-input type=\"textarea\" v-model=\"appealForm.content\" placeholder=\"请输入申诉内容\" rows=\"4\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"附件\" prop=\"attachment\">\r\n          <el-upload\r\n              style=\"display: inline-block; margin-right: 10px\"\r\n              :action=\"uploadUrl\"\r\n              :headers=\"{ token: this.user.token }\"\r\n              :show-file-list=\"false\"\r\n              :on-change=\"handleAttachmentChange\"\r\n              :on-success=\"handleFileSuccess\"\r\n          >\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n          </el-upload>\r\n          <span v-if=\"appealForm.attachment\">{{ appealForm.attachment.name }}</span>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitAppeal\">提交申诉</el-button>\r\n          <el-button @click=\"handleBack\">返回</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Appeal',\r\n  data() {\r\n    return {\r\n      appealForm: {\r\n        orderId: this.$route.query.orderId || '',\r\n        content: '',\r\n        attachment: null\r\n      },\r\n      uploadUrl: '',\r\n      loading: false,\r\n      error: '',\r\n      appealFormRef: null,\r\n      user:JSON.parse(localStorage.getItem('xm-user') || '{}')\r\n    };\r\n  },\r\n  created() {\r\n    this.uploadUrl = this.$baseUrl + '/files/add'\r\n  },\r\n  methods: {\r\n    // 处理附件上传变化\r\n    handleAttachmentChange(file) {\r\n      this.appealForm.attachment = file;\r\n    },\r\n    submitAppeal() {\r\n      this.$refs.appealFormRef.validate((valid) => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          this.error = '';\r\n\r\n          // 创建一个 FormData 对象来处理文件上传\r\n          const formData = new FormData();\r\n          formData.append('orderId', this.appealForm.orderId);\r\n          formData.append('content', this.appealForm.content);\r\n          if (this.appealForm.attachment) {\r\n            formData.append('attachment', this.appealForm.attachment);\r\n          }\r\n          if (this.appealForm.attachment) {\r\n            // 获取文件的原始名字\r\n            const fileName = this.appealForm.attachment.name;\r\n            formData.append('attachment', this.appealForm.attachment);\r\n            // 添加文件原始名字到 FormData\r\n            formData.append('fileName', fileName);\r\n          }\r\n          console.log(formData.get('fileName'));\r\n          // this.$request.post('/register/appeal', formData, {\r\n          //   headers: {\r\n          //     'Content-Type': 'multipart/form-data'\r\n          //   }\r\n          // })\r\n          //     .then(response => {\r\n          //       this.loading = false;\r\n          //       if (response.data && response.data.success) {\r\n          //         this.$message.success('申诉提交成功');\r\n          //         this.handleBack();\r\n          //       } else {\r\n          //         this.$message.error(response.data.message || '申诉提交失败，请稍后重试');\r\n          //       }\r\n          //     })\r\n          //     .catch(error => {\r\n          //       this.loading = false;\r\n          //       console.error('申诉提交失败:', error);\r\n          //       this.$message.error('申诉提交失败，请稍后重试');\r\n          //     });\r\n        } else {\r\n          this.$message.error('请填写完整的申诉信息');\r\n        }\r\n      });\r\n    },\r\n    handleFileSuccess(response) {\r\n      if (response.code == 200) {\r\n        this.appealForm.attachmentUrl = response.data;\r\n        this.$message.success('文件上传成功');\r\n      } else {\r\n        this.$message.error('文件上传失败');\r\n      }\r\n    },\r\n    // 返回上一页\r\n    handleBack() {\r\n      this.$router.go(-1);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.appeal-container {\r\n  padding: 20px;\r\n}\r\n\r\n.loading,\r\n.error {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n\r\n.appeal-form {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"AA0CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;QACAC,OAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,OAAA;QACAG,OAAA;QACAC,UAAA;MACA;MACAC,SAAA;MACAC,OAAA;MACAC,KAAA;MACAC,aAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAT,SAAA,QAAAU,QAAA;EACA;EACAC,OAAA;IACA;IACAC,uBAAAC,IAAA;MACA,KAAAnB,UAAA,CAAAK,UAAA,GAAAc,IAAA;IACA;IACAC,aAAA;MACA,KAAAC,KAAA,CAAAZ,aAAA,CAAAa,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAhB,OAAA;UACA,KAAAC,KAAA;;UAEA;UACA,MAAAgB,QAAA,OAAAC,QAAA;UACAD,QAAA,CAAAE,MAAA,iBAAA1B,UAAA,CAAAC,OAAA;UACAuB,QAAA,CAAAE,MAAA,iBAAA1B,UAAA,CAAAI,OAAA;UACA,SAAAJ,UAAA,CAAAK,UAAA;YACAmB,QAAA,CAAAE,MAAA,oBAAA1B,UAAA,CAAAK,UAAA;UACA;UACA,SAAAL,UAAA,CAAAK,UAAA;YACA;YACA,MAAAsB,QAAA,QAAA3B,UAAA,CAAAK,UAAA,CAAAP,IAAA;YACA0B,QAAA,CAAAE,MAAA,oBAAA1B,UAAA,CAAAK,UAAA;YACA;YACAmB,QAAA,CAAAE,MAAA,aAAAC,QAAA;UACA;UACAC,OAAA,CAAAC,GAAA,CAAAL,QAAA,CAAAM,GAAA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACA;UACA,KAAAC,QAAA,CAAAvB,KAAA;QACA;MACA;IACA;IACAwB,kBAAAC,QAAA;MACA,IAAAA,QAAA,CAAAC,IAAA;QACA,KAAAlC,UAAA,CAAAmC,aAAA,GAAAF,QAAA,CAAAlC,IAAA;QACA,KAAAgC,QAAA,CAAAK,OAAA;MACA;QACA,KAAAL,QAAA,CAAAvB,KAAA;MACA;IACA;IACA;IACA6B,WAAA;MACA,KAAAC,OAAA,CAAAC,EAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}