{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'PrescribingAdministration',\n  data() {\n    const user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\n    return {\n      // 开药表单数据\n      prescriptionForm: {\n        drugName: '',\n        // 药品名称\n        quantity: 1,\n        // 药品数量\n        instructions: '' // 用药说明\n      },\n\n      // 已开药品列表\n      prescriptionList: [],\n      // 药物库存选项\n      drugOptions: []\n    };\n  },\n  created() {\n    this.fetchDrugStock(); // 加载药物库存信息\n  },\n\n  methods: {\n    // 获取药物库存信息\n    fetchDrugStock() {\n      console.log(this.$route.params.departmentId);\n      console.log(this.$route.params.hospitalId);\n      this.$request.get('/stock/selectByDidAndHid', {\n        params: {\n          departmentId: this.$route.params.departmentId,\n          // 科室ID\n          hospitalId: this.$route.params.hospitalId // 医院ID\n        }\n      }).then(response => {\n        if (response.data && response.data.length > 0) {\n          this.drugOptions = response.data.filter(drug => drug.type === 1); // 只显示药物类型\n        }\n      }).catch(error => {\n        console.error('获取药物库存信息失败:', error);\n        this.$message.error('获取药物库存信息失败，请稍后重试');\n      });\n    },\n    // 处理药物选择\n    handleDrugChange(selectedDrugName) {\n      const selectedDrug = this.drugOptions.find(drug => drug.name === selectedDrugName);\n      if (selectedDrug) {\n        this.prescriptionForm.drugName = selectedDrug.name;\n        this.prescriptionForm.quantity = 1; // 重置数量\n      }\n    },\n\n    // 获取药品的最大数量（基于库存）\n    getMaxQuantity(drugName) {\n      const selectedDrug = this.drugOptions.find(drug => drug.name === drugName);\n      return selectedDrug ? selectedDrug.stock : 100; // 默认最大值为100\n    },\n\n    // 添加药品到列表\n    handleAddPrescription() {\n      if (!this.prescriptionForm.drugName || !this.prescriptionForm.instructions) {\n        this.$message.warning('请填写完整的药品信息');\n        return;\n      }\n      this.prescriptionList.push({\n        ...this.prescriptionForm\n      });\n      this.handleResetForm(); // 添加后重置表单\n    },\n\n    // 重置表单\n    handleResetForm() {\n      this.prescriptionForm = {\n        drugName: '',\n        quantity: 1,\n        instructions: ''\n      };\n    },\n    // 删除药品\n    handleDeletePrescription(row) {\n      this.prescriptionList = this.prescriptionList.filter(item => item.drugName !== row.drugName);\n      this.$message.success('删除成功');\n    },\n    // 提交开药\n    handleSubmitPrescription() {\n      if (this.prescriptionList.length === 0) {\n        this.$message.warning('请至少添加一种药品');\n        return;\n      }\n      this.$confirm('是否确认提交开药信息？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 模拟提交到后端\n        console.log('提交的药品列表:', this.prescriptionList);\n        this.$message.success('开药信息提交成功');\n        this.prescriptionList = []; // 清空列表\n      }).catch(() => {\n        this.$message.info('已取消提交');\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","prescriptionForm","drugName","quantity","instructions","prescriptionList","drugOptions","created","fetchDrugStock","methods","console","log","$route","params","departmentId","hospitalId","$request","get","then","response","length","filter","drug","type","catch","error","$message","handleDrugChange","selectedDrugName","selectedDrug","find","getMaxQuantity","stock","handleAddPrescription","warning","push","handleResetForm","handleDeletePrescription","row","item","success","handleSubmitPrescription","$confirm","confirmButtonText","cancelButtonText","info"],"sources":["src/views/doctor/Prescription.vue"],"sourcesContent":["<template>\r\n  <div class=\"prescribing-administration\">\r\n    <h2>开药管理</h2>\r\n    <el-button type=\"text\" @click=\"$router.go(-1)\">返回</el-button>\r\n\r\n    <!-- 开药表单 -->\r\n    <el-form :model=\"prescriptionForm\" label-width=\"120px\" class=\"prescription-form\">\r\n      <!-- 药品名称下拉框 -->\r\n      <el-form-item label=\"药品名称\">\r\n        <el-select\r\n            v-model=\"prescriptionForm.drugName\"\r\n            placeholder=\"请选择药品\"\r\n            filterable\r\n            clearable\r\n            @change=\"handleDrugChange\"\r\n        >\r\n          <el-option\r\n              v-for=\"drug in drugOptions\"\r\n              :key=\"drug.id\"\r\n              :label=\"drug.name\"\r\n              :value=\"drug.name\"\r\n          >\r\n            <span>{{ drug.name }}</span>\r\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n              库存: {{ drug.stock }}\r\n            </span>\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"药品数量\">\r\n        <el-input-number\r\n            v-model=\"prescriptionForm.quantity\"\r\n            :min=\"1\"\r\n            :max=\"getMaxQuantity(prescriptionForm.drugName)\"\r\n        ></el-input-number>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"用药说明\">\r\n        <el-input\r\n            type=\"textarea\"\r\n            v-model=\"prescriptionForm.instructions\"\r\n            placeholder=\"请输入用药说明\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleAddPrescription\">添加药品</el-button>\r\n        <el-button type=\"info\" @click=\"handleResetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 已开药品列表 -->\r\n    <el-table :data=\"prescriptionList\" stripe class=\"prescription-table\">\r\n      <el-table-column prop=\"drugName\" label=\"药品名称\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"quantity\" label=\"数量\" width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"instructions\" label=\"用药说明\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDeletePrescription(scope.row)\"\r\n          >删除</el-button\r\n          >\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 提交按钮 -->\r\n    <div class=\"submit-section\">\r\n      <el-button type=\"success\" @click=\"handleSubmitPrescription\">提交开药</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PrescribingAdministration',\r\n  data() {\r\n    const user = JSON.parse(localStorage.getItem(\"xm-user\") || '{}');\r\n    return {\r\n      // 开药表单数据\r\n      prescriptionForm: {\r\n        drugName: '', // 药品名称\r\n        quantity: 1, // 药品数量\r\n        instructions: '', // 用药说明\r\n      },\r\n      // 已开药品列表\r\n      prescriptionList: [],\r\n      // 药物库存选项\r\n      drugOptions: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchDrugStock(); // 加载药物库存信息\r\n  },\r\n  methods: {\r\n    // 获取药物库存信息\r\n    fetchDrugStock() {\r\n      console.log(this.$route.params.departmentId);\r\n      console.log(this.$route.params.hospitalId);\r\n      this.$request\r\n          .get('/stock/selectByDidAndHid', {\r\n            params: {\r\n              departmentId: this.$route.params.departmentId, // 科室ID\r\n              hospitalId: this.$route.params.hospitalId, // 医院ID\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.data && response.data.length > 0) {\r\n              this.drugOptions = response.data.filter((drug) => drug.type === 1); // 只显示药物类型\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('获取药物库存信息失败:', error);\r\n            this.$message.error('获取药物库存信息失败，请稍后重试');\r\n          });\r\n    },\r\n\r\n    // 处理药物选择\r\n    handleDrugChange(selectedDrugName) {\r\n      const selectedDrug = this.drugOptions.find((drug) => drug.name === selectedDrugName);\r\n      if (selectedDrug) {\r\n        this.prescriptionForm.drugName = selectedDrug.name;\r\n        this.prescriptionForm.quantity = 1; // 重置数量\r\n      }\r\n    },\r\n\r\n    // 获取药品的最大数量（基于库存）\r\n    getMaxQuantity(drugName) {\r\n      const selectedDrug = this.drugOptions.find((drug) => drug.name === drugName);\r\n      return selectedDrug ? selectedDrug.stock : 100; // 默认最大值为100\r\n    },\r\n\r\n    // 添加药品到列表\r\n    handleAddPrescription() {\r\n      if (!this.prescriptionForm.drugName || !this.prescriptionForm.instructions) {\r\n        this.$message.warning('请填写完整的药品信息');\r\n        return;\r\n      }\r\n      this.prescriptionList.push({ ...this.prescriptionForm });\r\n      this.handleResetForm(); // 添加后重置表单\r\n    },\r\n\r\n    // 重置表单\r\n    handleResetForm() {\r\n      this.prescriptionForm = {\r\n        drugName: '',\r\n        quantity: 1,\r\n        instructions: '',\r\n      };\r\n    },\r\n\r\n    // 删除药品\r\n    handleDeletePrescription(row) {\r\n      this.prescriptionList = this.prescriptionList.filter(\r\n          (item) => item.drugName !== row.drugName\r\n      );\r\n      this.$message.success('删除成功');\r\n    },\r\n\r\n    // 提交开药\r\n    handleSubmitPrescription() {\r\n      if (this.prescriptionList.length === 0) {\r\n        this.$message.warning('请至少添加一种药品');\r\n        return;\r\n      }\r\n      this.$confirm('是否确认提交开药信息？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n          .then(() => {\r\n            // 模拟提交到后端\r\n            console.log('提交的药品列表:', this.prescriptionList);\r\n            this.$message.success('开药信息提交成功');\r\n            this.prescriptionList = []; // 清空列表\r\n          })\r\n          .catch(() => {\r\n            this.$message.info('已取消提交');\r\n          });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.prescribing-administration {\r\n  padding: 20px;\r\n}\r\n\r\n.prescription-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.prescription-table {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.submit-section {\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":";AA0EA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;MACA;MACAC,gBAAA;QACAC,QAAA;QAAA;QACAC,QAAA;QAAA;QACAC,YAAA;MACA;;MACA;MACAC,gBAAA;MACA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;EACA;;EACAC,OAAA;IACA;IACAD,eAAA;MACAE,OAAA,CAAAC,GAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAC,YAAA;MACAJ,OAAA,CAAAC,GAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAE,UAAA;MACA,KAAAC,QAAA,CACAC,GAAA;QACAJ,MAAA;UACAC,YAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,YAAA;UAAA;UACAC,UAAA,OAAAH,MAAA,CAAAC,MAAA,CAAAE,UAAA;QACA;MACA,GACAG,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAxB,IAAA,IAAAwB,QAAA,CAAAxB,IAAA,CAAAyB,MAAA;UACA,KAAAd,WAAA,GAAAa,QAAA,CAAAxB,IAAA,CAAA0B,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA;QACA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAf,OAAA,CAAAe,KAAA,gBAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEA;IACAE,iBAAAC,gBAAA;MACA,MAAAC,YAAA,QAAAvB,WAAA,CAAAwB,IAAA,CAAAR,IAAA,IAAAA,IAAA,CAAA5B,IAAA,KAAAkC,gBAAA;MACA,IAAAC,YAAA;QACA,KAAA5B,gBAAA,CAAAC,QAAA,GAAA2B,YAAA,CAAAnC,IAAA;QACA,KAAAO,gBAAA,CAAAE,QAAA;MACA;IACA;;IAEA;IACA4B,eAAA7B,QAAA;MACA,MAAA2B,YAAA,QAAAvB,WAAA,CAAAwB,IAAA,CAAAR,IAAA,IAAAA,IAAA,CAAA5B,IAAA,KAAAQ,QAAA;MACA,OAAA2B,YAAA,GAAAA,YAAA,CAAAG,KAAA;IACA;;IAEA;IACAC,sBAAA;MACA,UAAAhC,gBAAA,CAAAC,QAAA,UAAAD,gBAAA,CAAAG,YAAA;QACA,KAAAsB,QAAA,CAAAQ,OAAA;QACA;MACA;MACA,KAAA7B,gBAAA,CAAA8B,IAAA;QAAA,QAAAlC;MAAA;MACA,KAAAmC,eAAA;IACA;;IAEA;IACAA,gBAAA;MACA,KAAAnC,gBAAA;QACAC,QAAA;QACAC,QAAA;QACAC,YAAA;MACA;IACA;IAEA;IACAiC,yBAAAC,GAAA;MACA,KAAAjC,gBAAA,QAAAA,gBAAA,CAAAgB,MAAA,CACAkB,IAAA,IAAAA,IAAA,CAAArC,QAAA,KAAAoC,GAAA,CAAApC,QACA;MACA,KAAAwB,QAAA,CAAAc,OAAA;IACA;IAEA;IACAC,yBAAA;MACA,SAAApC,gBAAA,CAAAe,MAAA;QACA,KAAAM,QAAA,CAAAQ,OAAA;QACA;MACA;MACA,KAAAQ,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACArB,IAAA;MACA,GACAL,IAAA;QACA;QACAR,OAAA,CAAAC,GAAA,kBAAAN,gBAAA;QACA,KAAAqB,QAAA,CAAAc,OAAA;QACA,KAAAnC,gBAAA;MACA,GACAmB,KAAA;QACA,KAAAE,QAAA,CAAAmB,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}