{"ast":null,"code":"export default {\n  name: 'AdmissionDialog',\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    patientInfo: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      formData: {\n        patientName: this.$route.params.userName,\n        department: '',\n        bedId: '',\n        admissionTime: new Date(),\n        prepayment: 3000,\n        conditionDescription: ''\n      },\n      departments: [{\n        id: 1,\n        name: '内科'\n      }, {\n        id: 2,\n        name: '外科'\n      }, {\n        id: 3,\n        name: '儿科'\n      }, {\n        id: 4,\n        name: '妇产科'\n      }, {\n        id: 5,\n        name: '骨科'\n      }],\n      availableBeds: [{\n        id: 101,\n        number: '101',\n        type: '普通床位',\n        price: 100\n      }, {\n        id: 102,\n        number: '102',\n        type: '普通床位',\n        price: 100\n      }, {\n        id: 201,\n        number: '201',\n        type: 'VIP床位',\n        price: 300\n      }, {\n        id: 202,\n        number: '202',\n        type: 'VIP床位',\n        price: 300\n      }],\n      loading: false\n    };\n  },\n  watch: {\n    patientInfo: {\n      immediate: true,\n      handler(val) {\n        if (val && val.id) {\n          this.formData.patientId = val.id;\n          this.formData.patientName = val.userName;\n        }\n      }\n    }\n  },\n  methods: {\n    // 获取可用床位\n    fetchAvailableBeds() {\n      // 这里应该调用API获取可用床位列表\n      // 示例中直接使用静态数据\n      this.loading = true;\n      this.$request.get('/beds/available', {\n        params: {\n          departmentId: this.formData.department\n        }\n      }).then(response => {\n        this.availableBeds = response.data || [];\n      }).catch(error => {\n        console.error('获取床位失败:', error);\n        this.$message.error('获取可用床位失败');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    // 提交表单\n    handleSubmit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$request.post('/admission/create', this.formData).then(response => {\n            this.$message.success('入院办理成功');\n            this.$emit('success');\n            this.handleClose();\n          }).catch(error => {\n            console.error('入院办理失败:', error);\n            this.$message.error(error.response?.data?.message || '入院办理失败');\n          }).finally(() => {\n            this.loading = false;\n          });\n        }\n      });\n    },\n    // 关闭对话框\n    handleClose() {\n      this.$emit('update:visible', false);\n    }\n  }\n};","map":{"version":3,"names":["name","props","visible","type","Boolean","default","patientInfo","Object","data","formData","patientName","$route","params","userName","department","bedId","admissionTime","Date","prepayment","conditionDescription","departments","id","availableBeds","number","price","loading","watch","immediate","handler","val","patientId","methods","fetchAvailableBeds","$request","get","departmentId","then","response","catch","error","console","$message","finally","handleSubmit","$refs","form","validate","valid","post","success","$emit","handleClose","message"],"sources":["src/views/doctor/Admission.vue"],"sourcesContent":["<template>\r\n  <el-dialog\r\n      title=\"入院办理\"\r\n      :visible.sync=\"visible\"\r\n      width=\"500px\"\r\n      :before-close=\"handleClose\"\r\n  >\r\n    <el-form ref=\"form\" :model=\"formData\" label-width=\"100px\">\r\n      <!-- 患者信息 -->\r\n      <el-form-item label=\"患者姓名\">\r\n        <el-input v-model=\"formData.patientName\" disabled></el-input>\r\n      </el-form-item>\r\n\r\n      <!-- 科室选择 -->\r\n      <el-form-item label=\"科室\" prop=\"department\">\r\n        <el-select\r\n            v-model=\"formData.department\"\r\n            placeholder=\"请选择科室\"\r\n            style=\"width: 100%\"\r\n        >\r\n          <el-option\r\n              v-for=\"dept in departments\"\r\n              :key=\"dept.id\"\r\n              :label=\"dept.name\"\r\n              :value=\"dept.id\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <!-- 床位选择 -->\r\n      <el-form-item label=\"床位\" prop=\"bedId\">\r\n        <el-select\r\n            v-model=\"formData.bedId\"\r\n            placeholder=\"请选择床位\"\r\n            style=\"width: 100%\"\r\n            @focus=\"fetchAvailableBeds\"\r\n        >\r\n          <el-option\r\n              v-for=\"bed in availableBeds\"\r\n              :key=\"bed.id\"\r\n              :label=\"`${bed.number} (${bed.type} - ${bed.price}元/天)`\"\r\n              :value=\"bed.id\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <!-- 入院时间 -->\r\n      <el-form-item label=\"入院时间\">\r\n        <el-date-picker\r\n            v-model=\"formData.admissionTime\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择入院时间\"\r\n            style=\"width: 100%\"\r\n            :default-time=\"new Date()\"\r\n        ></el-date-picker>\r\n      </el-form-item>\r\n\r\n      <!-- 预交金额 -->\r\n      <el-form-item label=\"预交金额\" prop=\"prepayment\">\r\n        <el-input-number\r\n            v-model=\"formData.prepayment\"\r\n            :min=\"1000\"\r\n            :step=\"500\"\r\n            style=\"width: 100%\"\r\n            placeholder=\"请输入预交金额\"\r\n        ></el-input-number>\r\n      </el-form-item>\r\n\r\n      <!-- 病情描述 -->\r\n      <el-form-item label=\"病情描述\">\r\n        <el-input\r\n            v-model=\"formData.conditionDescription\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"简要描述患者病情\"\r\n        ></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"handleClose\">取消</el-button>\r\n      <el-button type=\"primary\" @click=\"handleSubmit\">确认办理</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AdmissionDialog',\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    patientInfo: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      formData: {\r\n        patientName: this.$route.params.userName,\r\n        department: '',\r\n        bedId: '',\r\n        admissionTime: new Date(),\r\n        prepayment: 3000,\r\n        conditionDescription: ''\r\n      },\r\n      departments: [\r\n        { id: 1, name: '内科' },\r\n        { id: 2, name: '外科' },\r\n        { id: 3, name: '儿科' },\r\n        { id: 4, name: '妇产科' },\r\n        { id: 5, name: '骨科' }\r\n      ],\r\n      availableBeds: [\r\n        { id: 101, number: '101', type: '普通床位', price: 100 },\r\n        { id: 102, number: '102', type: '普通床位', price: 100 },\r\n        { id: 201, number: '201', type: 'VIP床位', price: 300 },\r\n        { id: 202, number: '202', type: 'VIP床位', price: 300 }\r\n      ],\r\n      loading: false\r\n    }\r\n  },\r\n  watch: {\r\n    patientInfo: {\r\n      immediate: true,\r\n      handler(val) {\r\n        if (val && val.id) {\r\n          this.formData.patientId = val.id\r\n          this.formData.patientName = val.userName\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取可用床位\r\n    fetchAvailableBeds() {\r\n      // 这里应该调用API获取可用床位列表\r\n      // 示例中直接使用静态数据\r\n      this.loading = true\r\n      this.$request.get('/beds/available', {\r\n        params: {\r\n          departmentId: this.formData.department\r\n        }\r\n      })\r\n          .then(response => {\r\n            this.availableBeds = response.data || []\r\n          })\r\n          .catch(error => {\r\n            console.error('获取床位失败:', error)\r\n            this.$message.error('获取可用床位失败')\r\n          })\r\n          .finally(() => {\r\n            this.loading = false\r\n          })\r\n    },\r\n\r\n    // 提交表单\r\n    handleSubmit() {\r\n      this.$refs.form.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n          this.$request.post('/admission/create', this.formData)\r\n              .then(response => {\r\n                this.$message.success('入院办理成功')\r\n                this.$emit('success')\r\n                this.handleClose()\r\n              })\r\n              .catch(error => {\r\n                console.error('入院办理失败:', error)\r\n                this.$message.error(error.response?.data?.message || '入院办理失败')\r\n              })\r\n              .finally(() => {\r\n                this.loading = false\r\n              })\r\n        }\r\n      })\r\n    },\r\n\r\n    // 关闭对话框\r\n    handleClose() {\r\n      this.$emit('update:visible', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>"],"mappings":"AAuFA;EACAA,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,WAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA,EAAAA,CAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,QAAA;QACAC,WAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAC,QAAA;QACAC,UAAA;QACAC,KAAA;QACAC,aAAA,MAAAC,IAAA;QACAC,UAAA;QACAC,oBAAA;MACA;MACAC,WAAA,GACA;QAAAC,EAAA;QAAArB,IAAA;MAAA,GACA;QAAAqB,EAAA;QAAArB,IAAA;MAAA,GACA;QAAAqB,EAAA;QAAArB,IAAA;MAAA,GACA;QAAAqB,EAAA;QAAArB,IAAA;MAAA,GACA;QAAAqB,EAAA;QAAArB,IAAA;MAAA,EACA;MACAsB,aAAA,GACA;QAAAD,EAAA;QAAAE,MAAA;QAAApB,IAAA;QAAAqB,KAAA;MAAA,GACA;QAAAH,EAAA;QAAAE,MAAA;QAAApB,IAAA;QAAAqB,KAAA;MAAA,GACA;QAAAH,EAAA;QAAAE,MAAA;QAAApB,IAAA;QAAAqB,KAAA;MAAA,GACA;QAAAH,EAAA;QAAAE,MAAA;QAAApB,IAAA;QAAAqB,KAAA;MAAA,EACA;MACAC,OAAA;IACA;EACA;EACAC,KAAA;IACApB,WAAA;MACAqB,SAAA;MACAC,QAAAC,GAAA;QACA,IAAAA,GAAA,IAAAA,GAAA,CAAAR,EAAA;UACA,KAAAZ,QAAA,CAAAqB,SAAA,GAAAD,GAAA,CAAAR,EAAA;UACA,KAAAZ,QAAA,CAAAC,WAAA,GAAAmB,GAAA,CAAAhB,QAAA;QACA;MACA;IACA;EACA;EACAkB,OAAA;IACA;IACAC,mBAAA;MACA;MACA;MACA,KAAAP,OAAA;MACA,KAAAQ,QAAA,CAAAC,GAAA;QACAtB,MAAA;UACAuB,YAAA,OAAA1B,QAAA,CAAAK;QACA;MACA,GACAsB,IAAA,CAAAC,QAAA;QACA,KAAAf,aAAA,GAAAe,QAAA,CAAA7B,IAAA;MACA,GACA8B,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA,GACAG,OAAA;QACA,KAAAjB,OAAA;MACA;IACA;IAEA;IACAkB,aAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAtB,OAAA;UACA,KAAAQ,QAAA,CAAAe,IAAA,2BAAAvC,QAAA,EACA2B,IAAA,CAAAC,QAAA;YACA,KAAAI,QAAA,CAAAQ,OAAA;YACA,KAAAC,KAAA;YACA,KAAAC,WAAA;UACA,GACAb,KAAA,CAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;YACA,KAAAE,QAAA,CAAAF,KAAA,CAAAA,KAAA,CAAAF,QAAA,EAAA7B,IAAA,EAAA4C,OAAA;UACA,GACAV,OAAA;YACA,KAAAjB,OAAA;UACA;QACA;MACA;IACA;IAEA;IACA0B,YAAA;MACA,KAAAD,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}