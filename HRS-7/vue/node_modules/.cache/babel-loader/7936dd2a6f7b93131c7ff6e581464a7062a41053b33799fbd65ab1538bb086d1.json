{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  slot: \"header\",\n  class: \"clearfix\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"float\": \"right\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"month-display\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n      slot: \"header\",\n      class: \"clearfix\"\n    }, [_createElementVNode(\"span\", null, \"医生工作量统计\")], -1 /* HOISTED */)), _createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 6\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n            slot: \"header\",\n            class: \"clearfix\"\n          }, [_createElementVNode(\"span\", null, \"科室列表\")], -1 /* HOISTED */)), _createVNode(_component_el_tree, {\n            data: $data.departments,\n            props: $data.defaultProps,\n            onNodeClick: $options.handleDepartmentClick\n          }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 18\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, \"医生列表 - \" + _toDisplayString($data.selectedDepartment ? $data.selectedDepartment.name : '请选择科室'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.generateStatistics,\n            loading: $data.loading\n          }, {\n            default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 生成上月工作量统计 \")])),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.calculatePerformance,\n            loading: $data.loading\n          }, {\n            default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 计算上个月绩效 \")])),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createElementVNode(\"span\", _hoisted_4, \"统计月份：\" + _toDisplayString($options.lastMonth), 1 /* TEXT */)])]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n            data: $data.doctors,\n            border: \"\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_table_column, {\n              prop: \"name\",\n              label: \"姓名\",\n              width: \"120\"\n            }), _createVNode(_component_el_table_column, {\n              label: \"职称\",\n              width: \"120\"\n            }, {\n              default: _withCtx(scope => [_createTextVNode(_toDisplayString($options.getDoctorTitle(scope.row.status)), 1 /* TEXT */)]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","slot","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_createElementVNode","_component_el_row","gutter","_component_el_col","span","_component_el_tree","data","$data","departments","props","defaultProps","onNodeClick","$options","handleDepartmentClick","_hoisted_2","_toDisplayString","selectedDepartment","name","_hoisted_3","_component_el_button","type","onClick","generateStatistics","loading","_cache","calculatePerformance","_hoisted_4","lastMonth","_createBlock","_component_el_table","doctors","border","_component_el_table_column","prop","label","width","default","_withCtx","scope","getDoctorTitle","row","status"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\hospitalAdmin\\WorkLoad.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生工作量统计</span>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>医生列表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-button\r\n                    type=\"primary\"\r\n                    @click=\"generateStatistics\"\r\n                    :loading=\"loading\"\r\n                >\r\n                  生成上月工作量统计\r\n                </el-button>\r\n                <el-button\r\n                    type=\"primary\"\r\n                    @click=\"calculatePerformance\"\r\n                    :loading=\"loading\"\r\n                >\r\n                  计算上个月绩效\r\n                </el-button>\r\n                <span class=\"month-display\">统计月份：{{ lastMonth }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"doctors\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"name\" label=\"姓名\" width=\"120\" />\r\n              <el-table-column label=\"职称\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ getDoctorTitle(scope.row.status) }}\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WorkloadStatistics',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      selectedDepartment: null,\r\n      departments: [],\r\n      doctors: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    lastMonth() {\r\n      const date = new Date();\r\n      date.setMonth(date.getMonth() - 1);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      return `${year}-${month}`;\r\n    },\r\n  },\r\n  methods: {\r\n    handleDepartmentClick(data) {\r\n      this.selectedDepartment = data;\r\n      this.getDoctorsByDepartment();\r\n    },\r\n    generateStatistics() {\r\n      this.loading = true;\r\n      this.$request.post('/admin/workload-statistics', null, {\r\n        params: {  // axios的params会转为URL查询参数\r\n          adminId: this.user.id,\r\n          yearMonth: this.lastMonth\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              alert('工作量统计生成成功');\r\n            } else {\r\n              alert(response.message || '生成失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('请求失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    calculatePerformance(){\r\n      this.loading = true;\r\n      this.$request.post('/admin/calculate-performance', null, {\r\n        params: {  // axios的params会转为URL查询参数\r\n          adminId: this.user.id,\r\n          yearMonth: this.lastMonth\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              alert('绩效计算成功');\r\n            } else {\r\n              alert(response.message || '生成失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('请求失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDepartments() {\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.departments = response.data;\r\n            } else {\r\n              alert(response.data.message || '获取科室列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取科室列表失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          });\r\n    },\r\n    getDoctorsByDepartment() {\r\n      if (!this.selectedDepartment) return;\r\n      console.log('获取医生列表:', this.selectedDepartment.id);\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: this.selectedDepartment.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.doctors = response.data;\r\n              console.log('医生列表:', this.doctors);\r\n            } else {\r\n              alert(response.data.message || '获取医生列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生列表失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          });\r\n    },\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    console.log('当前用户信息:', this.user);\r\n    this.getDepartments();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n.month-display {\r\n  color: #666;\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.el-tree {\r\n  background: transparent;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAsBXC,IAAI,EAAC,QAAQ;EAACD,KAAK,EAAC;;;EAElBE,KAAoB,EAApB;IAAA;EAAA;AAAoB;;EAejBF,KAAK,EAAC;AAAe;;;;;;;;;;uBAvCzCG,mBAAA,CA4DM,OA5DNC,UA4DM,GA3DJC,YAAA,CA0DUC,kBAAA;sBAzDR,MAEM,C,0BAFNC,mBAAA,CAEM;MAFDN,IAAI,EAAC,QAAQ;MAACD,KAAK,EAAC;QACvBO,mBAAA,CAAoB,cAAd,SAAO,E,sBAGfF,YAAA,CAoDSG,iBAAA;MApDAC,MAAM,EAAE;IAAE;wBACjB,MAWS,CAXTJ,YAAA,CAWSK,iBAAA;QAXAC,IAAI,EAAE;MAAC;0BACd,MASU,CATVN,YAAA,CASUC,kBAAA;4BARR,MAEM,C,0BAFNC,mBAAA,CAEM;YAFDN,IAAI,EAAC,QAAQ;YAACD,KAAK,EAAC;cACvBO,mBAAA,CAAiB,cAAX,MAAI,E,sBAEZF,YAAA,CAIWO,kBAAA;YAHNC,IAAI,EAAEC,KAAA,CAAAC,WAAW;YACjBC,KAAK,EAAEF,KAAA,CAAAG,YAAY;YACnBC,WAAU,EAAEC,QAAA,CAAAC;;;;;;UAKrBf,YAAA,CAqCSK,iBAAA;QArCAC,IAAI,EAAE;MAAE;0BACf,MAmCU,CAnCVN,YAAA,CAmCUC,kBAAA;4BAlCR,MAmBM,CAnBNC,mBAAA,CAmBM,OAnBNc,UAmBM,GAlBJd,mBAAA,CAAgF,cAA1E,SAAO,GAAAe,gBAAA,CAAGR,KAAA,CAAAS,kBAAkB,GAAGT,KAAA,CAAAS,kBAAkB,CAACC,IAAI,4BAC5DjB,mBAAA,CAgBM,OAhBNkB,UAgBM,GAfJpB,YAAA,CAMYqB,oBAAA;YALRC,IAAI,EAAC,SAAS;YACbC,OAAK,EAAET,QAAA,CAAAU,kBAAkB;YACzBC,OAAO,EAAEhB,KAAA,CAAAgB;;8BACb,MAEDC,MAAA,QAAAA,MAAA,O,iBAFC,aAED,E;;qDACA1B,YAAA,CAMYqB,oBAAA;YALRC,IAAI,EAAC,SAAS;YACbC,OAAK,EAAET,QAAA,CAAAa,oBAAoB;YAC3BF,OAAO,EAAEhB,KAAA,CAAAgB;;8BACb,MAEDC,MAAA,QAAAA,MAAA,O,iBAFC,WAED,E;;qDACAxB,mBAAA,CAAuD,QAAvD0B,UAAuD,EAA3B,OAAK,GAAAX,gBAAA,CAAGH,QAAA,CAAAe,SAAS,iB,oCAIjDC,YAAA,CAYWC,mBAAA;YAVNvB,IAAI,EAAEC,KAAA,CAAAuB,OAAO;YACdC,MAAM,EAAN,EAAM;YACNpC,KAAmB,EAAnB;cAAA;YAAA;;8BAEF,MAAsD,CAAtDG,YAAA,CAAsDkC,0BAAA;cAArCC,IAAI,EAAC,MAAM;cAACC,KAAK,EAAC,IAAI;cAACC,KAAK,EAAC;gBAC9CrC,YAAA,CAIkBkC,0BAAA;cAJDE,KAAK,EAAC,IAAI;cAACC,KAAK,EAAC;;cACrBC,OAAO,EAAAC,QAAA,CAAEC,KAAK,K,kCACpB1B,QAAA,CAAA2B,cAAc,CAACD,KAAK,CAACE,GAAG,CAACC,MAAM,kB;;;;;;8DARzBlC,KAAA,CAAAgB,OAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}