{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'HospitalReport',\n  data() {\n    return {\n      report: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      reportId\n    };\n  },\n  async created() {\n    await this.fetchHospitalizationRecords(userId);\n  },\n  methods: {\n    async fetchHospitalizationRecords(userId) {\n      try {\n        const response = await this.$request.get(`/user/selectArchives/${userId}`);\n        if (response.data) {\n          this.hospitalizationRecords = response.data;\n          console.log('住院记录:', this.hospitalizationRecords);\n        } else {\n          this.handleError('获取住院详细信息失败', response.data);\n        }\n      } catch (error) {\n        this.handleError('获取住院详细信息失败', error);\n      }\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    },\n    viewArchive(informationId) {\n      console.log('查看档案:', informationId);\n      this.$router.push({\n        path: '/archives-management/archives-view',\n        query: {\n          informationId: informationId\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","report","isLoading","user","JSON","parse","localStorage","getItem","reportId","created","fetchHospitalizationRecords","userId","methods","response","$request","get","hospitalizationRecords","console","log","handleError","error","message","$message","viewArchive","informationId","$router","push","path","query"],"sources":["src/views/user/hospitalReport.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"[userInfo]\" stripe>\r\n        <el-table-column label=\"姓名\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.name }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"联系方式\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.phone }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"邮箱\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.email }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"性别\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.gender }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'HospitalReport',\r\n  data() {\r\n    return {\r\n      report: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      reportId\r\n    }\r\n  },\r\n\r\n  async created() {\r\n      await this.fetchHospitalizationRecords(userId);\r\n  },\r\n  methods: {\r\n\r\n    async fetchHospitalizationRecords(userId) {\r\n      try {\r\n        const response = await this.$request.get(`/user/selectArchives/${userId}`);\r\n        if (response.data) {\r\n          this.hospitalizationRecords = response.data;\r\n          console.log('住院记录:', this.hospitalizationRecords);\r\n        } else {\r\n          this.handleError('获取住院详细信息失败', response.data);\r\n        }\r\n      } catch (error) {\r\n        this.handleError('获取住院详细信息失败', error);\r\n      }\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n\r\n    viewArchive(informationId) {\r\n      console.log('查看档案:', informationId);\r\n      this.$router.push({\r\n        path: '/archives-management/archives-view',\r\n        query: { informationId: informationId }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.is-disabled {\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":";AAoCA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC;IACA;EACA;EAEA,MAAAC,QAAA;IACA,WAAAC,2BAAA,CAAAC,MAAA;EACA;EACAC,OAAA;IAEA,MAAAF,4BAAAC,MAAA;MACA;QACA,MAAAE,QAAA,cAAAC,QAAA,CAAAC,GAAA,yBAAAJ,MAAA;QACA,IAAAE,QAAA,CAAAb,IAAA;UACA,KAAAgB,sBAAA,GAAAH,QAAA,CAAAb,IAAA;UACAiB,OAAA,CAAAC,GAAA,eAAAF,sBAAA;QACA;UACA,KAAAG,WAAA,eAAAN,QAAA,CAAAb,IAAA;QACA;MACA,SAAAoB,KAAA;QACA,KAAAD,WAAA,eAAAC,KAAA;MACA;IACA;IAEAD,YAAAE,OAAA,EAAAD,KAAA;MACAH,OAAA,CAAAG,KAAA,CAAAC,OAAA,EAAAD,KAAA;MACA,KAAAE,QAAA,CAAAF,KAAA,CAAAC,OAAA;IACA;IAEAE,YAAAC,aAAA;MACAP,OAAA,CAAAC,GAAA,UAAAM,aAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UAAAJ,aAAA,EAAAA;QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}