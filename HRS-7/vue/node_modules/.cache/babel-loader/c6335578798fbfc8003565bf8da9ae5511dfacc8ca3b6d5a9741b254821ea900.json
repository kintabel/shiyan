{"ast":null,"code":"export default {\n  name: 'DoctorManagement',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      loading: false,\n      selectedDepartment: null,\n      departments: [],\n      doctors: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  methods: {\n    handleDepartmentClick(data) {\n      this.selectedDepartment = data;\n      this.getDoctorsByDepartment();\n    },\n    refreshDoctors() {\n      if (this.selectedDepartment) {\n        this.getDoctorsByDepartment();\n      } else {\n        this.$message.warning('请先选择科室');\n      }\n    },\n    getDepartments() {\n      this.loading = true;\n      this.$request.get('/hospital/departmentList', {\n        params: {\n          userId: this.user.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.departments = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取科室列表失败');\n        }\n      }).catch(error => {\n        console.error('获取科室列表失败:', error);\n        this.$message.error('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getDoctorsByDepartment() {\n      if (!this.selectedDepartment) return;\n      this.loading = true;\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\n        params: {\n          userId: this.user.id,\n          departmentId: this.selectedDepartment.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.doctors = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取医生列表失败');\n        }\n      }).catch(error => {\n        console.error('获取医生列表失败:', error);\n        this.$message.error('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getDoctorTitle(status) {\n      switch (status) {\n        case 1:\n          return '医师';\n        case 2:\n          return '副主治医师';\n        case 3:\n          return '主治医师';\n        case 4:\n          return '专家';\n        case 5:\n          return '急诊';\n        default:\n          return '未知职称';\n      }\n    },\n    canPromote(doctor) {\n      return doctor.evaluationCount > 100 && doctor.evaluation > 4.3;\n    },\n    // 处理升职操作\n    handlePromotion(doctor) {\n      this.$confirm(`确定要将 ${doctor.name} 升职吗?`, '升职确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.loading = true;\n        this.$request.post('/doctor/promote', {\n          doctorId: doctor.id\n        }).then(response => {\n          if (response.code == 200) {\n            this.$message.success('升职成功');\n            this.getDoctorsByDepartment(); // 刷新列表\n          } else {\n            this.$message.error(response.message || '升职失败');\n          }\n        }).catch(error => {\n          console.error('升职失败:', error);\n          this.$message.error('升职失败，请稍后重试');\n        }).finally(() => {\n          this.loading = false;\n        });\n      }).catch(() => {\n        this.$message.info('已取消升职操作');\n      });\n    }\n  },\n  mounted() {\n    this.getDepartments();\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","loading","selectedDepartment","departments","doctors","defaultProps","children","label","methods","handleDepartmentClick","getDoctorsByDepartment","refreshDoctors","$message","warning","getDepartments","$request","get","params","userId","id","then","response","code","error","message","catch","console","finally","departmentId","getDoctorTitle","status","canPromote","doctor","evaluationCount","evaluation","handlePromotion","$confirm","confirmButtonText","cancelButtonText","type","post","doctorId","success","info","mounted"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\hospitalAdmin\\DoctorList.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生信息管理</span>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>医生列表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-button type=\"primary\" @click=\"refreshDoctors\" :loading=\"loading\">\r\n                  刷新列表\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"doctors\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"name\" label=\"姓名\" width=\"120\" />\r\n              <el-table-column label=\"职称\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ getDoctorTitle(scope.row.status) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"phone\" label=\"电话\" width=\"150\" />\r\n              <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"introduction\" label=\"简介\" />\r\n              <el-table-column prop=\"finalSalary\" label=\"薪资\"/>\r\n              <el-table-column prop=\"evaluationCount\" label=\"评价次数\"/>\r\n              <el-table-column prop=\"evaluation\" label=\"评级\"/>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button\r\n                      size=\"mini\"\r\n                      type=\"success\"\r\n                      @click=\"handlePromotion(scope.row)\"\r\n                      :disabled=\"!canPromote(scope.row)\"\r\n                  >\r\n                    升职\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DoctorManagement',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      selectedDepartment: null,\r\n      departments: [],\r\n      doctors: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleDepartmentClick(data) {\r\n      this.selectedDepartment = data;\r\n      this.getDoctorsByDepartment();\r\n    },\r\n\r\n    refreshDoctors() {\r\n      if (this.selectedDepartment) {\r\n        this.getDoctorsByDepartment();\r\n      } else {\r\n        this.$message.warning('请先选择科室');\r\n      }\r\n    },\r\n\r\n    getDepartments() {\r\n      this.loading = true;\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.departments = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取科室列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取科室列表失败:', error);\r\n            this.$message.error('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDoctorsByDepartment() {\r\n      if (!this.selectedDepartment) return;\r\n\r\n      this.loading = true;\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: this.selectedDepartment.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.doctors = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取医生列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生列表失败:', error);\r\n            this.$message.error('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    },\r\n\r\n    canPromote(doctor) {\r\n      return doctor.evaluationCount > 100 && doctor.evaluation > 4.3;\r\n    },\r\n\r\n    // 处理升职操作\r\n    handlePromotion(doctor) {\r\n      this.$confirm(`确定要将 ${doctor.name} 升职吗?`, '升职确认', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true;\r\n        this.$request.post('/doctor/promote', { doctorId: doctor.id })\r\n            .then(response => {\r\n              if (response.code == 200) {\r\n                this.$message.success('升职成功');\r\n                this.getDoctorsByDepartment(); // 刷新列表\r\n              } else {\r\n                this.$message.error(response.message || '升职失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('升职失败:', error);\r\n              this.$message.error('升职失败，请稍后重试');\r\n            })\r\n            .finally(() => {\r\n              this.loading = false;\r\n            });\r\n      }).catch(() => {\r\n        this.$message.info('已取消升职操作');\r\n      });\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.getDepartments();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n.el-tree {\r\n  background: transparent;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n.el-button.is-disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}