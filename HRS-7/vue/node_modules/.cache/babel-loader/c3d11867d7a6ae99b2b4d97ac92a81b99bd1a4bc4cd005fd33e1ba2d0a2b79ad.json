{"ast":null,"code":"import { parseTime } from '@/utils';\nexport default {\n  name: 'HospitalReport',\n  data() {\n    return {\n      report: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      reportId: this.$route.query.id\n    };\n  },\n  async created() {\n    const reportId = this.$route.query.id;\n    await this.fetchHospitalizationReport(reportId);\n  },\n  methods: {\n    async fetchHospitalizationReport(reportId) {\n      try {\n        const response = await this.$request.get(`/user/selectReport/${reportId}`);\n        if (response.data) {\n          this.hospitalizationRecords = response.data;\n          console.log('报告单:', this.hospitalizationRecords);\n        } else {\n          this.handleError('获取报告单详细信息失败', response.data);\n        }\n      } catch (error) {\n        this.handleError('获取报告单详细信息失败', error);\n      }\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","report","isLoading","user","JSON","parse","localStorage","getItem","reportId","$route","query","id","created","fetchHospitalizationReport","methods","response","$request","get","hospitalizationRecords","console","log","handleError","error","message","$message"],"sources":["src/views/user/hospitalReport.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"[report]\" stripe>\r\n        <el-table-column label=\"报告类型\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.reportType }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"患者姓名\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.userName }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"患者性别\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.patientGender }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"患者年龄\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.patientAge }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"患者身高\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.patientHeight }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"患者体重\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.patientWeight }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"主治医师\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.doctorName }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"医院\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.hospitalName }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"科室\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.departmentName }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"血压\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.bloodPressure }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"心率\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.heartRate }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"血常规\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.completeBloodCount }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"尿常规\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.urinalysis }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"传染病史\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.contagiousDiseas }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'HospitalReport',\r\n  data() {\r\n    return {\r\n      report: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      reportId: this.$route.query.id,\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const reportId = this.$route.query.id;\r\n    await this.fetchHospitalizationReport(reportId);\r\n  },\r\n  methods: {\r\n\r\n    async fetchHospitalizationReport(reportId) {\r\n      try {\r\n        const response = await this.$request.get(`/user/selectReport/${reportId}`);\r\n        if (response.data) {\r\n          this.hospitalizationRecords = response.data;\r\n          console.log('报告单:', this.hospitalizationRecords);\r\n        } else {\r\n          this.handleError('获取报告单详细信息失败', response.data);\r\n        }\r\n      } catch (error) {\r\n        this.handleError('获取报告单详细信息失败', error);\r\n      }\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.is-disabled {\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"AAkGA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,QAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC;IACA;EACA;EAEA,MAAAC,QAAA;IACA,MAAAJ,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,EAAA;IACA,WAAAE,0BAAA,CAAAL,QAAA;EACA;EACAM,OAAA;IAEA,MAAAD,2BAAAL,QAAA;MACA;QACA,MAAAO,QAAA,cAAAC,QAAA,CAAAC,GAAA,uBAAAT,QAAA;QACA,IAAAO,QAAA,CAAAf,IAAA;UACA,KAAAkB,sBAAA,GAAAH,QAAA,CAAAf,IAAA;UACAmB,OAAA,CAAAC,GAAA,cAAAF,sBAAA;QACA;UACA,KAAAG,WAAA,gBAAAN,QAAA,CAAAf,IAAA;QACA;MACA,SAAAsB,KAAA;QACA,KAAAD,WAAA,gBAAAC,KAAA;MACA;IACA;IAEAD,YAAAE,OAAA,EAAAD,KAAA;MACAH,OAAA,CAAAG,KAAA,CAAAC,OAAA,EAAAD,KAAA;MACA,KAAAE,QAAA,CAAAF,KAAA,CAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}