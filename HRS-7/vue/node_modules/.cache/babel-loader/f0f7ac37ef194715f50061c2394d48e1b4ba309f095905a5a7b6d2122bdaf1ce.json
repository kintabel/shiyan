{"ast":null,"code":"export default {\n  name: 'LogisticsApplication',\n  data() {\n    // 先获取用户信息\n    const user = JSON.parse(localStorage.getItem('xm-user') || '{}');\n\n    // 手机号验证规则\n    const validatePhone = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('请输入手机号'));\n      }\n      if (!/^1[3-9]\\d{9}$/.test(value)) {\n        return callback(new Error('请输入正确的手机号'));\n      }\n      callback();\n    };\n    return {\n      user: user,\n      // 将用户信息保存到组件数据中\n      logisticsForm: {\n        doctorId: user.id || '',\n        // 使用局部变量user\n        userName: '',\n        // 收货人姓名\n        phone: '',\n        // 手机号\n        inAddress: '' // 收货地址\n      },\n\n      rules: {\n        userName: [{\n          required: true,\n          message: '请输入收货人姓名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 20,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        inAddress: [{\n          required: true,\n          message: '请输入收货地址',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 100,\n          message: '长度在 5 到 100 个字符',\n          trigger: 'blur'\n        }]\n      },\n      loading: false,\n      error: ''\n    };\n  },\n  methods: {\n    // 提交物流申请\n    submitApplication() {\n      // 确保每次提交都使用最新的用户ID\n      this.logisticsForm.doctorId = this.user.id;\n      console.log(this.logisticsForm);\n      this.$refs.logisticsForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.error = '';\n          this.$request.post('/doctor/applicationLogistics', this.logisticsForm).then(response => {\n            if (response.code == 200) {\n              this.$message.success('物流申请提交成功');\n              this.resetForm();\n            } else {\n              this.error = response.message || '提交失败';\n            }\n          }).catch(error => {\n            console.error('物流申请提交失败:', error);\n            this.error = '物流申请提交失败，请稍后重试';\n          }).finally(() => {\n            this.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm() {\n      this.$refs.logisticsForm.resetFields();\n      // 重置后保留doctorId\n      this.logisticsForm.doctorId = this.user.id;\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","validatePhone","rule","value","callback","Error","test","logisticsForm","doctorId","id","userName","phone","inAddress","rules","required","message","trigger","min","max","validator","loading","error","methods","submitApplication","console","log","$refs","validate","valid","$request","post","then","response","code","$message","success","resetForm","catch","finally","resetFields"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\doctor\\LogisticsApplication.vue"],"sourcesContent":["<template>\r\n  <div class=\"logistics-application\">\r\n    <h2>物流申请</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">提交中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 物流申请表单 -->\r\n    <el-form :model=\"logisticsForm\" :rules=\"rules\" ref=\"logisticsForm\" label-width=\"100px\">\r\n      <!-- 收货人姓名 -->\r\n      <el-form-item label=\"收货人姓名\" prop=\"userName\">\r\n        <el-input v-model=\"logisticsForm.userName\" placeholder=\"请输入收货人姓名\"></el-input>\r\n      </el-form-item>\r\n\r\n      <!-- 手机号 -->\r\n      <el-form-item label=\"手机号\" prop=\"phone\">\r\n        <el-input v-model=\"logisticsForm.phone\" placeholder=\"请输入收货人手机号\"></el-input>\r\n      </el-form-item>\r\n\r\n      <!-- 收货地址 -->\r\n      <el-form-item label=\"收货地址\" prop=\"inAddress\">\r\n        <el-input\r\n            type=\"textarea\"\r\n            v-model=\"logisticsForm.inAddress\"\r\n            placeholder=\"请输入详细收货地址\"\r\n            :rows=\"3\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <!-- 提交按钮 -->\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitApplication\">提交申请</el-button>\r\n        <el-button @click=\"resetForm\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LogisticsApplication',\r\n  data() {\r\n    // 先获取用户信息\r\n    const user = JSON.parse(localStorage.getItem('xm-user') || '{}');\r\n\r\n    // 手机号验证规则\r\n    const validatePhone = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('请输入手机号'));\r\n      }\r\n      if (!/^1[3-9]\\d{9}$/.test(value)) {\r\n        return callback(new Error('请输入正确的手机号'));\r\n      }\r\n      callback();\r\n    };\r\n\r\n    return {\r\n      user: user, // 将用户信息保存到组件数据中\r\n      logisticsForm: {\r\n        doctorId: user.id || '', // 使用局部变量user\r\n        userName: '',    // 收货人姓名\r\n        phone: '',       // 手机号\r\n        inAddress: ''   // 收货地址\r\n      },\r\n      rules: {\r\n        userName: [\r\n          { required: true, message: '请输入收货人姓名', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { required: true, validator: validatePhone, trigger: 'blur' }\r\n        ],\r\n        inAddress: [\r\n          { required: true, message: '请输入收货地址', trigger: 'blur' },\r\n          { min: 5, max: 100, message: '长度在 5 到 100 个字符', trigger: 'blur' }\r\n        ]\r\n      },\r\n      loading: false,\r\n      error: ''\r\n    };\r\n  },\r\n  methods: {\r\n    // 提交物流申请\r\n    submitApplication() {\r\n      // 确保每次提交都使用最新的用户ID\r\n      this.logisticsForm.doctorId = this.user.id;\r\n      console.log(this.logisticsForm);\r\n      this.$refs.logisticsForm.validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          this.error = '';\r\n          this.$request.post('/doctor/applicationLogistics', this.logisticsForm)\r\n              .then(response => {\r\n                if (response.code == 200) {\r\n                  this.$message.success('物流申请提交成功');\r\n                  this.resetForm();\r\n                } else {\r\n                  this.error = response.message || '提交失败';\r\n                }\r\n              })\r\n              .catch(error => {\r\n                console.error('物流申请提交失败:', error);\r\n                this.error = '物流申请提交失败，请稍后重试';\r\n              })\r\n              .finally(() => {\r\n                this.loading = false;\r\n              });\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n\r\n    // 重置表单\r\n    resetForm() {\r\n      this.$refs.logisticsForm.resetFields();\r\n      // 重置后保留doctorId\r\n      this.logisticsForm.doctorId = this.user.id;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.logistics-application {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading,\r\n.error {\r\n  text-align: center;\r\n  margin: 20px 0;\r\n  font-size: 16px;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n\r\n.el-form {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}