{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from '@/utils';\nimport { getCurrentWeekDates } from '@/utils/date.js';\nexport default {\n  name: 'ScheduleManagement',\n  data() {\n    return {\n      doctorInfo: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      hospitalizationRecords: [],\n      currentWeekDates: [],\n      weeklySchedules: [],\n      leaveForm: {\n        leaveType: '',\n        reason: ''\n      }\n    };\n  },\n  async created() {\n    const userId = this.user.id;\n    this.currentWeekDates = getCurrentWeekDates();\n    try {\n      await this.fetchDoctor(userId);\n    } catch (error) {\n      console.error('数据加载出错:', error);\n    }\n  },\n  methods: {\n    async fetchDoctor(userId) {\n      this.$request.get(`/doctor/selectDoctorByUserId`, {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        console.log(response.data);\n        if (response.data) {\n          this.doctorInfo = response.data;\n          this.fetchWeeklySchedules(this.doctorInfo);\n        } else {\n          this.handleError('获取医生详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取医生详细信息失败', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    async fetchWeeklySchedules(doctorInfo) {\n      const startDate = this.currentWeekDates[0];\n      const endDate = this.currentWeekDates[6];\n      console.log(startDate, endDate);\n      console.log(doctorInfo);\n      const doctorId = doctorInfo.id;\n      try {\n        const response = await this.$request.get(`/api/schedule/doctor/${doctorId}`, {\n          params: {\n            startDate: startDate,\n            endDate: endDate\n          }\n        });\n        console.log(response.data);\n        if (response.data) {\n          this.weeklySchedules = response.data.map(schedule => ({\n            scheduleDate: schedule.scheduleDate,\n            shiftType: schedule.shiftType\n          }));\n          console.log('weeklySchedules', this.weeklySchedules);\n        }\n      } catch (error) {\n        console.error('获取本周排班信息失败:', error);\n        this.$message.error('获取本周排班信息失败');\n      }\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    },\n    submitLeaveApplication(schedule) {\n      const doctorId = this.doctorInfo.id;\n      const {\n        scheduleDate,\n        shiftType\n      } = schedule;\n      const {\n        leaveType,\n        reason\n      } = this.leaveForm;\n      this.$request.post(`/api/schedule/leaveApplication`, {\n        doctorId,\n        scheduleDate,\n        shiftType,\n        leaveType,\n        reason\n      }).then(() => {\n        this.$message.success('请假申请提交成功');\n        this.$router.push({\n          path: '/'\n        });\n      }).catch(error => {\n        this.$message.error('请假申请提交失败');\n        console.error('请假申请提交失败:', error);\n      });\n    },\n    // 班次标签样式\n    getShiftTagType(shiftType) {\n      if (!shiftType) return 'info';\n      return shiftType === 'DAY' ? 'success' : 'warning';\n    },\n    // 获取班次类型文本\n    getShiftType(shiftType) {\n      if (!shiftType) return '无排班';\n      return shiftType === 'DAY' ? '白班' : '夜班';\n    }\n  }\n};","map":{"version":3,"names":["parseTime","getCurrentWeekDates","name","data","doctorInfo","isLoading","user","JSON","parse","localStorage","getItem","hospitalizationRecords","currentWeekDates","weeklySchedules","leaveForm","leaveType","reason","created","userId","id","fetchDoctor","error","console","methods","$request","get","params","then","response","log","fetchWeeklySchedules","handleError","catch","finally","startDate","endDate","doctorId","map","schedule","scheduleDate","shiftType","$message","message","submitLeaveApplication","post","success","$router","push","path","getShiftTagType","getShiftType"],"sources":["src/views/doctor/ScheduleManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"[doctorInfo]\" stripe>\r\n        <el-table-column label=\"姓名\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.name }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"联系方式\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.phone }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"性别\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.gender }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <h4>当前周排班信息</h4>\r\n      <el-table :data=\"weeklySchedules\" stripe>\r\n        <el-table-column label=\"日期\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.scheduleDate }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"班次\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getShiftTagType(scope.row.shiftType)\">\r\n              {{ getShiftType(scope.row.shiftType) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <a :href=\"`#leave-modal-${scope.row.scheduleDate}-${scope.row.shiftType}`\" class=\"leave-link\">请假</a>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 请假模态框 -->\r\n    <div v-for=\"schedule in weeklySchedules\" :key=\"`leave-modal-${schedule.scheduleDate}-${schedule.shiftType}`\" class=\"leave-modal\" :id=\"`leave-modal-${schedule.scheduleDate}-${schedule.shiftType}`\">\r\n      <div class=\"leave-modal-content\">\r\n        <span class=\"close\" @click=\"$router.push({ path: '/' })\">&times;</span>\r\n        <h2>请假申请</h2>\r\n        <form @submit.prevent=\"submitLeaveApplication(schedule)\">\r\n          <div class=\"form-item\">\r\n            <label>请假日期</label>\r\n            <span>{{ schedule.scheduleDate }}</span>\r\n          </div>\r\n          <div class=\"form-item\">\r\n            <label>请假班次</label>\r\n            <span>{{ getShiftType(schedule.shiftType) }}</span>\r\n          </div>\r\n          <div class=\"form-item\">\r\n            <label>请假类型</label>\r\n            <select v-model=\"leaveForm.leaveType\">\r\n              <option value=\"personal\">事假</option>\r\n              <option value=\"sick\">病假</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-item\">\r\n            <label>请假原因</label>\r\n            <input v-model=\"leaveForm.reason\" placeholder=\"请输入请假原因\">\r\n          </div>\r\n          <button type=\"submit\">提交</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\nimport { getCurrentWeekDates } from '@/utils/date.js'\r\n\r\nexport default {\r\n  name: 'ScheduleManagement',\r\n  data() {\r\n    return {\r\n      doctorInfo: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      hospitalizationRecords: [],\r\n      currentWeekDates: [],\r\n      weeklySchedules: [],\r\n      leaveForm: {\r\n        leaveType: '',\r\n        reason: ''\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const userId = this.user.id;\r\n    this.currentWeekDates = getCurrentWeekDates()\r\n    try {\r\n      await this.fetchDoctor(userId);\r\n    } catch (error) {\r\n      console.error('数据加载出错:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchDoctor(userId) {\r\n      this.$request.get(`/doctor/selectDoctorByUserId`, {\r\n        params: {\r\n          userId: userId\r\n        }\r\n      }).then(response => {\r\n        console.log(response.data);\r\n        if (response.data) {\r\n          this.doctorInfo = response.data;\r\n          this.fetchWeeklySchedules(this.doctorInfo)\r\n        } else {\r\n          this.handleError('获取医生详细信息失败', response.data);\r\n        }\r\n      }).catch(error => {\r\n        this.handleError('获取医生详细信息失败', error);\r\n      }).finally(() => {\r\n        this.isLoading = false;\r\n      });\r\n    },\r\n\r\n    async fetchWeeklySchedules(doctorInfo) {\r\n      const startDate = this.currentWeekDates[0]\r\n      const endDate = this.currentWeekDates[6]\r\n      console.log(startDate, endDate)\r\n      console.log(doctorInfo)\r\n      const doctorId = doctorInfo.id\r\n      try {\r\n        const response = await this.$request.get(`/api/schedule/doctor/${doctorId}`, {\r\n          params: {\r\n            startDate: startDate,\r\n            endDate: endDate\r\n          }\r\n        })\r\n        console.log(response.data)\r\n        if (response.data) {\r\n          this.weeklySchedules = response.data.map(schedule => ({\r\n            scheduleDate: schedule.scheduleDate,\r\n            shiftType: schedule.shiftType\r\n          }))\r\n          console.log('weeklySchedules', this.weeklySchedules)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取本周排班信息失败:', error)\r\n        this.$message.error('获取本周排班信息失败')\r\n      }\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n\r\n    submitLeaveApplication(schedule) {\r\n      const doctorId = this.doctorInfo.id;\r\n      const { scheduleDate, shiftType } = schedule;\r\n      const { leaveType, reason } = this.leaveForm;\r\n      this.$request.post(`/api/schedule/leaveApplication`, {\r\n        doctorId,\r\n        scheduleDate,\r\n        shiftType,\r\n        leaveType,\r\n        reason\r\n      }).then(() => {\r\n        this.$message.success('请假申请提交成功');\r\n        this.$router.push({ path: '/' });\r\n      }).catch(error => {\r\n        this.$message.error('请假申请提交失败');\r\n        console.error('请假申请提交失败:', error);\r\n      });\r\n    },\r\n\r\n    // 班次标签样式\r\n    getShiftTagType(shiftType) {\r\n      if (!shiftType) return 'info'\r\n      return shiftType === 'DAY'? 'success' : 'warning'\r\n    },\r\n\r\n    // 获取班次类型文本\r\n    getShiftType(shiftType) {\r\n      if (!shiftType) return '无排班'\r\n      return shiftType === 'DAY'? '白班' : '夜班'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.leave-link {\r\n  color: #f56c6c;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n.leave-modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.leave-modal:target {\r\n  display: block;\r\n}\r\n\r\n.leave-modal-content {\r\n  background-color: #fefefe;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 300px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-item {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-item label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-item select,\r\n.form-item input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #409eff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #66b1ff;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}