{"ast":null,"code":"import { parseTime } from '@/utils';\nexport default {\n  name: 'HospitalReport',\n  data() {\n    return {\n      report: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      reportId: this.$route.query.id,\n      keyToLabelMap: {\n        reportType: '报告类型',\n        userName: '患者姓名',\n        patientGender: '患者性别',\n        patientAge: '患者年龄',\n        patientHeight: '患者身高',\n        patientWeight: '患者体重',\n        doctorName: '主治医师',\n        hospitalName: '医院',\n        departmentName: '科室',\n        bloodPressure: '血压',\n        heartRate: '心率',\n        completeBloodCount: '血常规',\n        urinalysis: '尿常规',\n        contagiousDiseas: '传染病史'\n      }\n    };\n  },\n  async created() {\n    const reportId = this.$route.query.id;\n    await this.fetchHospitalizationReport(reportId);\n  },\n  methods: {\n    async fetchHospitalizationReport(reportId) {\n      try {\n        const response = await this.$request.get(`/user/selectReport/${reportId}`);\n        if (response.data) {\n          this.report = response.data;\n          console.log('报告单:', this.report);\n        } else {\n          this.handleError('获取报告单详细信息失败', response.data);\n        }\n      } catch (error) {\n        this.handleError('获取报告单详细信息失败', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    },\n    mapKeyToLabel(key) {\n      return this.keyToLabelMap[key] || key;\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","report","isLoading","user","JSON","parse","localStorage","getItem","reportId","$route","query","id","keyToLabelMap","reportType","userName","patientGender","patientAge","patientHeight","patientWeight","doctorName","hospitalName","departmentName","bloodPressure","heartRate","completeBloodCount","urinalysis","contagiousDiseas","created","fetchHospitalizationReport","methods","response","$request","get","console","log","handleError","error","message","$message","mapKeyToLabel","key"],"sources":["src/views/user/hospitalReport.vue"],"sourcesContent":["<template>\r\n  <div class=\"hospital-report-container\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <div class=\"report-card\">\r\n        <div class=\"report-header\">\r\n          <h1 class=\"report-title\">医院报告单</h1>\r\n        </div>\r\n        <div class=\"report-body\">\r\n          <div class=\"report-row\" v-for=\"(value, key) in report\" :key=\"key\">\r\n            <div class=\"report-label\">{{ mapKeyToLabel(key) }}</div>\r\n            <div class=\"report-value\">{{ value }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'HospitalReport',\r\n  data() {\r\n    return {\r\n      report: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      reportId: this.$route.query.id,\r\n      keyToLabelMap: {\r\n        reportType: '报告类型',\r\n        userName: '患者姓名',\r\n        patientGender: '患者性别',\r\n        patientAge: '患者年龄',\r\n        patientHeight: '患者身高',\r\n        patientWeight: '患者体重',\r\n        doctorName: '主治医师',\r\n        hospitalName: '医院',\r\n        departmentName: '科室',\r\n        bloodPressure: '血压',\r\n        heartRate: '心率',\r\n        completeBloodCount: '血常规',\r\n        urinalysis: '尿常规',\r\n        contagiousDiseas: '传染病史'\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const reportId = this.$route.query.id;\r\n    await this.fetchHospitalizationReport(reportId);\r\n  },\r\n  methods: {\r\n    async fetchHospitalizationReport(reportId) {\r\n      try {\r\n        const response = await this.$request.get(`/user/selectReport/${reportId}`);\r\n        if (response.data) {\r\n          this.report = response.data;\r\n          console.log('报告单:', this.report);\r\n        } else {\r\n          this.handleError('获取报告单详细信息失败', response.data);\r\n        }\r\n      } catch (error) {\r\n        this.handleError('获取报告单详细信息失败', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n\r\n    mapKeyToLabel(key) {\r\n      return this.keyToLabelMap[key] || key;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.hospital-report-container {\r\n  padding: 20px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.report-card {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n}\r\n\r\n.report-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.report-title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.report-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.report-row {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.report-label {\r\n  width: 150px;\r\n  font-weight: bold;\r\n  color: #666;\r\n}\r\n\r\n.report-value {\r\n  flex: 1;\r\n  color: #333;\r\n}\r\n</style>    "],"mappings":"AAuBA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,QAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,EAAA;MACAC,aAAA;QACAC,UAAA;QACAC,QAAA;QACAC,aAAA;QACAC,UAAA;QACAC,aAAA;QACAC,aAAA;QACAC,UAAA;QACAC,YAAA;QACAC,cAAA;QACAC,aAAA;QACAC,SAAA;QACAC,kBAAA;QACAC,UAAA;QACAC,gBAAA;MACA;IACA;EACA;EAEA,MAAAC,QAAA;IACA,MAAAnB,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,EAAA;IACA,WAAAiB,0BAAA,CAAApB,QAAA;EACA;EACAqB,OAAA;IACA,MAAAD,2BAAApB,QAAA;MACA;QACA,MAAAsB,QAAA,cAAAC,QAAA,CAAAC,GAAA,uBAAAxB,QAAA;QACA,IAAAsB,QAAA,CAAA9B,IAAA;UACA,KAAAC,MAAA,GAAA6B,QAAA,CAAA9B,IAAA;UACAiC,OAAA,CAAAC,GAAA,cAAAjC,MAAA;QACA;UACA,KAAAkC,WAAA,gBAAAL,QAAA,CAAA9B,IAAA;QACA;MACA,SAAAoC,KAAA;QACA,KAAAD,WAAA,gBAAAC,KAAA;MACA;QACA,KAAAlC,SAAA;MACA;IACA;IAEAiC,YAAAE,OAAA,EAAAD,KAAA;MACAH,OAAA,CAAAG,KAAA,CAAAC,OAAA,EAAAD,KAAA;MACA,KAAAE,QAAA,CAAAF,KAAA,CAAAC,OAAA;IACA;IAEAE,cAAAC,GAAA;MACA,YAAA5B,aAAA,CAAA4B,GAAA,KAAAA,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}