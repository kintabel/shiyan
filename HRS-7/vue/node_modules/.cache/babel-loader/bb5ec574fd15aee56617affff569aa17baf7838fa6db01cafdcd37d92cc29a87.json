{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  slot: \"header\",\n  class: \"clearfix\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"float\": \"right\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n      slot: \"header\",\n      class: \"clearfix\"\n    }, [_createElementVNode(\"span\", null, \"医生信息管理\")], -1 /* HOISTED */)), _createVNode(_component_el_row, {\n      gutter: 20\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_col, {\n        span: 6\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n            slot: \"header\",\n            class: \"clearfix\"\n          }, [_createElementVNode(\"span\", null, \"科室列表\")], -1 /* HOISTED */)), _createVNode(_component_el_tree, {\n            data: $data.departments,\n            props: $data.defaultProps,\n            onNodeClick: $options.handleDepartmentClick\n          }, null, 8 /* PROPS */, [\"data\", \"props\", \"onNodeClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_col, {\n        span: 18\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_card, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, \"医生列表 - \" + _toDisplayString($data.selectedDepartment ? $data.selectedDepartment.name : '请选择科室'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.refreshDoctors,\n            loading: $data.loading\n          }, {\n            default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 刷新列表 \")])),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n            data: $data.doctors,\n            border: \"\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_table_column, {\n              prop: \"name\",\n              label: \"姓名\",\n              width: \"120\"\n            }), _createVNode(_component_el_table_column, {\n              label: \"职称\",\n              width: \"120\"\n            }, {\n              default: _withCtx(scope => [_createTextVNode(_toDisplayString($options.getDoctorTitle(scope.row.status)), 1 /* TEXT */)]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_el_table_column, {\n              prop: \"phone\",\n              label: \"电话\",\n              width: \"150\"\n            }), _createVNode(_component_el_table_column, {\n              prop: \"gender\",\n              label: \"性别\",\n              width: \"80\"\n            }), _createVNode(_component_el_table_column, {\n              prop: \"introduction\",\n              label: \"简介\"\n            }), _createVNode(_component_el_table_column, {\n              prop: \"finalSalary\",\n              label: \"薪资\"\n            }), _createVNode(_component_el_table_column, {\n              prop: \"evaluationCount\",\n              label: \"评价次数\"\n            }), _createVNode(_component_el_table_column, {\n              prop: \"evaluation\",\n              label: \"评级\"\n            }), _createVNode(_component_el_table_column, {\n              label: \"操作\",\n              width: \"120\"\n            }, {\n              default: _withCtx(scope => [_createVNode(_component_el_button, {\n                size: \"mini\",\n                type: \"success\",\n                onClick: $event => $options.handlePromotion(scope.row),\n                disabled: !$options.canPromote(scope.row)\n              }, {\n                default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 升职 \")])),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"disabled\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","slot","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_createElementVNode","_component_el_row","gutter","_component_el_col","span","_component_el_tree","data","$data","departments","props","defaultProps","onNodeClick","$options","handleDepartmentClick","_hoisted_2","_toDisplayString","selectedDepartment","name","_hoisted_3","_component_el_button","type","onClick","refreshDoctors","loading","_cache","_createBlock","_component_el_table","doctors","border","_component_el_table_column","prop","label","width","default","_withCtx","scope","getDoctorTitle","row","status","size","$event","handlePromotion","disabled","canPromote"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\hospitalAdmin\\DoctorList.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生信息管理</span>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>医生列表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-button type=\"primary\" @click=\"refreshDoctors\" :loading=\"loading\">\r\n                  刷新列表\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"doctors\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"name\" label=\"姓名\" width=\"120\" />\r\n              <el-table-column label=\"职称\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ getDoctorTitle(scope.row.status) }}\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column prop=\"phone\" label=\"电话\" width=\"150\" />\r\n              <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"introduction\" label=\"简介\" />\r\n              <el-table-column prop=\"finalSalary\" label=\"薪资\"/>\r\n              <el-table-column prop=\"evaluationCount\" label=\"评价次数\"/>\r\n              <el-table-column prop=\"evaluation\" label=\"评级\"/>\r\n              <el-table-column label=\"操作\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  <el-button\r\n                      size=\"mini\"\r\n                      type=\"success\"\r\n                      @click=\"handlePromotion(scope.row)\"\r\n                      :disabled=\"!canPromote(scope.row)\"\r\n                  >\r\n                    升职\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DoctorManagement',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      selectedDepartment: null,\r\n      departments: [],\r\n      doctors: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleDepartmentClick(data) {\r\n      this.selectedDepartment = data;\r\n      this.getDoctorsByDepartment();\r\n    },\r\n\r\n    refreshDoctors() {\r\n      if (this.selectedDepartment) {\r\n        this.getDoctorsByDepartment();\r\n      } else {\r\n        this.$message.warning('请先选择科室');\r\n      }\r\n    },\r\n\r\n    getDepartments() {\r\n      this.loading = true;\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.departments = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取科室列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取科室列表失败:', error);\r\n            this.$message.error('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDoctorsByDepartment() {\r\n      if (!this.selectedDepartment) return;\r\n\r\n      this.loading = true;\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: this.selectedDepartment.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.doctors = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取医生列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生列表失败:', error);\r\n            this.$message.error('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    },\r\n\r\n    canPromote(doctor) {\r\n      return doctor.evaluationCount > 100 && doctor.evaluation > 4.3;\r\n    },\r\n\r\n    // 处理升职操作\r\n    handlePromotion(doctor) {\r\n      this.$confirm(`确定要将 ${doctor.name} 升职吗?`, '升职确认', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.loading = true;\r\n        this.$request.post('/doctor/promote', { doctorId: doctor.id })\r\n            .then(response => {\r\n              if (response.code == 200) {\r\n                this.$message.success('升职成功');\r\n                this.getDoctorsByDepartment(); // 刷新列表\r\n              } else {\r\n                this.$message.error(response.message || '升职失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('升职失败:', error);\r\n              this.$message.error('升职失败，请稍后重试');\r\n            })\r\n            .finally(() => {\r\n              this.loading = false;\r\n            });\r\n      }).catch(() => {\r\n        this.$message.info('已取消升职操作');\r\n      });\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.getDepartments();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n.el-tree {\r\n  background: transparent;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n.el-button.is-disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}