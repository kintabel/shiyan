{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'AppointmentRegister',\n  data() {\n    return {\n      isLoading: false,\n      hospitalId: this.$route.params.hospitalId,\n      departmentId: this.$route.params.departmentId,\n      hospitalName: '',\n      departmentName: '',\n      selectedDate: new Date(),\n      // 默认今天\n      pickerOptions: {\n        shortcuts: [{\n          text: '今天',\n          onClick(picker) {\n            picker.$emit('pick', new Date());\n          }\n        }, {\n          text: '明天',\n          onClick(picker) {\n            const date = new Date();\n            date.setDate(date.getDate() + 1);\n            picker.$emit('pick', date);\n          }\n        }, {\n          text: '一周后',\n          onClick(picker) {\n            const date = new Date();\n            date.setDate(date.getDate() + 7);\n            picker.$emit('pick', date);\n          }\n        }]\n      }\n    };\n  },\n  created() {\n    this.fetchHospitalAndDepartmentInfo();\n  },\n  methods: {\n    // 获取医院和科室信息\n    async fetchHospitalAndDepartmentInfo() {\n      try {\n        this.isLoading = true;\n\n        // 获取医院信息\n        const hospitalRes = await this.$request.get(`/hospital/selectById/${this.hospitalId}`);\n        if (hospitalRes.data) {\n          this.hospitalName = hospitalRes.data;\n          console.log(hospitalRes.data);\n        }\n\n        // 获取科室信息\n        const deptRes = await this.$request.get(`/hospital/selectDepById/${this.departmentId}`);\n        if (deptRes.data) {\n          this.departmentName = deptRes.data;\n        }\n      } catch (error) {\n        console.error('获取医院或科室信息失败:', error);\n        this.$message.error('获取信息失败，请稍后重试');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    // 禁用过去的日期\n    disabledDate(time) {\n      return time.getTime() < Date.now() - 24 * 60 * 60 * 1000;\n    },\n    // 日期变化处理\n    handleDateChange() {},\n    // 跳转到医生排班界面\n    goToDoctorSchedule() {\n      if (!this.selectedDate) {\n        this.$message.warning('请先选择预约日期');\n        return;\n      }\n      const formattedDate = parseTime(this.selectedDate, '{y}-{m}-{d}');\n      this.$router.push({\n        name: 'Doctor',\n        params: {\n          hospitalId: this.hospitalId,\n          departmentId: this.departmentId,\n          isAppointment: true\n        },\n        query: {\n          scheduleDate: formattedDate\n        }\n      });\n    },\n    // 格式化日期显示\n    formatDate(date) {\n      return parseTime(date, '{y}年{m}月{d}日');\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","isLoading","hospitalId","$route","params","departmentId","hospitalName","departmentName","selectedDate","Date","pickerOptions","shortcuts","text","onClick","picker","$emit","date","setDate","getDate","created","fetchHospitalAndDepartmentInfo","methods","hospitalRes","$request","get","console","log","deptRes","error","$message","disabledDate","time","getTime","now","handleDateChange","goToDoctorSchedule","warning","formattedDate","$router","push","isAppointment","query","scheduleDate","formatDate"],"sources":["src/views/user/AppointmentRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"appointment-page\">\r\n    <!-- 数据加载中提示 -->\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <!-- 医院和科室信息展示 -->\r\n      <div class=\"header-info\">\r\n        <h2>{{ hospitalName }} - {{ departmentName }}</h2>\r\n        <p>请选择预约日期</p>\r\n      </div>\r\n\r\n      <!-- 日期选择 -->\r\n      <div class=\"date-selection\">\r\n        <el-date-picker\r\n            v-model=\"selectedDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择预约日期\"\r\n            :picker-options=\"pickerOptions\"\r\n            :disabled-date=\"disabledDate\"\r\n            @change=\"handleDateChange\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 操作按钮 -->\r\n      <div class=\"action-buttons\" v-if=\"selectedDate\">\r\n        <el-button\r\n            type=\"primary\"\r\n            @click=\"goToDoctorSchedule\"\r\n            :disabled=\"!selectedDate\"\r\n        >\r\n          查看当天排班医生\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'AppointmentRegister',\r\n  data() {\r\n    return {\r\n      isLoading: false,\r\n      hospitalId: this.$route.params.hospitalId,\r\n      departmentId: this.$route.params.departmentId,\r\n      hospitalName: '',\r\n      departmentName: '',\r\n      selectedDate: new Date(), // 默认今天\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '今天',\r\n          onClick(picker) {\r\n            picker.$emit('pick', new Date())\r\n          }\r\n        }, {\r\n          text: '明天',\r\n          onClick(picker) {\r\n            const date = new Date()\r\n            date.setDate(date.getDate() + 1)\r\n            picker.$emit('pick', date)\r\n          }\r\n        }, {\r\n          text: '一周后',\r\n          onClick(picker) {\r\n            const date = new Date()\r\n            date.setDate(date.getDate() + 7)\r\n            picker.$emit('pick', date)\r\n          }\r\n        }]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchHospitalAndDepartmentInfo()\r\n  },\r\n  methods: {\r\n    // 获取医院和科室信息\r\n    async fetchHospitalAndDepartmentInfo() {\r\n      try {\r\n        this.isLoading = true\r\n\r\n        // 获取医院信息\r\n        const hospitalRes = await this.$request.get(`/hospital/selectById/${this.hospitalId}`)\r\n        if (hospitalRes.data) {\r\n          this.hospitalName = hospitalRes.data\r\n          console.log(hospitalRes.data)\r\n        }\r\n\r\n        // 获取科室信息\r\n        const deptRes = await this.$request.get(`/hospital/selectDepById/${this.departmentId}`)\r\n        if (deptRes.data) {\r\n          this.departmentName = deptRes.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取医院或科室信息失败:', error)\r\n        this.$message.error('获取信息失败，请稍后重试')\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    // 禁用过去的日期\r\n    disabledDate(time) {\r\n      return time.getTime() < Date.now() - 24 * 60 * 60 * 1000\r\n    },\r\n\r\n    // 日期变化处理\r\n    handleDateChange() {\r\n    },\r\n\r\n    // 跳转到医生排班界面\r\n    goToDoctorSchedule() {\r\n      if (!this.selectedDate) {\r\n        this.$message.warning('请先选择预约日期')\r\n        return\r\n      }\r\n\r\n      const formattedDate = parseTime(this.selectedDate, '{y}-{m}-{d}')\r\n\r\n      this.$router.push({\r\n        name: 'Doctor',\r\n        params: {\r\n          hospitalId: this.hospitalId,\r\n          departmentId: this.departmentId,\r\n          isAppointment: true,\r\n        },\r\n        query: {\r\n          scheduleDate: formattedDate\r\n        }\r\n      })\r\n    },\r\n\r\n    // 格式化日期显示\r\n    formatDate(date) {\r\n      return parseTime(date, '{y}年{m}月{d}日')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.appointment-page {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.header-info {\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.header-info h2 {\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.date-selection {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.el-date-editor {\r\n  width: 300px;\r\n}\r\n</style>"],"mappings":";AA0CA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,UAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,UAAA;MACAG,YAAA,OAAAF,MAAA,CAAAC,MAAA,CAAAC,YAAA;MACAC,YAAA;MACAC,cAAA;MACAC,YAAA,MAAAC,IAAA;MAAA;MACAC,aAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAAC,MAAA;YACAA,MAAA,CAAAC,KAAA,aAAAN,IAAA;UACA;QACA;UACAG,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAE,IAAA,OAAAP,IAAA;YACAO,IAAA,CAAAC,OAAA,CAAAD,IAAA,CAAAE,OAAA;YACAJ,MAAA,CAAAC,KAAA,SAAAC,IAAA;UACA;QACA;UACAJ,IAAA;UACAC,QAAAC,MAAA;YACA,MAAAE,IAAA,OAAAP,IAAA;YACAO,IAAA,CAAAC,OAAA,CAAAD,IAAA,CAAAE,OAAA;YACAJ,MAAA,CAAAC,KAAA,SAAAC,IAAA;UACA;QACA;MACA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,8BAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,+BAAA;MACA;QACA,KAAAnB,SAAA;;QAEA;QACA,MAAAqB,WAAA,cAAAC,QAAA,CAAAC,GAAA,8BAAAtB,UAAA;QACA,IAAAoB,WAAA,CAAAtB,IAAA;UACA,KAAAM,YAAA,GAAAgB,WAAA,CAAAtB,IAAA;UACAyB,OAAA,CAAAC,GAAA,CAAAJ,WAAA,CAAAtB,IAAA;QACA;;QAEA;QACA,MAAA2B,OAAA,cAAAJ,QAAA,CAAAC,GAAA,iCAAAnB,YAAA;QACA,IAAAsB,OAAA,CAAA3B,IAAA;UACA,KAAAO,cAAA,GAAAoB,OAAA,CAAA3B,IAAA;QACA;MACA,SAAA4B,KAAA;QACAH,OAAA,CAAAG,KAAA,iBAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;QACA,KAAA3B,SAAA;MACA;IACA;IAEA;IACA6B,aAAAC,IAAA;MACA,OAAAA,IAAA,CAAAC,OAAA,KAAAvB,IAAA,CAAAwB,GAAA;IACA;IAEA;IACAC,iBAAA,GACA;IAEA;IACAC,mBAAA;MACA,UAAA3B,YAAA;QACA,KAAAqB,QAAA,CAAAO,OAAA;QACA;MACA;MAEA,MAAAC,aAAA,GAAAvC,SAAA,MAAAU,YAAA;MAEA,KAAA8B,OAAA,CAAAC,IAAA;QACAxC,IAAA;QACAK,MAAA;UACAF,UAAA,OAAAA,UAAA;UACAG,YAAA,OAAAA,YAAA;UACAmC,aAAA;QACA;QACAC,KAAA;UACAC,YAAA,EAAAL;QACA;MACA;IACA;IAEA;IACAM,WAAA3B,IAAA;MACA,OAAAlB,SAAA,CAAAkB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}