{"ast":null,"code":"export default {\n  name: 'WorkloadStatistics',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      loading: false,\n      selectedDepartment: null,\n      departments: [],\n      doctors: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  computed: {\n    lastMonth() {\n      const date = new Date();\n      date.setMonth(date.getMonth() - 1);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      return `${year}-${month}`;\n    }\n  },\n  methods: {\n    handleDepartmentClick(data) {\n      this.selectedDepartment = data;\n      this.getDoctorsByDepartment();\n    },\n    generateStatistics() {\n      this.loading = true;\n      this.$request.post('/admin/workload-statistics', null, {\n        params: {\n          // axios的params会转为URL查询参数\n          adminId: this.user.id,\n          yearMonth: this.lastMonth\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          alert('工作量统计生成成功');\n        } else {\n          alert(response.message || '生成失败');\n        }\n      }).catch(error => {\n        console.error('请求失败:', error);\n        alert('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    calculatePerformance() {\n      this.loading = true;\n      this.$request.post('/admin/calculate-performance', null, {\n        params: {\n          // axios的params会转为URL查询参数\n          adminId: this.user.id,\n          yearMonth: this.lastMonth\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          alert('绩效计算成功');\n        } else {\n          alert(response.message || '生成失败');\n        }\n      }).catch(error => {\n        console.error('请求失败:', error);\n        alert('请求失败，请稍后重试');\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    getDepartments() {\n      this.$request.get('/hospital/departmentList', {\n        params: {\n          userId: this.user.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.departments = response.data;\n        } else {\n          alert(response.data.message || '获取科室列表失败');\n        }\n      }).catch(error => {\n        console.error('获取科室列表失败:', error);\n        alert('请求失败，请稍后重试');\n      });\n    },\n    getDoctorsByDepartment() {\n      if (!this.selectedDepartment) return;\n      console.log('获取医生列表:', this.selectedDepartment.id);\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\n        params: {\n          userId: this.user.id,\n          departmentId: this.selectedDepartment.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          this.doctors = response.data;\n          console.log('医生列表:', this.doctors);\n        } else {\n          alert(response.data.message || '获取医生列表失败');\n        }\n      }).catch(error => {\n        console.error('获取医生列表失败:', error);\n        alert('请求失败，请稍后重试');\n      });\n    },\n    getDoctorTitle(status) {\n      switch (status) {\n        case 1:\n          return '医师';\n        case 2:\n          return '副主治医师';\n        case 3:\n          return '主治医师';\n        case 4:\n          return '专家';\n        case 5:\n          return '急诊';\n        default:\n          return '未知职称';\n      }\n    }\n  },\n  mounted() {\n    console.log('当前用户信息:', this.user);\n    this.getDepartments();\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","loading","selectedDepartment","departments","doctors","defaultProps","children","label","computed","lastMonth","date","Date","setMonth","getMonth","year","getFullYear","month","String","padStart","methods","handleDepartmentClick","getDoctorsByDepartment","generateStatistics","$request","post","params","adminId","id","yearMonth","then","response","code","alert","message","catch","error","console","finally","calculatePerformance","getDepartments","get","userId","log","departmentId","getDoctorTitle","status","mounted"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\hospitalAdmin\\WorkLoad.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>医生工作量统计</span>\r\n      </div>\r\n\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>科室列表</span>\r\n            </div>\r\n            <el-tree\r\n                :data=\"departments\"\r\n                :props=\"defaultProps\"\r\n                @node-click=\"handleDepartmentClick\"\r\n            ></el-tree>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"18\">\r\n          <el-card>\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>医生列表 - {{ selectedDepartment ? selectedDepartment.name : '请选择科室' }}</span>\r\n              <div style=\"float: right\">\r\n                <el-button\r\n                    type=\"primary\"\r\n                    @click=\"generateStatistics\"\r\n                    :loading=\"loading\"\r\n                >\r\n                  生成上月工作量统计\r\n                </el-button>\r\n                <el-button\r\n                    type=\"primary\"\r\n                    @click=\"calculatePerformance\"\r\n                    :loading=\"loading\"\r\n                >\r\n                  计算上个月绩效\r\n                </el-button>\r\n                <span class=\"month-display\">统计月份：{{ lastMonth }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <el-table\r\n                v-loading=\"loading\"\r\n                :data=\"doctors\"\r\n                border\r\n                style=\"width: 100%\"\r\n            >\r\n              <el-table-column prop=\"name\" label=\"姓名\" width=\"120\" />\r\n              <el-table-column label=\"职称\" width=\"120\">\r\n                <template #default=\"scope\">\r\n                  {{ getDoctorTitle(scope.row.status) }}\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WorkloadStatistics',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      loading: false,\r\n      selectedDepartment: null,\r\n      departments: [],\r\n      doctors: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    lastMonth() {\r\n      const date = new Date();\r\n      date.setMonth(date.getMonth() - 1);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      return `${year}-${month}`;\r\n    },\r\n  },\r\n  methods: {\r\n    handleDepartmentClick(data) {\r\n      this.selectedDepartment = data;\r\n      this.getDoctorsByDepartment();\r\n    },\r\n    generateStatistics() {\r\n      this.loading = true;\r\n      this.$request.post('/admin/workload-statistics', null, {\r\n        params: {  // axios的params会转为URL查询参数\r\n          adminId: this.user.id,\r\n          yearMonth: this.lastMonth\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              alert('工作量统计生成成功');\r\n            } else {\r\n              alert(response.message || '生成失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('请求失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    calculatePerformance(){\r\n      this.loading = true;\r\n      this.$request.post('/admin/calculate-performance', null, {\r\n        params: {  // axios的params会转为URL查询参数\r\n          adminId: this.user.id,\r\n          yearMonth: this.lastMonth\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              alert('绩效计算成功');\r\n            } else {\r\n              alert(response.message || '生成失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('请求失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    getDepartments() {\r\n      this.$request.get('/hospital/departmentList', {\r\n        params: {\r\n          userId: this.user.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.departments = response.data;\r\n            } else {\r\n              alert(response.data.message || '获取科室列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取科室列表失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          });\r\n    },\r\n    getDoctorsByDepartment() {\r\n      if (!this.selectedDepartment) return;\r\n      console.log('获取医生列表:', this.selectedDepartment.id);\r\n      this.$request.get('/doctor/selectDocByAdminIdAndDepId', {\r\n        params: {\r\n          userId: this.user.id,\r\n          departmentId: this.selectedDepartment.id\r\n        }\r\n      })\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.doctors = response.data;\r\n              console.log('医生列表:', this.doctors);\r\n            } else {\r\n              alert(response.data.message || '获取医生列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取医生列表失败:', error);\r\n            alert('请求失败，请稍后重试');\r\n          });\r\n    },\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    console.log('当前用户信息:', this.user);\r\n    this.getDepartments();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.clearfix:before,\r\n.clearfix:after {\r\n  display: table;\r\n  content: \"\";\r\n}\r\n.clearfix:after {\r\n  clear: both;\r\n}\r\n\r\n.app-container {\r\n  padding: 20px;\r\n}\r\n\r\n.month-display {\r\n  color: #666;\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.el-tree {\r\n  background: transparent;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":"AAiEA,eAAe;EACbA,IAAI,EAAE,oBAAoB;EAC1BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,KAAK,IAAI,CAAC;MACzDC,OAAO,EAAE,KAAK;MACdC,kBAAkB,EAAE,IAAI;MACxBC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;QACZC,QAAQ,EAAE,UAAU;QACpBC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC;MACvBD,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC;MAClC,MAAMC,IAAG,GAAIJ,IAAI,CAACK,WAAW,CAAC,CAAC;MAC/B,MAAMC,KAAI,GAAIC,MAAM,CAACP,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC1D,OAAQ,GAAEJ,IAAK,IAAGE,KAAM,EAAC;IAC3B;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,qBAAqBA,CAACzB,IAAI,EAAE;MAC1B,IAAI,CAACO,kBAAiB,GAAIP,IAAI;MAC9B,IAAI,CAAC0B,sBAAsB,CAAC,CAAC;IAC/B,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACrB,OAAM,GAAI,IAAI;MACnB,IAAI,CAACsB,QAAQ,CAACC,IAAI,CAAC,4BAA4B,EAAE,IAAI,EAAE;QACrDC,MAAM,EAAE;UAAG;UACTC,OAAO,EAAE,IAAI,CAAC9B,IAAI,CAAC+B,EAAE;UACrBC,SAAS,EAAE,IAAI,CAACnB;QAClB;MACF,CAAC,EACIoB,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAG,IAAK,GAAG,EAAE;UACxBC,KAAK,CAAC,WAAW,CAAC;QACpB,OAAO;UACLA,KAAK,CAACF,QAAQ,CAACG,OAAM,IAAK,MAAM,CAAC;QACnC;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BH,KAAK,CAAC,YAAY,CAAC;MACrB,CAAC,EACAK,OAAO,CAAC,MAAM;QACb,IAAI,CAACpC,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACR,CAAC;IAEDqC,oBAAoBA,CAAA,EAAE;MACpB,IAAI,CAACrC,OAAM,GAAI,IAAI;MACnB,IAAI,CAACsB,QAAQ,CAACC,IAAI,CAAC,8BAA8B,EAAE,IAAI,EAAE;QACvDC,MAAM,EAAE;UAAG;UACTC,OAAO,EAAE,IAAI,CAAC9B,IAAI,CAAC+B,EAAE;UACrBC,SAAS,EAAE,IAAI,CAACnB;QAClB;MACF,CAAC,EACIoB,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAG,IAAK,GAAG,EAAE;UACxBC,KAAK,CAAC,QAAQ,CAAC;QACjB,OAAO;UACLA,KAAK,CAACF,QAAQ,CAACG,OAAM,IAAK,MAAM,CAAC;QACnC;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BH,KAAK,CAAC,YAAY,CAAC;MACrB,CAAC,EACAK,OAAO,CAAC,MAAM;QACb,IAAI,CAACpC,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACR,CAAC;IAEDsC,cAAcA,CAAA,EAAG;MACf,IAAI,CAAChB,QAAQ,CAACiB,GAAG,CAAC,0BAA0B,EAAE;QAC5Cf,MAAM,EAAE;UACNgB,MAAM,EAAE,IAAI,CAAC7C,IAAI,CAAC+B;QACpB;MACF,CAAC,EACIE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAG,IAAK,GAAG,EAAE;UACxB,IAAI,CAAC5B,WAAU,GAAI2B,QAAQ,CAACnC,IAAI;QAClC,OAAO;UACLqC,KAAK,CAACF,QAAQ,CAACnC,IAAI,CAACsC,OAAM,IAAK,UAAU,CAAC;QAC5C;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCH,KAAK,CAAC,YAAY,CAAC;MACrB,CAAC,CAAC;IACR,CAAC;IACDX,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAACnB,kBAAkB,EAAE;MAC9BkC,OAAO,CAACM,GAAG,CAAC,SAAS,EAAE,IAAI,CAACxC,kBAAkB,CAACyB,EAAE,CAAC;MAClD,IAAI,CAACJ,QAAQ,CAACiB,GAAG,CAAC,oCAAoC,EAAE;QACtDf,MAAM,EAAE;UACNgB,MAAM,EAAE,IAAI,CAAC7C,IAAI,CAAC+B,EAAE;UACpBgB,YAAY,EAAE,IAAI,CAACzC,kBAAkB,CAACyB;QACxC;MACF,CAAC,EACIE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAG,IAAK,GAAG,EAAE;UACxB,IAAI,CAAC3B,OAAM,GAAI0B,QAAQ,CAACnC,IAAI;UAC5ByC,OAAO,CAACM,GAAG,CAAC,OAAO,EAAE,IAAI,CAACtC,OAAO,CAAC;QACpC,OAAO;UACL4B,KAAK,CAACF,QAAQ,CAACnC,IAAI,CAACsC,OAAM,IAAK,UAAU,CAAC;QAC5C;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCH,KAAK,CAAC,YAAY,CAAC;MACrB,CAAC,CAAC;IACR,CAAC;IACDY,cAAcA,CAACC,MAAM,EAAE;MACrB,QAAQA,MAAM;QACZ,KAAK,CAAC;UAAE,OAAO,IAAG;QAClB,KAAK,CAAC;UAAE,OAAO,OAAM;QACrB,KAAK,CAAC;UAAE,OAAO,MAAK;QACpB,KAAK,CAAC;UAAE,OAAO,IAAG;QAClB,KAAK,CAAC;UAAE,OAAO,IAAG;QAClB;UAAS,OAAO,MAAK;MACvB;IACF;EAEF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRV,OAAO,CAACM,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC9C,IAAI,CAAC;IACjC,IAAI,CAAC2C,cAAc,CAAC,CAAC;EACvB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}