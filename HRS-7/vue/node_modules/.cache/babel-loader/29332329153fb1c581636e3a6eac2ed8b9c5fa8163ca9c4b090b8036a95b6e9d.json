{"ast":null,"code":"import { parseTime } from '@/utils';\nexport default {\n  name: 'ArchivesManagement',\n  data() {\n    return {\n      userInfo: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      hospitalizationRecords: []\n    };\n  },\n  created() {\n    const userId = this.user.id;\n    this.fetchUser(userId).then(() => {\n      this.fetchHospitalizationRecords(userId);\n    });\n  },\n  methods: {\n    async fetchUser(userId) {\n      this.$request.get(`/user/selectById/${userId}`).then(response => {\n        if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          this.handleError('获取用户详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取用户详细信息失败', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    fetchHospitalizationRecords(userId) {\n      this.$request.get(`/user/selectArchives/${userId}`).then(response => {\n        if (response.data) {\n          this.hospitalizationRecords = response.data;\n          console.log('住院记录:', this.hospitalizationRecords);\n        } else {\n          this.handleError('获取住院详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取住院详细信息失败', error);\n      });\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    },\n    viewArchive(record) {\n      // 这里可以添加查看档案的具体逻辑\n      console.log('查看档案:', record);\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","userInfo","isLoading","user","JSON","parse","localStorage","getItem","hospitalizationRecords","created","userId","id","fetchUser","then","fetchHospitalizationRecords","methods","$request","get","response","handleError","catch","error","finally","console","log","message","$message","viewArchive","record"],"sources":["src/views/user/ArchivesManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"[userInfo]\" stripe>\r\n        <el-table-column label=\"姓名\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.name }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"联系方式\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.phone }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"邮箱\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.email }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"性别\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.gender }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div v-if=\"hospitalizationRecords.length > 0\">\r\n        <h4>住院档案</h4>\r\n        <el-table :data=\"hospitalizationRecords\" stripe>\r\n          <el-table-column prop=\"hospitalName\" label=\"医院\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ scope.row.hospitalName }}</span>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"departmentName\" label=\"科室\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ scope.row.departmentName }}</span>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"doctorName\" label=\"医生\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ scope.row.doctorName }}</span>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"viewArchive(scope.row)\">查看档案</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'ArchivesManagement',\r\n  data() {\r\n    return {\r\n      userInfo: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      hospitalizationRecords: [],\r\n    }\r\n  },\r\n\r\n  created() {\r\n    const userId = this.user.id;\r\n    this.fetchUser(userId).then(() => {\r\n      this.fetchHospitalizationRecords(userId);\r\n    });\r\n  },\r\n  methods: {\r\n    async fetchUser(userId) {\r\n      this.$request.get(`/user/selectById/${userId}`)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.userInfo = response.data\r\n            } else {\r\n              this.handleError('获取用户详细信息失败', response.data)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('获取用户详细信息失败', error)\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false\r\n          })\r\n    },\r\n\r\n    fetchHospitalizationRecords(userId) {\r\n      this.$request.get(`/user/selectArchives/${userId}`)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.hospitalizationRecords = response.data\r\n              console.log('住院记录:', this.hospitalizationRecords)\r\n            } else {\r\n              this.handleError('获取住院详细信息失败', response.data)\r\n            }\r\n          }).catch(error => {\r\n        this.handleError('获取住院详细信息失败', error)\r\n      })\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n\r\n    viewArchive(record) {\r\n      // 这里可以添加查看档案的具体逻辑\r\n      console.log('查看档案:', record);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.is-disabled {\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"AA+DA,SAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,sBAAA;IACA;EACA;EAEAC,QAAA;IACA,MAAAC,MAAA,QAAAP,IAAA,CAAAQ,EAAA;IACA,KAAAC,SAAA,CAAAF,MAAA,EAAAG,IAAA;MACA,KAAAC,2BAAA,CAAAJ,MAAA;IACA;EACA;EACAK,OAAA;IACA,MAAAH,UAAAF,MAAA;MACA,KAAAM,QAAA,CAAAC,GAAA,qBAAAP,MAAA,IACAG,IAAA,CAAAK,QAAA;QACA,IAAAA,QAAA,CAAAlB,IAAA;UACA,KAAAC,QAAA,GAAAiB,QAAA,CAAAlB,IAAA;QACA;UACA,KAAAmB,WAAA,eAAAD,QAAA,CAAAlB,IAAA;QACA;MACA,GACAoB,KAAA,CAAAC,KAAA;QACA,KAAAF,WAAA,eAAAE,KAAA;MACA,GACAC,OAAA;QACA,KAAApB,SAAA;MACA;IACA;IAEAY,4BAAAJ,MAAA;MACA,KAAAM,QAAA,CAAAC,GAAA,yBAAAP,MAAA,IACAG,IAAA,CAAAK,QAAA;QACA,IAAAA,QAAA,CAAAlB,IAAA;UACA,KAAAQ,sBAAA,GAAAU,QAAA,CAAAlB,IAAA;UACAuB,OAAA,CAAAC,GAAA,eAAAhB,sBAAA;QACA;UACA,KAAAW,WAAA,eAAAD,QAAA,CAAAlB,IAAA;QACA;MACA,GAAAoB,KAAA,CAAAC,KAAA;QACA,KAAAF,WAAA,eAAAE,KAAA;MACA;IACA;IAEAF,YAAAM,OAAA,EAAAJ,KAAA;MACAE,OAAA,CAAAF,KAAA,CAAAI,OAAA,EAAAJ,KAAA;MACA,KAAAK,QAAA,CAAAL,KAAA,CAAAI,OAAA;IACA;IAEAE,YAAAC,MAAA;MACA;MACAL,OAAA,CAAAC,GAAA,UAAAI,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}