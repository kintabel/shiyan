{"ast":null,"code":"import { parseTime } from '@/utils';\nimport { getCurrentWeekDates } from '@/utils/date.js';\nexport default {\n  name: 'ScheduleManagement',\n  data() {\n    return {\n      doctorInfo: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      hospitalizationRecords: [],\n      currentWeekDates: [],\n      weeklySchedules: [],\n      leaveModalVisible: false,\n      leaveSchedule: null,\n      leaveForm: {\n        leaveType: '',\n        reason: ''\n      }\n    };\n  },\n  async created() {\n    const userId = this.user.id;\n    this.currentWeekDates = getCurrentWeekDates();\n    try {\n      await this.fetchDoctor(userId);\n    } catch (error) {\n      console.error('数据加载出错:', error);\n    }\n  },\n  methods: {\n    async fetchDoctor(userId) {\n      this.$request.get(`/doctor/selectDoctorByUserId`, {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        console.log(response.data);\n        if (response.data) {\n          this.doctorInfo = response.data;\n          this.fetchWeeklySchedules(this.doctorInfo);\n        } else {\n          this.handleError('获取医生详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取医生详细信息失败', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    async fetchWeeklySchedules(doctorInfo) {\n      const startDate = this.currentWeekDates[0];\n      const endDate = this.currentWeekDates[6];\n      console.log(startDate, endDate);\n      console.log(doctorInfo);\n      const doctorId = doctorInfo.id;\n      try {\n        const response = await this.$request.get(`/api/schedule/doctor/${doctorId}`, {\n          params: {\n            startDate: startDate,\n            endDate: endDate\n          }\n        });\n        console.log(response.data);\n        if (response.data) {\n          this.weeklySchedules = response.data.map(schedule => ({\n            scheduleDate: schedule.scheduleDate,\n            shiftType: schedule.shiftType\n          }));\n          console.log('weeklySchedules', this.weeklySchedules);\n        }\n      } catch (error) {\n        console.error('获取本周排班信息失败:', error);\n        this.$message.error('获取本周排班信息失败');\n      }\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    },\n    openLeaveModal(schedule) {\n      this.leaveSchedule = schedule;\n      console.log('请假', this.leaveSchedule);\n      this.leaveModalVisible = true;\n      this.leaveForm = {\n        leaveType: '',\n        reason: ''\n      };\n    },\n    async submitLeaveApplication() {\n      this.$refs.leaveFormRef.validate(valid => {\n        if (valid) {\n          this.$request.post(`/api/schedule/leaveApplication`, {\n            doctorId: this.doctorInfo.id,\n            scheduleDate: this.leaveSchedule.scheduleDate,\n            shiftType: this.leaveSchedule.shiftType,\n            leaveType: this.leaveForm.leaveType,\n            reason: this.leaveForm.reason\n          }).then(() => {\n            this.$message.success('请假申请提交成功');\n            this.leaveModalVisible = false;\n          }).catch(error => {\n            this.$message.error('请假申请提交失败');\n            console.error('请假申请提交失败:', error);\n          });\n        }\n      });\n    },\n    // 班次标签样式\n    getShiftTagType(shiftType) {\n      if (!shiftType) return 'info';\n      return shiftType === 'DAY' ? 'success' : 'warning';\n    },\n    // 获取班次类型文本\n    getShiftType(shiftType) {\n      if (!shiftType) return '无排班';\n      return shiftType === 'DAY' ? '白班' : '夜班';\n    }\n  }\n};","map":{"version":3,"names":["parseTime","getCurrentWeekDates","name","data","doctorInfo","isLoading","user","JSON","parse","localStorage","getItem","hospitalizationRecords","currentWeekDates","weeklySchedules","leaveModalVisible","leaveSchedule","leaveForm","leaveType","reason","created","userId","id","fetchDoctor","error","console","methods","$request","get","params","then","response","log","fetchWeeklySchedules","handleError","catch","finally","startDate","endDate","doctorId","map","schedule","scheduleDate","shiftType","$message","message","openLeaveModal","submitLeaveApplication","$refs","leaveFormRef","validate","valid","post","success","getShiftTagType","getShiftType"],"sources":["src/views/doctor/ScheduleManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"[doctorInfo]\" stripe>\r\n        <el-table-column label=\"姓名\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.name }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"联系方式\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.phone }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"性别\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.gender }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <h4>当前周排班信息</h4>\r\n      <el-table :data=\"weeklySchedules\" stripe>\r\n        <el-table-column label=\"日期\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.scheduleDate }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"班次\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getShiftTagType(scope.row.shiftType)\">\r\n              {{ getShiftType(scope.row.shiftType) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"openLeaveModal(scope.row)\" type=\"danger\">请假</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 请假模态框 -->\r\n    <el-dialog :visible.sync=\"leaveModalVisible\" title=\"请假申请\">\r\n      <template #content>\r\n        <el-form :model=\"leaveForm\" ref=\"leaveFormRef\">\r\n          <el-form-item label=\"请假日期\">\r\n            <span>{{ this.leaveSchedule.scheduleDate }}</span>\r\n          </el-form-item>\r\n          <el-form-item label=\"请假类型\" prop=\"leaveType\">\r\n            <el-select v-model=\"leaveForm.leaveType\" placeholder=\"请选择请假类型\">\r\n              <el-option label=\"事假\" value=\"personal\"></el-option>\r\n              <el-option label=\"病假\" value=\"sick\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"请假原因\" prop=\"reason\">\r\n            <el-input v-model=\"leaveForm.reason\" placeholder=\"请输入请假原因\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </template>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"leaveModalVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitLeaveApplication\">提交</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\nimport { getCurrentWeekDates } from '@/utils/date.js'\r\n\r\nexport default {\r\n  name: 'ScheduleManagement',\r\n  data() {\r\n    return {\r\n      doctorInfo: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      hospitalizationRecords: [],\r\n      currentWeekDates: [],\r\n      weeklySchedules: [],\r\n      leaveModalVisible: false,\r\n      leaveSchedule: null,\r\n      leaveForm: {\r\n        leaveType: '',\r\n        reason: ''\r\n      }\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const userId = this.user.id;\r\n    this.currentWeekDates = getCurrentWeekDates()\r\n    try {\r\n      await this.fetchDoctor(userId);\r\n    } catch (error) {\r\n      console.error('数据加载出错:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchDoctor(userId) {\r\n      this.$request.get(`/doctor/selectDoctorByUserId`, {\r\n        params: {\r\n          userId: userId\r\n        }\r\n      }).then(response => {\r\n        console.log(response.data);\r\n        if (response.data) {\r\n          this.doctorInfo = response.data;\r\n          this.fetchWeeklySchedules(this.doctorInfo)\r\n        } else {\r\n          this.handleError('获取医生详细信息失败', response.data);\r\n        }\r\n      }).catch(error => {\r\n        this.handleError('获取医生详细信息失败', error);\r\n      }).finally(() => {\r\n        this.isLoading = false;\r\n      });\r\n    },\r\n\r\n    async fetchWeeklySchedules(doctorInfo) {\r\n      const startDate = this.currentWeekDates[0]\r\n      const endDate = this.currentWeekDates[6]\r\n      console.log(startDate, endDate)\r\n      console.log(doctorInfo)\r\n      const doctorId = doctorInfo.id\r\n      try {\r\n        const response = await this.$request.get(`/api/schedule/doctor/${doctorId}`, {\r\n          params: {\r\n            startDate: startDate,\r\n            endDate: endDate\r\n          }\r\n        })\r\n        console.log(response.data)\r\n        if (response.data) {\r\n          this.weeklySchedules = response.data.map(schedule => ({\r\n            scheduleDate: schedule.scheduleDate,\r\n            shiftType: schedule.shiftType\r\n          }))\r\n          console.log('weeklySchedules', this.weeklySchedules)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取本周排班信息失败:', error)\r\n        this.$message.error('获取本周排班信息失败')\r\n      }\r\n    },\r\n\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n\r\n    openLeaveModal(schedule) {\r\n      this.leaveSchedule = schedule;\r\n      console.log('请假',this.leaveSchedule)\r\n      this.leaveModalVisible = true;\r\n      this.leaveForm = {\r\n        leaveType: '',\r\n        reason: ''\r\n      };\r\n    },\r\n\r\n    async submitLeaveApplication() {\r\n      this.$refs.leaveFormRef.validate(valid => {\r\n        if (valid) {\r\n          this.$request.post(`/api/schedule/leaveApplication`, {\r\n            doctorId: this.doctorInfo.id,\r\n            scheduleDate: this.leaveSchedule.scheduleDate,\r\n            shiftType: this.leaveSchedule.shiftType,\r\n            leaveType: this.leaveForm.leaveType,\r\n            reason: this.leaveForm.reason\r\n          }).then(() => {\r\n            this.$message.success('请假申请提交成功');\r\n            this.leaveModalVisible = false;\r\n          }).catch(error => {\r\n            this.$message.error('请假申请提交失败');\r\n            console.error('请假申请提交失败:', error);\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    // 班次标签样式\r\n    getShiftTagType(shiftType) {\r\n      if (!shiftType) return 'info'\r\n      return shiftType === 'DAY' ? 'success' : 'warning'\r\n    },\r\n\r\n    // 获取班次类型文本\r\n    getShiftType(shiftType) {\r\n      if (!shiftType) return '无排班'\r\n      return shiftType === 'DAY' ? '白班' : '夜班'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.is-disabled {\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}