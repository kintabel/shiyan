{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from 'moment';\nimport * as echarts from 'echarts';\nexport default {\n  name: \"WarehouseManagement\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\n      activeOption: \"drugManagement\",\n      // 默认选中药物管理\n      drugWarehouseList: [],\n      // 药物列表\n      instrumentWarehouseList: [],\n      // 仪器列表\n      currentWarehouseList: [],\n      // 当前显示的列表\n      currentType: 1,\n      // 1-药物 2-仪器\n      dialogVisible: false,\n      // 对话框显示状态\n      message: '',\n      // 对话框消息\n\n      // 资源统计相关数据\n      selectedDepartment: null,\n      // 选中的部门ID\n      departments: [],\n      // 部门列表\n      drugChart: null,\n      // 药物图表实例\n      instrumentChart: null,\n      // 仪器图表实例\n      statisticsData: {\n        drugs: [],\n        // 药物统计数据\n        instruments: [] // 仪器统计数据\n      },\n\n      summaryData: [] // 汇总统计数据\n    };\n  },\n\n  created() {\n    this.fetchStockDetail(1); // 默认加载药物数据\n    this.fetchDepartments(); // 加载部门列表\n  },\n\n  methods: {\n    // 处理菜单选项选择\n    handleOptionSelect(option) {\n      this.activeOption = option;\n      if (option === \"drugManagement\") {\n        this.currentWarehouseList = this.drugWarehouseList;\n        this.currentType = 1;\n        this.fetchStockDetail(1);\n      } else if (option === \"instrumentManagement\") {\n        this.currentWarehouseList = this.instrumentWarehouseList;\n        this.currentType = 2;\n        this.fetchStockDetail(2);\n      } else if (option === \"resourceStatistics\") {\n        // 切换到统计标签时初始化图表\n        this.$nextTick(() => {\n          this.initCharts();\n        });\n      }\n    },\n    // 获取库存详情\n    fetchStockDetail(type) {\n      this.$request.get('/stock/selectStockByType', {\n        params: {\n          type: type,\n          hospitalAdminId: this.user.id\n        }\n      }).then(response => {\n        if (response.code == 200) {\n          if (type === 1) {\n            this.drugWarehouseList = response.data;\n            this.currentWarehouseList = this.drugWarehouseList;\n          } else if (type === 2) {\n            this.instrumentWarehouseList = response.data;\n            this.currentWarehouseList = this.instrumentWarehouseList;\n          }\n        } else {\n          this.$message.error(response.data.message || '获取数据失败');\n        }\n      }).catch(error => {\n        console.error('获取数据失败:', error);\n        this.$message.error('获取数据失败，请稍后重试');\n      });\n    },\n    // 格式化状态显示\n    formatStatus(row, column, cellValue) {\n      // 状态 0.停用 1.正常 2.过期 3.缺货\n      switch (cellValue) {\n        case 0:\n          return '停用';\n        case 1:\n          return '正常';\n        case 2:\n          return '过期';\n        case 3:\n          return '缺货';\n        default:\n          return '未知状态';\n      }\n    },\n    // 处理管理按钮点击\n    handleManage(row) {\n      this.dialogVisible = true;\n      const currentTime = moment();\n      const expireTime = moment(row.sellBy);\n      const diff = expireTime.diff(currentTime, 'days');\n      if (diff <= 7 && diff > 0) {\n        this.message = `物品 ${row.name} 即将过期，剩余 ${diff} 天`;\n      } else if (row.stock < 15) {\n        this.message = `物品 ${row.name} 库存即将不足，当前库存 ${row.stock}`;\n      } else {\n        this.message = `物品 ${row.name} 状态正常`;\n      }\n    },\n    // 更新状态\n    updateStatus(row) {\n      this.$request.post(`/stock/updateStatus/${row.id}`).then(response => {\n        if (response.code == 200) {\n          this.$message.success('状态更新成功');\n          this.fetchStockDetail(this.currentType);\n        } else {\n          this.$message.error(response.data.message || '状态更新失败');\n        }\n      }).catch(error => {\n        console.error('状态更新请求失败:', error);\n        this.$message.error('状态更新请求失败');\n      });\n    },\n    // 处理进货按钮点击\n    handlePurchase(row) {\n      this.$router.push({\n        name: 'Purchase',\n        query: {\n          name: row.name,\n          hospitalAdminId: this.user.id,\n          department: row.department\n        }\n      });\n    },\n    // 切换状态(停用/启用)\n    toggleStatus(row) {\n      const newStatus = row.status === 1 ? 0 : 1;\n      const url = `/stock/updateStatusDeactivated/${row.id}/${newStatus}`;\n      this.$request.post(url).then(response => {\n        if (response.code == 200) {\n          this.$message.success('状态更新成功');\n          this.fetchStockDetail(this.currentType);\n        } else {\n          this.$message.error(response.data.message || '状态更新失败');\n        }\n      }).catch(error => {\n        console.error('状态更新请求失败:', error);\n        this.$message.error('状态更新请求失败');\n      });\n    },\n    // 获取部门列表\n    fetchDepartments() {\n      this.$request.get('/department/list').then(response => {\n        if (response.code === 200) {\n          this.departments = response.data;\n        } else {\n          this.$message.error(response.data.message || '获取部门列表失败');\n        }\n      }).catch(error => {\n        console.error('获取部门列表失败:', error);\n        this.$message.error('获取部门列表失败');\n      });\n    },\n    // 获取部门统计信息\n    fetchDepartmentStatistics() {\n      if (!this.selectedDepartment) {\n        // 清空图表数据\n        this.statisticsData = {\n          drugs: [],\n          instruments: []\n        };\n        this.summaryData = [];\n        this.initCharts();\n        return;\n      }\n\n      // 获取药物统计\n      this.$request.get('/stock/departmentDrugStats', {\n        params: {\n          departmentId: this.selectedDepartment\n        }\n      }).then(response => {\n        if (response.code === 200) {\n          this.statisticsData.drugs = response.data;\n          this.updateDrugChart();\n          this.updateSummaryData();\n        } else {\n          this.$message.error(response.data.message || '获取药物统计失败');\n        }\n      });\n\n      // 获取仪器统计\n      this.$request.get('/stock/departmentInstrumentStats', {\n        params: {\n          departmentId: this.selectedDepartment\n        }\n      }).then(response => {\n        if (response.code === 200) {\n          this.statisticsData.instruments = response.data;\n          this.updateInstrumentChart();\n          this.updateSummaryData();\n        } else {\n          this.$message.error(response.data.message || '获取仪器统计失败');\n        }\n      });\n    },\n    // 初始化图表\n    initCharts() {\n      // 销毁旧图表实例\n      if (this.drugChart) {\n        this.drugChart.dispose();\n      }\n      if (this.instrumentChart) {\n        this.instrumentChart.dispose();\n      }\n\n      // 创建新图表实例\n      if (document.getElementById('drugChart')) {\n        this.drugChart = echarts.init(document.getElementById('drugChart'));\n      }\n      if (document.getElementById('instrumentChart')) {\n        this.instrumentChart = echarts.init(document.getElementById('instrumentChart'));\n      }\n\n      // 设置默认空数据选项\n      const emptyOption = {\n        title: {\n          text: '暂无数据',\n          left: 'center',\n          top: 'center'\n        }\n      };\n      if (this.drugChart) this.drugChart.setOption(emptyOption);\n      if (this.instrumentChart) this.instrumentChart.setOption(emptyOption);\n    },\n    // 更新药物图表\n    updateDrugChart() {\n      if (!this.drugChart) return;\n      const option = {\n        title: {\n          text: '药物库存分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.statisticsData.drugs.map(item => item.name)\n        },\n        series: [{\n          name: '药物库存',\n          type: 'pie',\n          radius: ['50%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: this.statisticsData.drugs.map(item => ({\n            value: item.stock,\n            name: item.name\n          }))\n        }]\n      };\n      this.drugChart.setOption(option);\n    },\n    // 更新仪器图表\n    updateInstrumentChart() {\n      if (!this.instrumentChart) return;\n      const option = {\n        title: {\n          text: '仪器库存分布',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: this.statisticsData.instruments.map(item => item.name)\n        },\n        series: [{\n          name: '仪器库存',\n          type: 'pie',\n          radius: ['50%', '70%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: '18',\n              fontWeight: 'bold'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: this.statisticsData.instruments.map(item => ({\n            value: item.stock,\n            name: item.name\n          }))\n        }]\n      };\n      this.instrumentChart.setOption(option);\n    },\n    // 更新汇总数据\n    updateSummaryData() {\n      // 计算药物汇总\n      const drugSummary = {\n        type: '药物',\n        totalItems: this.statisticsData.drugs.length,\n        totalStock: this.statisticsData.drugs.reduce((sum, item) => sum + item.stock, 0),\n        totalValue: this.statisticsData.drugs.reduce((sum, item) => sum + item.stock * item.price, 0),\n        expiringSoon: this.statisticsData.drugs.filter(item => {\n          const diff = moment(item.sellBy).diff(moment(), 'days');\n          return diff <= 30 && diff > 0;\n        }).length\n      };\n\n      // 计算仪器汇总\n      const instrumentSummary = {\n        type: '仪器',\n        totalItems: this.statisticsData.instruments.length,\n        totalStock: this.statisticsData.instruments.reduce((sum, item) => sum + item.stock, 0),\n        totalValue: this.statisticsData.instruments.reduce((sum, item) => sum + item.stock * item.price, 0),\n        expiringSoon: this.statisticsData.instruments.filter(item => {\n          const diff = moment(item.sellBy).diff(moment(), 'days');\n          return diff <= 30 && diff > 0;\n        }).length\n      };\n      this.summaryData = [drugSummary, instrumentSummary];\n    }\n  },\n  beforeDestroy() {\n    // 组件销毁时清理图表实例\n    if (this.drugChart) {\n      this.drugChart.dispose();\n    }\n    if (this.instrumentChart) {\n      this.instrumentChart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["moment","echarts","name","data","user","JSON","parse","localStorage","getItem","activeOption","drugWarehouseList","instrumentWarehouseList","currentWarehouseList","currentType","dialogVisible","message","selectedDepartment","departments","drugChart","instrumentChart","statisticsData","drugs","instruments","summaryData","created","fetchStockDetail","fetchDepartments","methods","handleOptionSelect","option","$nextTick","initCharts","type","$request","get","params","hospitalAdminId","id","then","response","code","$message","error","catch","console","formatStatus","row","column","cellValue","handleManage","currentTime","expireTime","sellBy","diff","stock","updateStatus","post","success","handlePurchase","$router","push","query","department","toggleStatus","newStatus","status","url","fetchDepartmentStatistics","departmentId","updateDrugChart","updateSummaryData","updateInstrumentChart","dispose","document","getElementById","init","emptyOption","title","text","left","top","setOption","tooltip","trigger","formatter","legend","orient","map","item","series","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","labelLine","value","drugSummary","totalItems","length","totalStock","reduce","sum","totalValue","price","expiringSoon","filter","instrumentSummary","beforeDestroy"],"sources":["src/views/hospitalAdmin/WarehouseManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"warehouse-management\">\r\n    <div class=\"left-sidebar\">\r\n      <el-menu :default-active=\"activeOption\" @select=\"handleOptionSelect\">\r\n        <el-menu-item index=\"drugManagement\">药物管理</el-menu-item>\r\n        <el-menu-item index=\"instrumentManagement\">仪器管理</el-menu-item>\r\n        <el-menu-item index=\"resourceStatistics\">资源统计</el-menu-item>\r\n      </el-menu>\r\n    </div>\r\n    <div class=\"main-content\">\r\n      <h2 class=\"page-title\">仓库管理</h2>\r\n\r\n      <!-- 药物/仪器管理表格 (默认显示) -->\r\n      <div v-if=\"activeOption !== 'resourceStatistics'\">\r\n        <el-table :data=\"currentWarehouseList\" border style=\"width: 100%;\">\r\n          <el-table-column prop=\"id\" label=\"ID\" width=\"50\"></el-table-column>\r\n          <el-table-column prop=\"name\" label=\"物品名称\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"stock\" label=\"库存\" width=\"80\"></el-table-column>\r\n          <el-table-column prop=\"department\" label=\"所属部门\" width=\"150\"></el-table-column>\r\n          <el-table-column prop=\"manufacturer\" label=\"生产日期\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"sellBy\" label=\"有效期\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"price\" label=\"价格\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\" :formatter=\"formatStatus\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"250\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button size=\"mini\" @click=\"handleManage(scope.row)\">管理</el-button>\r\n              <el-button size=\"mini\" type=\"success\" @click=\"handlePurchase(scope.row)\">进货</el-button>\r\n              <el-button\r\n                  size=\"mini\"\r\n                  :type=\"scope.row.status === 1? 'danger' :'success'\"\r\n                  @click=\"toggleStatus(scope.row)\"\r\n              >\r\n                {{ scope.row.status === 1? '停用' : '取消停用' }}\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 资源统计部分 -->\r\n      <div v-if=\"activeOption === 'resourceStatistics'\" class=\"statistics-container\">\r\n        <div class=\"department-selector\">\r\n          <el-select\r\n              v-model=\"selectedDepartment\"\r\n              placeholder=\"请选择部门\"\r\n              @change=\"fetchDepartmentStatistics\"\r\n              clearable\r\n          >\r\n            <el-option\r\n                v-for=\"dept in departments\"\r\n                :key=\"dept.id\"\r\n                :label=\"dept.name\"\r\n                :value=\"dept.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </div>\r\n\r\n        <div v-if=\"selectedDepartment\" class=\"charts-container\">\r\n          <!-- 药物资源统计图表 -->\r\n          <div class=\"chart-section\">\r\n            <h3>药物资源统计</h3>\r\n            <div class=\"chart-wrapper\">\r\n              <div id=\"drugChart\" style=\"width: 100%; height: 400px;\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 仪器资源统计图表 -->\r\n          <div class=\"chart-section\">\r\n            <h3>仪器资源统计</h3>\r\n            <div class=\"chart-wrapper\">\r\n              <div id=\"instrumentChart\" style=\"width: 100%; height: 400px;\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 资源汇总表格 -->\r\n          <div class=\"summary-table\">\r\n            <h3>资源汇总</h3>\r\n            <el-table :data=\"summaryData\" border style=\"width: 100%; margin-top: 20px;\">\r\n              <el-table-column prop=\"type\" label=\"类型\" width=\"120\"></el-table-column>\r\n              <el-table-column prop=\"totalItems\" label=\"物品数量\" width=\"120\"></el-table-column>\r\n              <el-table-column prop=\"totalStock\" label=\"总库存\" width=\"120\"></el-table-column>\r\n              <el-table-column prop=\"totalValue\" label=\"总价值(元)\" width=\"150\"></el-table-column>\r\n              <el-table-column prop=\"expiringSoon\" label=\"即将过期数量\" width=\"150\"></el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"empty-state\">\r\n          <el-empty description=\"请选择部门查看资源统计\"></el-empty>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 管理信息对话框 -->\r\n      <el-dialog\r\n          title=\"管理信息\"\r\n          :visible.sync=\"dialogVisible\"\r\n          width=\"30%\"\r\n      >\r\n        <p v-if=\"message\">{{ message }}</p>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: \"WarehouseManagement\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem(\"xm-user\") || '{}'),\r\n      activeOption: \"drugManagement\", // 默认选中药物管理\r\n      drugWarehouseList: [], // 药物列表\r\n      instrumentWarehouseList: [], // 仪器列表\r\n      currentWarehouseList: [], // 当前显示的列表\r\n      currentType: 1, // 1-药物 2-仪器\r\n      dialogVisible: false, // 对话框显示状态\r\n      message: '', // 对话框消息\r\n\r\n      // 资源统计相关数据\r\n      selectedDepartment: null, // 选中的部门ID\r\n      departments: [], // 部门列表\r\n      drugChart: null, // 药物图表实例\r\n      instrumentChart: null, // 仪器图表实例\r\n      statisticsData: {\r\n        drugs: [], // 药物统计数据\r\n        instruments: [] // 仪器统计数据\r\n      },\r\n      summaryData: [] // 汇总统计数据\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchStockDetail(1); // 默认加载药物数据\r\n    this.fetchDepartments(); // 加载部门列表\r\n  },\r\n  methods: {\r\n    // 处理菜单选项选择\r\n    handleOptionSelect(option) {\r\n      this.activeOption = option;\r\n      if (option === \"drugManagement\") {\r\n        this.currentWarehouseList = this.drugWarehouseList;\r\n        this.currentType = 1;\r\n        this.fetchStockDetail(1);\r\n      } else if (option === \"instrumentManagement\") {\r\n        this.currentWarehouseList = this.instrumentWarehouseList;\r\n        this.currentType = 2;\r\n        this.fetchStockDetail(2);\r\n      } else if (option === \"resourceStatistics\") {\r\n        // 切换到统计标签时初始化图表\r\n        this.$nextTick(() => {\r\n          this.initCharts();\r\n        });\r\n      }\r\n    },\r\n\r\n    // 获取库存详情\r\n    fetchStockDetail(type) {\r\n      this.$request.get('/stock/selectStockByType', {\r\n        params: {\r\n          type: type,\r\n          hospitalAdminId: this.user.id,\r\n        },\r\n      }).then(response => {\r\n        if (response.code == 200) {\r\n          if (type === 1) {\r\n            this.drugWarehouseList = response.data;\r\n            this.currentWarehouseList = this.drugWarehouseList;\r\n          } else if (type === 2) {\r\n            this.instrumentWarehouseList = response.data;\r\n            this.currentWarehouseList = this.instrumentWarehouseList;\r\n          }\r\n        } else {\r\n          this.$message.error(response.data.message || '获取数据失败');\r\n        }\r\n      })\r\n          .catch(error => {\r\n            console.error('获取数据失败:', error);\r\n            this.$message.error('获取数据失败，请稍后重试');\r\n          });\r\n    },\r\n\r\n    // 格式化状态显示\r\n    formatStatus(row, column, cellValue) {\r\n      // 状态 0.停用 1.正常 2.过期 3.缺货\r\n      switch (cellValue) {\r\n        case 0: return '停用';\r\n        case 1: return '正常';\r\n        case 2: return '过期';\r\n        case 3: return '缺货';\r\n        default: return '未知状态';\r\n      }\r\n    },\r\n\r\n    // 处理管理按钮点击\r\n    handleManage(row) {\r\n      this.dialogVisible = true;\r\n      const currentTime = moment();\r\n      const expireTime = moment(row.sellBy);\r\n      const diff = expireTime.diff(currentTime, 'days');\r\n\r\n      if (diff <= 7 && diff > 0) {\r\n        this.message = `物品 ${row.name} 即将过期，剩余 ${diff} 天`;\r\n      } else if (row.stock < 15) {\r\n        this.message = `物品 ${row.name} 库存即将不足，当前库存 ${row.stock}`;\r\n      } else {\r\n        this.message = `物品 ${row.name} 状态正常`;\r\n      }\r\n    },\r\n\r\n    // 更新状态\r\n    updateStatus(row) {\r\n      this.$request.post(`/stock/updateStatus/${row.id}`)\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.$message.success('状态更新成功');\r\n              this.fetchStockDetail(this.currentType);\r\n            } else {\r\n              this.$message.error(response.data.message || '状态更新失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('状态更新请求失败:', error);\r\n            this.$message.error('状态更新请求失败');\r\n          });\r\n    },\r\n\r\n    // 处理进货按钮点击\r\n    handlePurchase(row) {\r\n      this.$router.push({\r\n        name: 'Purchase',\r\n        query: {\r\n          name: row.name,\r\n          hospitalAdminId: this.user.id,\r\n          department: row.department,\r\n        }\r\n      });\r\n    },\r\n\r\n    // 切换状态(停用/启用)\r\n    toggleStatus(row) {\r\n      const newStatus = row.status === 1 ? 0 : 1;\r\n      const url = `/stock/updateStatusDeactivated/${row.id}/${newStatus}`;\r\n\r\n      this.$request.post(url)\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              this.$message.success('状态更新成功');\r\n              this.fetchStockDetail(this.currentType);\r\n            } else {\r\n              this.$message.error(response.data.message || '状态更新失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('状态更新请求失败:', error);\r\n            this.$message.error('状态更新请求失败');\r\n          });\r\n    },\r\n\r\n    // 获取部门列表\r\n    fetchDepartments() {\r\n      this.$request.get('/department/list')\r\n          .then(response => {\r\n            if (response.code === 200) {\r\n              this.departments = response.data;\r\n            } else {\r\n              this.$message.error(response.data.message || '获取部门列表失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('获取部门列表失败:', error);\r\n            this.$message.error('获取部门列表失败');\r\n          });\r\n    },\r\n\r\n    // 获取部门统计信息\r\n    fetchDepartmentStatistics() {\r\n      if (!this.selectedDepartment) {\r\n        // 清空图表数据\r\n        this.statisticsData = { drugs: [], instruments: [] };\r\n        this.summaryData = [];\r\n        this.initCharts();\r\n        return;\r\n      }\r\n\r\n      // 获取药物统计\r\n      this.$request.get('/stock/departmentDrugStats', {\r\n        params: { departmentId: this.selectedDepartment }\r\n      }).then(response => {\r\n        if (response.code === 200) {\r\n          this.statisticsData.drugs = response.data;\r\n          this.updateDrugChart();\r\n          this.updateSummaryData();\r\n        } else {\r\n          this.$message.error(response.data.message || '获取药物统计失败');\r\n        }\r\n      });\r\n\r\n      // 获取仪器统计\r\n      this.$request.get('/stock/departmentInstrumentStats', {\r\n        params: { departmentId: this.selectedDepartment }\r\n      }).then(response => {\r\n        if (response.code === 200) {\r\n          this.statisticsData.instruments = response.data;\r\n          this.updateInstrumentChart();\r\n          this.updateSummaryData();\r\n        } else {\r\n          this.$message.error(response.data.message || '获取仪器统计失败');\r\n        }\r\n      });\r\n    },\r\n\r\n    // 初始化图表\r\n    initCharts() {\r\n      // 销毁旧图表实例\r\n      if (this.drugChart) {\r\n        this.drugChart.dispose();\r\n      }\r\n      if (this.instrumentChart) {\r\n        this.instrumentChart.dispose();\r\n      }\r\n\r\n      // 创建新图表实例\r\n      if (document.getElementById('drugChart')) {\r\n        this.drugChart = echarts.init(document.getElementById('drugChart'));\r\n      }\r\n      if (document.getElementById('instrumentChart')) {\r\n        this.instrumentChart = echarts.init(document.getElementById('instrumentChart'));\r\n      }\r\n\r\n      // 设置默认空数据选项\r\n      const emptyOption = {\r\n        title: {\r\n          text: '暂无数据',\r\n          left: 'center',\r\n          top: 'center'\r\n        }\r\n      };\r\n\r\n      if (this.drugChart) this.drugChart.setOption(emptyOption);\r\n      if (this.instrumentChart) this.instrumentChart.setOption(emptyOption);\r\n    },\r\n\r\n    // 更新药物图表\r\n    updateDrugChart() {\r\n      if (!this.drugChart) return;\r\n\r\n      const option = {\r\n        title: {\r\n          text: '药物库存分布',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          data: this.statisticsData.drugs.map(item => item.name)\r\n        },\r\n        series: [\r\n          {\r\n            name: '药物库存',\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: this.statisticsData.drugs.map(item => ({\r\n              value: item.stock,\r\n              name: item.name\r\n            }))\r\n          }\r\n        ]\r\n      };\r\n\r\n      this.drugChart.setOption(option);\r\n    },\r\n\r\n    // 更新仪器图表\r\n    updateInstrumentChart() {\r\n      if (!this.instrumentChart) return;\r\n\r\n      const option = {\r\n        title: {\r\n          text: '仪器库存分布',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          data: this.statisticsData.instruments.map(item => item.name)\r\n        },\r\n        series: [\r\n          {\r\n            name: '仪器库存',\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: this.statisticsData.instruments.map(item => ({\r\n              value: item.stock,\r\n              name: item.name\r\n            }))\r\n          }\r\n        ]\r\n      };\r\n\r\n      this.instrumentChart.setOption(option);\r\n    },\r\n\r\n    // 更新汇总数据\r\n    updateSummaryData() {\r\n      // 计算药物汇总\r\n      const drugSummary = {\r\n        type: '药物',\r\n        totalItems: this.statisticsData.drugs.length,\r\n        totalStock: this.statisticsData.drugs.reduce((sum, item) => sum + item.stock, 0),\r\n        totalValue: this.statisticsData.drugs.reduce((sum, item) => sum + (item.stock * item.price), 0),\r\n        expiringSoon: this.statisticsData.drugs.filter(item => {\r\n          const diff = moment(item.sellBy).diff(moment(), 'days');\r\n          return diff <= 30 && diff > 0;\r\n        }).length\r\n      };\r\n\r\n      // 计算仪器汇总\r\n      const instrumentSummary = {\r\n        type: '仪器',\r\n        totalItems: this.statisticsData.instruments.length,\r\n        totalStock: this.statisticsData.instruments.reduce((sum, item) => sum + item.stock, 0),\r\n        totalValue: this.statisticsData.instruments.reduce((sum, item) => sum + (item.stock * item.price), 0),\r\n        expiringSoon: this.statisticsData.instruments.filter(item => {\r\n          const diff = moment(item.sellBy).diff(moment(), 'days');\r\n          return diff <= 30 && diff > 0;\r\n        }).length\r\n      };\r\n\r\n      this.summaryData = [drugSummary, instrumentSummary];\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    // 组件销毁时清理图表实例\r\n    if (this.drugChart) {\r\n      this.drugChart.dispose();\r\n    }\r\n    if (this.instrumentChart) {\r\n      this.instrumentChart.dispose();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.warehouse-management {\r\n  display: flex;\r\n  min-height: 100vh;\r\n}\r\n\r\n.left-sidebar {\r\n  width: 200px;\r\n  background-color: #f4f4f4;\r\n  padding: 10px;\r\n  border-right: 1px solid #e6e6e6;\r\n}\r\n\r\n.main-content {\r\n  flex: 1;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.page-title {\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n/* 统计部分样式 */\r\n.statistics-container {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.department-selector {\r\n  margin-bottom: 30px;\r\n  width: 300px;\r\n}\r\n\r\n.charts-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n}\r\n\r\n.chart-section {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart-section h3 {\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 18px;\r\n}\r\n\r\n.chart-wrapper {\r\n  margin-top: 20px;\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n}\r\n\r\n.empty-state {\r\n  margin-top: 50px;\r\n  text-align: center;\r\n}\r\n\r\n.summary-table {\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.summary-table h3 {\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 18px;\r\n}\r\n\r\n/* 响应式布局 */\r\n@media (max-width: 768px) {\r\n  .warehouse-management {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .left-sidebar {\r\n    width: 100%;\r\n    border-right: none;\r\n    border-bottom: 1px solid #e6e6e6;\r\n  }\r\n\r\n  .department-selector {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}