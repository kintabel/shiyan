{"ast":null,"code":"/**\r\n * 格式化时间\r\n * @param {(Object|string|number)} time\r\n * @param {string} cFormat\r\n * @returns {string | null}\r\n */\nexport function parseTime(time, cFormat) {\n  if (arguments.length === 0 || !time) {\n    return null;\n  }\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  let date;\n  if (typeof time === 'object') {\n    date = time;\n  } else {\n    if (typeof time === 'string') {\n      if (/^[0-9]+$/.test(time)) {\n        // support \"1548221490638\"\n        time = parseInt(time);\n      } else {\n        // support safari\n        // https://stackoverflow.com/questions/4310953/invalid-date-in-safari\n        time = time.replace(new RegExp(/-/gm), '/');\n      }\n    }\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000;\n    }\n    date = new Date(time);\n  }\n  const formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  const time_str = format.replace(/{([ymdhisa])+}/g, (result, key) => {\n    const value = formatObj[key];\n    // Note: getDay() returns 0 on Sunday\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n    return value.toString().padStart(2, '0');\n  });\n  return time_str;\n}\n\n/**\r\n * 格式化时间为更易读的形式\r\n * @param {number} time\r\n * @param {string} option\r\n * @returns {string}\r\n */\nexport function formatTime(time, option) {\n  if (('' + time).length === 10) {\n    time = parseInt(time) * 1000;\n  } else {\n    time = +time;\n  }\n  const d = new Date(time);\n  const now = Date.now();\n  const diff = (now - d) / 1000;\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分';\n  }\n}\n\n/**\r\n * 获取时间范围\r\n * @param {string} type\r\n * @returns {Date[]}\r\n */\nexport function getTimeRange(type) {\n  const now = new Date();\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  const day = now.getDate();\n  switch (type) {\n    case 'today':\n      return [new Date(year, month, day), new Date(year, month, day + 1, 0, 0, 0, -1)];\n    case 'week':\n      return [new Date(year, month, day - now.getDay() + 1), new Date(year, month, day - now.getDay() + 8, 0, 0, 0, -1)];\n    case 'month':\n      return [new Date(year, month, 1), new Date(year, month + 1, 1, 0, 0, 0, -1)];\n    case 'year':\n      return [new Date(year, 0, 1), new Date(year + 1, 0, 1, 0, 0, 0, -1)];\n    default:\n      return [now, now];\n  }\n}\nexport default {\n  parseTime,\n  formatTime,\n  getTimeRange\n};","map":{"version":3,"names":["parseTime","time","cFormat","arguments","length","format","date","test","parseInt","replace","RegExp","toString","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","result","key","value","padStart","formatTime","option","now","diff","Math","ceil","getTimeRange","type","year","month","day"],"sources":["E:/专业设计项目/HRS/HRS-7/vue/src/utils/index.js"],"sourcesContent":["/**\r\n * 格式化时间\r\n * @param {(Object|string|number)} time\r\n * @param {string} cFormat\r\n * @returns {string | null}\r\n */\r\nexport function parseTime(time, cFormat) {\r\n    if (arguments.length === 0 || !time) {\r\n        return null\r\n    }\r\n    const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n    let date\r\n    if (typeof time === 'object') {\r\n        date = time\r\n    } else {\r\n        if ((typeof time === 'string')) {\r\n            if ((/^[0-9]+$/.test(time))) {\r\n                // support \"1548221490638\"\r\n                time = parseInt(time)\r\n            } else {\r\n                // support safari\r\n                // https://stackoverflow.com/questions/4310953/invalid-date-in-safari\r\n                time = time.replace(new RegExp(/-/gm), '/')\r\n            }\r\n        }\r\n\r\n        if ((typeof time === 'number') && (time.toString().length === 10)) {\r\n            time = time * 1000\r\n        }\r\n        date = new Date(time)\r\n    }\r\n    const formatObj = {\r\n        y: date.getFullYear(),\r\n        m: date.getMonth() + 1,\r\n        d: date.getDate(),\r\n        h: date.getHours(),\r\n        i: date.getMinutes(),\r\n        s: date.getSeconds(),\r\n        a: date.getDay()\r\n    }\r\n    const time_str = format.replace(/{([ymdhisa])+}/g, (result, key) => {\r\n        const value = formatObj[key]\r\n        // Note: getDay() returns 0 on Sunday\r\n        if (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\r\n        return value.toString().padStart(2, '0')\r\n    })\r\n    return time_str\r\n}\r\n\r\n/**\r\n * 格式化时间为更易读的形式\r\n * @param {number} time\r\n * @param {string} option\r\n * @returns {string}\r\n */\r\nexport function formatTime(time, option) {\r\n    if (('' + time).length === 10) {\r\n        time = parseInt(time) * 1000\r\n    } else {\r\n        time = +time\r\n    }\r\n    const d = new Date(time)\r\n    const now = Date.now()\r\n\r\n    const diff = (now - d) / 1000\r\n\r\n    if (diff < 30) {\r\n        return '刚刚'\r\n    } else if (diff < 3600) {\r\n        // less 1 hour\r\n        return Math.ceil(diff / 60) + '分钟前'\r\n    } else if (diff < 3600 * 24) {\r\n        return Math.ceil(diff / 3600) + '小时前'\r\n    } else if (diff < 3600 * 24 * 2) {\r\n        return '1天前'\r\n    }\r\n    if (option) {\r\n        return parseTime(time, option)\r\n    } else {\r\n        return (\r\n            d.getMonth() +\r\n            1 +\r\n            '月' +\r\n            d.getDate() +\r\n            '日' +\r\n            d.getHours() +\r\n            '时' +\r\n            d.getMinutes() +\r\n            '分'\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * 获取时间范围\r\n * @param {string} type\r\n * @returns {Date[]}\r\n */\r\nexport function getTimeRange(type) {\r\n    const now = new Date()\r\n    const year = now.getFullYear()\r\n    const month = now.getMonth()\r\n    const day = now.getDate()\r\n\r\n    switch (type) {\r\n        case 'today':\r\n            return [new Date(year, month, day), new Date(year, month, day + 1, 0, 0, 0, -1)]\r\n        case 'week':\r\n            return [new Date(year, month, day - now.getDay() + 1), new Date(year, month, day - now.getDay() + 8, 0, 0, 0, -1)]\r\n        case 'month':\r\n            return [new Date(year, month, 1), new Date(year, month + 1, 1, 0, 0, 0, -1)]\r\n        case 'year':\r\n            return [new Date(year, 0, 1), new Date(year + 1, 0, 1, 0, 0, 0, -1)]\r\n        default:\r\n            return [now, now]\r\n    }\r\n}\r\n\r\nexport default {\r\n    parseTime,\r\n    formatTime,\r\n    getTimeRange\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}