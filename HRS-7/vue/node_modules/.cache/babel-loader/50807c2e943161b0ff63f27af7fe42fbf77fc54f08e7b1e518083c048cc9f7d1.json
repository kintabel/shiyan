{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'TodayAppointments',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      appointments: [],\n      // 挂号信息列表\n      loading: false,\n      // 加载状态\n      error: '' // 错误信息\n    };\n  },\n\n  created() {\n    this.fetchTodayAppointments(); // 组件创建时获取挂号信息 \n  },\n\n  methods: {\n    // 获取今日挂号信息\n    async fetchTodayAppointments() {\n      this.loading = true;\n      this.error = '';\n      try {\n        const response = await axios.get('/api/doctor/today-appointments', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwt-token')}` // 携带 JWT 令牌\n          }\n        });\n\n        if (response.data.code === 200) {\n          this.appointments = response.data.data; // 假设返回的数据在 data 字段中\n        } else {\n          this.error = response.data.message || '获取挂号信息失败';\n        }\n      } catch (error) {\n        this.error = '请求失败，请检查网络或稍后重试';\n        console.error('获取挂号信息失败:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 查看挂号详情\n    handleViewDetails(row) {\n      this.$router.push({\n        name: 'RegistrationDetail',\n        params: {\n          id: row.id\n        } // 传递挂号 ID\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","user","JSON","parse","localStorage","getItem","appointments","loading","error","created","fetchTodayAppointments","methods","response","get","headers","Authorization","code","message","console","handleViewDetails","row","$router","push","params","id"],"sources":["src/views/doctor/TodayAppointments.vue"],"sourcesContent":["<template>\r\n  <div class=\"today-appointments\">\r\n    <h2>今日预约</h2>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n\r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n    <!-- 挂号信息表格 -->\r\n    <el-table v-if=\"appointments.length > 0\" :data=\"appointments\" style=\"width: 100%\">\r\n      <el-table-column prop=\"patientName\" label=\"患者姓名\"></el-table-column>\r\n      <el-table-column prop=\"appointmentTime\" label=\"预约时间\"></el-table-column>\r\n      <el-table-column prop=\"status\" label=\"状态\"></el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template #default=\"scope\">\r\n          <el-button type=\"primary\" size=\"small\" @click=\"handleViewDetails(scope.row)\">查看详情</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 无数据提示 -->\r\n    <div v-else class=\"no-data\">今日暂无预约信息</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TodayAppointments',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      appointments: [], // 挂号信息列表\r\n      loading: false, // 加载状态\r\n      error: '', // 错误信息\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchTodayAppointments(); // 组件创建时获取挂号信息 \r\n  },\r\n  methods: {\r\n    // 获取今日挂号信息\r\n    async fetchTodayAppointments() {\r\n      this.loading = true;\r\n      this.error = '';\r\n\r\n      try {\r\n        const response = await axios.get('/api/doctor/today-appointments', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('jwt-token')}`, // 携带 JWT 令牌\r\n          },\r\n        });\r\n\r\n        if (response.data.code === 200) {\r\n          this.appointments = response.data.data; // 假设返回的数据在 data 字段中\r\n        } else {\r\n          this.error = response.data.message || '获取挂号信息失败';\r\n        }\r\n      } catch (error) {\r\n        this.error = '请求失败，请检查网络或稍后重试';\r\n        console.error('获取挂号信息失败:', error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 查看挂号详情\r\n    handleViewDetails(row) {\r\n      this.$router.push({\r\n        name: 'RegistrationDetail',\r\n        params: { id: row.id }, // 传递挂号 ID\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.today-appointments {\r\n  padding: 20px;\r\n}\r\n\r\n.loading,\r\n.error,\r\n.no-data {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  color: #f56c6c;\r\n}\r\n</style>"],"mappings":";AA4BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;MAAA;MACAC,OAAA;MAAA;MACAC,KAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,sBAAA;EACA;;EACAC,OAAA;IACA;IACA,MAAAD,uBAAA;MACA,KAAAH,OAAA;MACA,KAAAC,KAAA;MAEA;QACA,MAAAI,QAAA,SAAAd,KAAA,CAAAe,GAAA;UACAC,OAAA;YACAC,aAAA,YAAAX,YAAA,CAAAC,OAAA;UACA;QACA;;QAEA,IAAAO,QAAA,CAAAZ,IAAA,CAAAgB,IAAA;UACA,KAAAV,YAAA,GAAAM,QAAA,CAAAZ,IAAA,CAAAA,IAAA;QACA;UACA,KAAAQ,KAAA,GAAAI,QAAA,CAAAZ,IAAA,CAAAiB,OAAA;QACA;MACA,SAAAT,KAAA;QACA,KAAAA,KAAA;QACAU,OAAA,CAAAV,KAAA,cAAAA,KAAA;MACA;QACA,KAAAD,OAAA;MACA;IACA;IAEA;IACAY,kBAAAC,GAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAvB,IAAA;QACAwB,MAAA;UAAAC,EAAA,EAAAJ,GAAA,CAAAI;QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}