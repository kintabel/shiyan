{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      loading: false,\n      currentRegister: null,\n      queue: []\n    };\n  },\n  computed: {\n    statusTagType() {\n      if (!this.currentRegister) return '';\n      switch (this.currentRegister.status) {\n        case 0:\n          return 'warning';\n        // 待就诊\n        case 1:\n          return 'success';\n        // 就诊中\n        case 2:\n          return 'info';\n        // 已完成\n        default:\n          return '';\n      }\n    }\n  },\n  methods: {\n    formatStatus(status) {\n      const statusMap = {\n        0: '待就诊',\n        1: '就诊中',\n        2: '已完成'\n      };\n      return statusMap[status] || '未知状态';\n    },\n    fetchTodayRegister() {\n      const userId = this.user.id;\n      console.log(userId);\n      this.loading = true;\n      this.$request.get('/user/register/today', {\n        params: {\n          userId: userId\n        }\n      }).then(response => {\n        this.currentRegister = response.data;\n        if (this.currentRegister) {\n          this.fetchQueue();\n        }\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    fetchQueue() {\n      if (!this.currentRegister) return;\n      this.$request.get('/user/selectWaitingQueues', {\n        params: {\n          orderNumber: this.currentRegister.order,\n          registerTime: this.currentRegister.registerTime\n        }\n      }).then(response => {\n        this.queue = response.data;\n      });\n    }\n  },\n  mounted() {\n    this.fetchTodayRegister();\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","loading","currentRegister","queue","computed","statusTagType","status","methods","formatStatus","statusMap","fetchTodayRegister","userId","id","console","log","$request","get","params","then","response","fetchQueue","finally","orderNumber","order","registerTime","mounted"],"sources":["src/views/user/WaitingQueue.vue"],"sourcesContent":["<template>\r\n  <div class=\"waiting-queue-container\">\r\n    <!-- 当前挂号信息 -->\r\n    <el-card v-if=\"currentRegister\" class=\"current-register\">\r\n      <div slot=\"header\">\r\n        <span>您的挂号信息</span>\r\n      </div>\r\n      <el-descriptions :column=\"1\" border>\r\n        <el-descriptions-item label=\"挂号单号\">{{ currentRegister.order }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"就诊时间\">{{ currentRegister.registerTime }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"当前状态\">\r\n          <el-tag :type=\"statusTagType\">{{ formatStatus(currentRegister.status) }}</el-tag>\r\n        </el-descriptions-item>\r\n      </el-descriptions>\r\n    </el-card>\r\n\r\n    <!-- 候诊队列 -->\r\n    <el-card v-if=\"queue.length > 0\" class=\"waiting-queue\">\r\n      <div slot=\"header\">\r\n        <span>候诊队列</span>\r\n        <el-tag type=\"info\" style=\"float: right\">\r\n          您前面还有 {{ queue.length }} 人\r\n        </el-tag>\r\n      </div>\r\n      <el-table :data=\"queue\" size=\"small\">\r\n        <el-table-column prop=\"queueNumber\" label=\"排队号\" width=\"80\" />\r\n        <el-table-column prop=\"nameHidden\" label=\"患者\" width=\"100\" />\r\n        <el-table-column prop=\"registerTime\" label=\"预约时间\" />\r\n      </el-table>\r\n    </el-card>\r\n\r\n    <div v-else class=\"no-register\">\r\n      <el-empty description=\"今日无挂号记录\"></el-empty>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      loading: false,\r\n      currentRegister: null,\r\n      queue: []\r\n    }\r\n  },\r\n  computed: {\r\n    statusTagType() {\r\n      if (!this.currentRegister) return '';\r\n      switch(this.currentRegister.status) {\r\n        case 0: return 'warning'; // 待就诊\r\n        case 1: return 'success'; // 就诊中\r\n        case 2: return 'info';    // 已完成\r\n        default: return '';\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    formatStatus(status) {\r\n      const statusMap = {\r\n        0: '待就诊',\r\n        1: '就诊中',\r\n        2: '已完成'\r\n      };\r\n      return statusMap[status] || '未知状态';\r\n    },\r\n\r\n    fetchTodayRegister() {\r\n      const userId = this.user.id;\r\n      console.log(userId);\r\n      this.loading = true;\r\n      this.$request.get('/user/register/today', {\r\n        params: { userId: userId }\r\n      })\r\n          .then(response => {\r\n            this.currentRegister = response.data;\r\n            if (this.currentRegister) {\r\n              this.fetchQueue();\r\n            }\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n\r\n    fetchQueue() {\r\n      if (!this.currentRegister) return;\r\n\r\n\r\n      this.$request.get('/user/selectWaitingQueues', {\r\n        params: {\r\n          orderNumber: this.currentRegister.order,\r\n          registerTime: this.currentRegister.registerTime\r\n        }\r\n      })\r\n          .then(response => {\r\n            this.queue = response.data;\r\n          });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchTodayRegister();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.waiting-queue-container {\r\n  padding: 20px;\r\n}\r\n\r\n.current-register {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.no-register {\r\n  text-align: center;\r\n  padding: 40px 0;\r\n}\r\n</style>"],"mappings":"AAsCA;EACAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;MACAC,eAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA;MACA,UAAAH,eAAA;MACA,aAAAA,eAAA,CAAAI,MAAA;QACA;UAAA;QAAA;QACA;UAAA;QAAA;QACA;UAAA;QAAA;QACA;UAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,aAAAF,MAAA;MACA,MAAAG,SAAA;QACA;QACA;QACA;MACA;MACA,OAAAA,SAAA,CAAAH,MAAA;IACA;IAEAI,mBAAA;MACA,MAAAC,MAAA,QAAAf,IAAA,CAAAgB,EAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,MAAA;MACA,KAAAV,OAAA;MACA,KAAAc,QAAA,CAAAC,GAAA;QACAC,MAAA;UAAAN,MAAA,EAAAA;QAAA;MACA,GACAO,IAAA,CAAAC,QAAA;QACA,KAAAjB,eAAA,GAAAiB,QAAA,CAAAxB,IAAA;QACA,SAAAO,eAAA;UACA,KAAAkB,UAAA;QACA;MACA,GACAC,OAAA;QACA,KAAApB,OAAA;MACA;IACA;IAEAmB,WAAA;MACA,UAAAlB,eAAA;MAGA,KAAAa,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAK,WAAA,OAAApB,eAAA,CAAAqB,KAAA;UACAC,YAAA,OAAAtB,eAAA,CAAAsB;QACA;MACA,GACAN,IAAA,CAAAC,QAAA;QACA,KAAAhB,KAAA,GAAAgB,QAAA,CAAAxB,IAAA;MACA;IACA;EACA;EACA8B,QAAA;IACA,KAAAf,kBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}