{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'SubmitRegistration',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      doctor: null,\n      nowUser: null,\n      registrationDate: this.$route.query.date,\n      registrationTimeSlot: this.$route.query.timeSlot,\n      registrationPrice: this.$route.query.price,\n      isLoading: true\n    };\n  },\n  created() {\n    const doctorId = this.$route.query.doctorId;\n    const userId = this.user.id;\n    const isRevisit = this.$route.query.isRevisit;\n\n    // 检查日期和时间段是否有效\n    if (!this.registrationDate || !this.registrationTimeSlot) {\n      console.error('日期或时间段参数为空');\n      this.$message.error('日期或时间段参数为空，请检查后重试');\n      return;\n    }\n    if (doctorId) {\n      this.fetchDoctorInfo(doctorId);\n    } else {\n      this.isLoading = false;\n    }\n    this.fetchUserInfo(userId);\n    console.log('当前用户信息:', this.user);\n  },\n  methods: {\n    fetchDoctorInfo(doctorId) {\n      this.isLoading = true;\n      this.$request.get('/doctor/selectDoctorById', {\n        params: {\n          doctorId\n        }\n      }).then(response => {\n        if (response.data) {\n          this.doctor = response.data;\n        } else {\n          this.handleError('获取医生详细信息失败', response.data);\n        }\n      }).catch(error => {\n        this.handleError('获取医生详细信息失败', error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    fetchUserInfo(userId) {\n      this.isLoading = true;\n      const errorMessage = '获取用户详细信息失败，请稍后重试';\n      this.$request.get(`/user/selectById/${userId}`).then(response => {\n        if (response.data) {\n          this.nowUser = response.data;\n        } else {\n          this.handleError(errorMessage, response.data);\n        }\n      }).catch(error => {\n        this.handleError(errorMessage, error);\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    submitRegistration() {\n      console.log('提交挂号信息:', {\n        doctorId: this.doctor.id,\n        userId: this.nowUser.id,\n        registrationDate: this.registrationDate,\n        registrationTimeSlot: this.registrationTimeSlot,\n        registrationPrice: this.registrationPrice\n      });\n      this.$request.post('/registration/insert', {\n        doctorId: this.doctor.id,\n        userId: this.nowUser.id,\n        registrationDate: this.registrationDate,\n        registrationTimeSlot: this.registrationTimeSlot,\n        registrationPrice: this.registrationPrice\n      }).then(response => {\n        // 从响应数据中提取 register 对象的 order 属性\n        const order = response.data && response.data.order;\n        this.$message.success('挂号信息提交成功');\n        // 跳转到成功页面并传递相关数据，包括 order 属性\n        this.$router.push({\n          name: 'RegistrationSuccess',\n          query: {\n            order: order\n          }\n        });\n      }).catch(error => {\n        this.handleError('提交挂号信息失败', error);\n      });\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(`${message}，请稍后重试`);\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","doctor","nowUser","registrationDate","$route","query","date","registrationTimeSlot","timeSlot","registrationPrice","price","isLoading","created","doctorId","userId","id","isRevisit","console","error","$message","fetchDoctorInfo","fetchUserInfo","log","methods","$request","get","params","then","response","handleError","catch","finally","errorMessage","submitRegistration","post","order","success","$router","push","message"],"sources":["src/views/user/SubmitRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"submit-registration-page\">\r\n    <h2>提交挂号信息</h2>\r\n    <div v-if=\"doctor\">\r\n      <p>医生姓名：{{ doctor.name }}</p>\r\n      <p>挂号日期：{{ registrationDate }}</p>\r\n      <p>时间段：{{ registrationTimeSlot }}</p>\r\n      <p>价格：{{ registrationPrice }} 元</p>\r\n      <p>用户：{{ nowUser.name }}</p>\r\n      <p>用户联系方式：{{ nowUser.phone }}</p>\r\n      <!-- 添加确认提交按钮 -->\r\n      <button @click=\"submitRegistration\">确认提交</button>\r\n    </div>\r\n    <div v-else>\r\n      <p>未获取到医生信息，请稍后重试。</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SubmitRegistration',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      doctor: null,\r\n      nowUser: null,\r\n      registrationDate: this.$route.query.date,\r\n      registrationTimeSlot: this.$route.query.timeSlot,\r\n      registrationPrice: this.$route.query.price,\r\n      isLoading: true\r\n    };\r\n  },\r\n  created() {\r\n    const doctorId = this.$route.query.doctorId;\r\n    const userId = this.user.id;\r\n    const isRevisit = this.$route.query.isRevisit;\r\n\r\n    // 检查日期和时间段是否有效\r\n    if (!this.registrationDate ||!this.registrationTimeSlot) {\r\n      console.error('日期或时间段参数为空');\r\n      this.$message.error('日期或时间段参数为空，请检查后重试');\r\n      return;\r\n    }\r\n\r\n    if (doctorId) {\r\n      this.fetchDoctorInfo(doctorId);\r\n    } else {\r\n      this.isLoading = false;\r\n    }\r\n    this.fetchUserInfo(userId);\r\n    console.log('当前用户信息:', this.user);\r\n  },\r\n  methods: {\r\n    fetchDoctorInfo(doctorId) {\r\n      this.isLoading = true;\r\n      this.$request.get('/doctor/selectDoctorById', {\r\n        params: { doctorId }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.doctor = response.data;\r\n            } else {\r\n              this.handleError('获取医生详细信息失败', response.data);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('获取医生详细信息失败', error);\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false;\r\n          });\r\n    },\r\n    fetchUserInfo(userId) {\r\n      this.isLoading = true;\r\n      const errorMessage = '获取用户详细信息失败，请稍后重试';\r\n      this.$request.get(`/user/selectById/${userId}`)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.nowUser = response.data;\r\n            } else {\r\n              this.handleError(errorMessage, response.data);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError(errorMessage, error);\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false;\r\n          });\r\n    },\r\n    submitRegistration() {\r\n      console.log('提交挂号信息:', {\r\n        doctorId: this.doctor.id,\r\n        userId: this.nowUser.id,\r\n        registrationDate: this.registrationDate,\r\n        registrationTimeSlot: this.registrationTimeSlot,\r\n        registrationPrice: this.registrationPrice\r\n      });\r\n      this.$request.post('/registration/insert', {\r\n        doctorId: this.doctor.id,\r\n        userId: this.nowUser.id,\r\n        registrationDate: this.registrationDate,\r\n        registrationTimeSlot: this.registrationTimeSlot,\r\n        registrationPrice: this.registrationPrice\r\n      })\r\n          .then(response => {\r\n            // 从响应数据中提取 register 对象的 order 属性\r\n            const order = response.data && response.data.order;\r\n            this.$message.success('挂号信息提交成功');\r\n            // 跳转到成功页面并传递相关数据，包括 order 属性\r\n            this.$router.push({\r\n              name: 'RegistrationSuccess',\r\n              query: {\r\n                order: order\r\n              }\r\n            });\r\n          })\r\n          .catch(error => {\r\n            this.handleError('提交挂号信息失败', error);\r\n          });\r\n    },\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(`${message}，请稍后重试`);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.submit-registration-page {\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}