{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseTime } from '@/utils';\nexport default {\n  name: 'ArchivesView',\n  data() {\n    return {\n      hospitalizationRecord: null,\n      isLoading: true,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      keyToLabel: {\n        userName: '患者姓名',\n        doctorName: '医生姓名',\n        hospitalName: '医院',\n        departmentName: '科室',\n        admissionTime: '入院时间',\n        totalCost: '总花费',\n        dischargeTime: '出院时间',\n        disease: '疾病名称',\n        dischargeOrders: '出院医嘱',\n        inReportId: '入院报告',\n        outReportId: '出院报告',\n        surgery: '手术',\n        dailySituationId: '每日住院详情'\n      },\n      dailyDialogVisible: false,\n      dailyCheckLists: []\n    };\n  },\n  async created() {\n    const hospitalizationId = this.$route.query.hospitalizationId;\n    await this.fetchHospitalizationRecord(hospitalizationId);\n  },\n  methods: {\n    transformData(data) {\n      return Object.entries(data).map(([key, value]) => ({\n        key,\n        label: this.keyToLabel[key],\n        value\n      }));\n    },\n    async fetchHospitalizationRecord(hospitalizationId) {\n      try {\n        const response = await this.$request.get(`/user/selectHospitalizationById/${hospitalizationId}`);\n        if (response.data) {\n          this.hospitalizationRecord = response.data;\n        } else {\n          this.handleError('获取住院详细信息失败', response.data);\n        }\n      } catch (error) {\n        this.handleError('获取住院详细信息失败', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    handleError(message, error) {\n      console.error(message, error);\n      this.$message.error(message);\n    },\n    viewInReport(id) {\n      console.log('查看入院报告，ID:', id);\n      this.$router.push({\n        path: '/archives-management/archives-view/doctor-report',\n        query: {\n          id: id\n        }\n      });\n    },\n    viewOutReport(id) {\n      console.log('查看出院报告，ID:', id);\n      this.$router.push({\n        path: '/archives-management/archives-view/doctor-report',\n        query: {\n          id: id\n        }\n      });\n    },\n    async viewDailySituation(id) {\n      try {\n        this.isLoading = true;\n        const response = await this.$request.get(`/user/dailyCheckList/getByHospitalizationId/${id}`);\n        if (response.data && response.data.length > 0) {\n          this.dailyCheckLists = response.data;\n          this.dailyDialogVisible = true;\n        } else {\n          this.$message.warning('暂无每日住院详情数据');\n        }\n      } catch (error) {\n        this.handleError('获取每日住院详情失败', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["parseTime","name","data","hospitalizationRecord","isLoading","user","JSON","parse","localStorage","getItem","keyToLabel","userName","doctorName","hospitalName","departmentName","admissionTime","totalCost","dischargeTime","disease","dischargeOrders","inReportId","outReportId","surgery","dailySituationId","dailyDialogVisible","dailyCheckLists","created","hospitalizationId","$route","query","fetchHospitalizationRecord","methods","transformData","Object","entries","map","key","value","label","response","$request","get","handleError","error","message","console","$message","viewInReport","id","log","$router","push","path","viewOutReport","viewDailySituation","length","warning"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\doctor\\ArchivesView.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-page-container\">\r\n  <div class=\"doctor-page-table\">\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <el-table :data=\"transformData(hospitalizationRecord)\" style=\"width: 100%;\">\r\n        <el-table-column>\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.label }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column>\r\n          <template slot-scope=\"scope\">\r\n        <span v-if=\"!['inReportId', 'outReportId', 'dailySituationId', 'costId'].includes(scope.row.key)\">\r\n          {{ scope.row.value }}\r\n        </span>\r\n            <el-button v-else-if=\"scope.row.key === 'inReportId'\" @click=\"viewInReport(scope.row.value)\">查看入院报告</el-button>\r\n            <el-button v-else-if=\"scope.row.key === 'outReportId'\" @click=\"viewOutReport(scope.row.value)\">查看出院报告</el-button>\r\n            <el-button\r\n                v-else-if=\"scope.row.key === 'dailySituationId'\"\r\n                @click=\"viewDailySituation(hospitalizationRecord.inReportId)\">\r\n              查看每日情况\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n\r\n  <el-dialog\r\n      title=\"每日住院详情\"\r\n      :visible.sync=\"dailyDialogVisible\"\r\n      width=\"70%\"\r\n      center>\r\n    <el-table :data=\"dailyCheckLists\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"date\" label=\"日期\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"medicine\" label=\"用药情况\"></el-table-column>\r\n      <el-table-column prop=\"transfusion\" label=\"输液情况\"></el-table-column>\r\n      <el-table-column prop=\"surgery\" label=\"手术情况\"></el-table-column>\r\n      <el-table-column prop=\"surgeryTime\" label=\"手术时间\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"dailySituation\" label=\"每日情况\"></el-table-column>\r\n      <el-table-column prop=\"cost\" label=\"花费\" width=\"100\"></el-table-column>\r\n    </el-table>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dailyDialogVisible = false\">关闭</el-button>\r\n      </span>\r\n  </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'ArchivesView',\r\n  data() {\r\n    return {\r\n      hospitalizationRecord: null,\r\n      isLoading: true,\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      keyToLabel: {\r\n        userName: '患者姓名',\r\n        doctorName: '医生姓名',\r\n        hospitalName: '医院',\r\n        departmentName: '科室',\r\n        admissionTime: '入院时间',\r\n        totalCost: '总花费',\r\n        dischargeTime: '出院时间',\r\n        disease: '疾病名称',\r\n        dischargeOrders: '出院医嘱',\r\n        inReportId: '入院报告',\r\n        outReportId: '出院报告',\r\n        surgery: '手术',\r\n        dailySituationId: '每日住院详情',\r\n      },\r\n      dailyDialogVisible: false,\r\n      dailyCheckLists: []\r\n    }\r\n  },\r\n\r\n  async created() {\r\n    const hospitalizationId = this.$route.query.hospitalizationId;\r\n    await this.fetchHospitalizationRecord(hospitalizationId);\r\n  },\r\n  methods: {\r\n    transformData(data) {\r\n      return Object.entries(data).map(([key, value]) => ({\r\n        key,\r\n        label: this.keyToLabel[key],\r\n        value\r\n      }));\r\n    },\r\n    async fetchHospitalizationRecord(hospitalizationId) {\r\n      try {\r\n        const response = await this.$request.get(`/user/selectHospitalizationById/${hospitalizationId}`);\r\n        if (response.data) {\r\n          this.hospitalizationRecord = response.data;\r\n        } else {\r\n          this.handleError('获取住院详细信息失败', response.data);\r\n        }\r\n      } catch (error) {\r\n        this.handleError('获取住院详细信息失败', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    handleError(message, error) {\r\n      console.error(message, error);\r\n      this.$message.error(message);\r\n    },\r\n    viewInReport(id) {\r\n      console.log('查看入院报告，ID:', id);\r\n      this.$router.push({\r\n        path: '/archives-management/archives-view/doctor-report',\r\n        query: { id: id }\r\n      })\r\n    },\r\n    viewOutReport(id) {\r\n      console.log('查看出院报告，ID:', id);\r\n      this.$router.push({\r\n        path: '/archives-management/archives-view/doctor-report',\r\n        query: { id: id }\r\n      })\r\n    },\r\n    async viewDailySituation(id) {\r\n      try {\r\n        this.isLoading = true;\r\n        const response = await this.$request.get(`/user/dailyCheckList/getByHospitalizationId/${id}`);\r\n        if (response.data && response.data.length > 0) {\r\n          this.dailyCheckLists = response.data;\r\n          this.dailyDialogVisible = true;\r\n        } else {\r\n          this.$message.warning('暂无每日住院详情数据');\r\n        }\r\n      } catch (error) {\r\n        this.handleError('获取每日住院详情失败', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-page-table {\r\n  padding: 20px;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-button.is-disabled {\r\n  cursor: not-allowed;\r\n}\r\n\r\n.el-table {\r\n  border: 1px solid #e4e7ed;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.el-table__header-wrapper {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.el-table__row--striped {\r\n  background-color: #f9fafc;\r\n}\r\n\r\n.el-table__cell {\r\n  border-right: 1px solid #e4e7ed;\r\n  border-bottom: 1px solid #e4e7ed;\r\n  padding: 10px;\r\n}\r\n\r\n.el-table__cell:last-child {\r\n  border-right: none;\r\n}\r\n\r\n.el-table__row:last-child .el-table__cell {\r\n  border-bottom: none;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}