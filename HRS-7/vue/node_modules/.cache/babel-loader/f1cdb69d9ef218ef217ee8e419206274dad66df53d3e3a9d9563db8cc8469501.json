{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withCtx as _withCtx, createTextVNode as _createTextVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"submit-registration-page\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_spinner = _resolveComponent(\"el-spinner\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 数据加载中提示 \"), $data.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_spinner), _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"正在加载数据...\", -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"提交挂号信息\", -1 /* HOISTED */)), $data.doctor ? (_openBlock(), _createBlock(_component_el_form, {\n    key: 0,\n    \"label-width\": \"120px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"医生姓名\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.doctor.name) + \" - \" + _toDisplayString($options.getDoctorTitle($data.doctor.status)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"班次类型\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_tag, {\n        type: $data.shiftType === 1 ? 'success' : 'warning'\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.shiftType === 1 ? '白班' : '夜班'), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"挂号日期\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($options.formatDate($data.registrationDate)), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"时间段\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.registrationTimeSlot), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"价格\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.registrationPrice) + \" 元\", 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"患者姓名\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.nowUser.name), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"联系方式\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"span\", null, _toDisplayString($data.nowUser.phone), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: $options.submitRegistration,\n        type: \"primary\",\n        loading: $data.submitting\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 确认提交 \")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n        onClick: $options.goBack\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"返回修改\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_empty, {\n    description: \"未获取到医生信息\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.goBack\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"返回选择\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })]))]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$data","isLoading","_hoisted_2","_createVNode","_component_el_spinner","_createElementVNode","_hoisted_3","doctor","_createBlock","_component_el_form","_component_el_form_item","label","_toDisplayString","name","$options","getDoctorTitle","status","_component_el_tag","type","shiftType","formatDate","registrationDate","registrationTimeSlot","registrationPrice","nowUser","phone","_component_el_button","onClick","submitRegistration","loading","submitting","_cache","goBack","_hoisted_4","_component_el_empty","description"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\user\\SubmitRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"submit-registration-page\">\r\n    <!-- 数据加载中提示 -->\r\n    <div v-if=\"isLoading\" class=\"loading-container\">\r\n      <el-spinner />\r\n      <span>正在加载数据...</span>\r\n    </div>\r\n    <div v-else>\r\n      <h2>提交挂号信息</h2>\r\n      <el-form label-width=\"120px\" v-if=\"doctor\">\r\n        <el-form-item label=\"医生姓名\">\r\n          <span>{{ doctor.name }} - {{ getDoctorTitle(doctor.status) }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"班次类型\">\r\n          <el-tag :type=\"shiftType === 1 ? 'success' : 'warning'\">\r\n            {{ shiftType === 1 ? '白班' : '夜班' }}\r\n          </el-tag>\r\n        </el-form-item>\r\n        <el-form-item label=\"挂号日期\">\r\n          <span>{{ formatDate(registrationDate) }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"时间段\">\r\n          <span>{{ registrationTimeSlot }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <span>{{ registrationPrice }} 元</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"患者姓名\">\r\n          <span>{{ nowUser.name }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系方式\">\r\n          <span>{{ nowUser.phone }}</span>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n              @click=\"submitRegistration\"\r\n              type=\"primary\"\r\n              :loading=\"submitting\"\r\n          >\r\n            确认提交\r\n          </el-button>\r\n          <el-button @click=\"goBack\">返回修改</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div v-else>\r\n        <el-empty description=\"未获取到医生信息\">\r\n          <el-button type=\"primary\" @click=\"goBack\">返回选择</el-button>\r\n        </el-empty>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { parseTime } from '@/utils'\r\n\r\nexport default {\r\n  name: 'SubmitRegistration',\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      doctor: null,\r\n      nowUser: null,\r\n      registrationDate: this.$route.query.date || parseTime(new Date(), '{y}-{m}-{d}'),\r\n      registrationTimeSlot: this.$route.query.timeSlot,\r\n      registrationPrice: this.$route.query.price,\r\n      shiftType: parseInt(this.$route.query.shiftType) || 1, // 1-白天 2-晚上\r\n      isLoading: true,\r\n      submitting: false,\r\n      status: this.$route.query.status || 0\r\n    }\r\n  },\r\n  created() {\r\n    const doctorId = this.$route.query.doctorId\r\n    const userId = this.user.id\r\n\r\n    // 检查必要参数\r\n    if (!doctorId || !this.registrationTimeSlot) {\r\n      this.$message.error('缺少必要参数，请重新选择')\r\n      this.$router.go(-1)\r\n      return\r\n    }\r\n\r\n    this.fetchDoctorInfo(doctorId)\r\n    this.fetchUserInfo(userId)\r\n  },\r\n  methods: {\r\n    // 格式化日期显示\r\n    formatDate(date) {\r\n      return parseTime(date, '{y}年{m}月{d}日')\r\n    },\r\n\r\n    // 获取医生职称\r\n    getDoctorTitle(status) {\r\n      switch (status) {\r\n        case 1: return '医师'\r\n        case 2: return '副主治医师'\r\n        case 3: return '主治医师'\r\n        case 4: return '专家'\r\n        case 5: return '急诊'\r\n        default: return '未知职称'\r\n      }\r\n    },\r\n\r\n    // 获取医生信息\r\n    fetchDoctorInfo(doctorId) {\r\n      this.isLoading = true\r\n      this.$request.get('/doctor/selectDoctorById', {\r\n        params: { doctorId }\r\n      })\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.doctor = response.data\r\n            } else {\r\n              this.handleError('获取医生详细信息失败', response.data)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('获取医生详细信息失败', error)\r\n          })\r\n          .finally(() => {\r\n            this.isLoading = false\r\n          })\r\n    },\r\n\r\n    // 获取用户信息\r\n    fetchUserInfo(userId) {\r\n      this.$request.get(`/user/selectById/${userId}`)\r\n          .then(response => {\r\n            if (response.data) {\r\n              this.nowUser = response.data\r\n            } else {\r\n              this.handleError('获取用户详细信息失败', response.data)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('获取用户详细信息失败', error)\r\n          })\r\n    },\r\n\r\n    // 提交挂号信息\r\n    submitRegistration() {\r\n      if (!this.doctor || !this.nowUser) {\r\n        this.$message.error('信息不完整，无法提交')\r\n        return\r\n      }\r\n\r\n      this.submitting = true\r\n\r\n      const registrationData = {\r\n        doctorId: this.doctor.id,\r\n        userId: this.nowUser.id,\r\n        registrationDate: this.registrationDate,\r\n        registrationTimeSlot: this.registrationTimeSlot,\r\n        registrationPrice: this.registrationPrice,\r\n        shiftType: this.shiftType === 1? 'DAY' : 'NIGHT',\r\n        status: this.status,\r\n      }\r\n\r\n      this.$request.post('/registration/insert', registrationData)\r\n          .then(response => {\r\n            if (response.code == 200) {\r\n              const order = response.data?.order\r\n              this.$message.success('挂号成功')\r\n              this.$router.push({\r\n                name: 'RegistrationSuccess',\r\n                query: { order }\r\n              })\r\n            } else {\r\n              this.handleError('挂号失败', response.msg)\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.handleError('提交挂号信息失败', error)\r\n          })\r\n          .finally(() => {\r\n            this.submitting = false\r\n          })\r\n    },\r\n\r\n    // 返回上一页\r\n    goBack() {\r\n      this.$router.go(-1)\r\n    },\r\n\r\n    // 错误处理\r\n    handleError(message, error) {\r\n      console.error(message, error)\r\n      this.$message.error(`${message}，请稍后重试`)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.submit-registration-page {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 50px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.el-form-item__content span {\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n\r\n.el-tag {\r\n  margin-left: 5px;\r\n}\r\n\r\n.el-button {\r\n  margin-right: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA0B;;;EAEbA,KAAK,EAAC;;;;;;;;;;;;;;;uBAF9BC,mBAAA,CAiDM,OAjDNC,UAiDM,GAhDJC,mBAAA,aAAgB,EACLC,KAAA,CAAAC,SAAS,I,cAApBJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,YAAA,CAAcC,qBAAA,G,0BACdC,mBAAA,CAAsB,cAAhB,WAAS,qB,oBAEjBR,mBAAA,CA0CM,OAAAS,UAAA,G,0BAzCJD,mBAAA,CAAe,YAAX,QAAM,sBACyBL,KAAA,CAAAO,MAAM,I,cAAzCC,YAAA,CAkCUC,kBAAA;;IAlCD,aAAW,EAAC;;sBACnB,MAEe,CAFfN,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;wBACxB,MAAoE,CAApEN,mBAAA,CAAoE,cAAAO,gBAAA,CAA3DZ,KAAA,CAAAO,MAAM,CAACM,IAAI,IAAG,KAAG,GAAAD,gBAAA,CAAGE,QAAA,CAAAC,cAAc,CAACf,KAAA,CAAAO,MAAM,CAACS,MAAM,kB;;;QAE3Db,YAAA,CAIeO,uBAAA;MAJDC,KAAK,EAAC;IAAM;wBACxB,MAES,CAFTR,YAAA,CAESc,iBAAA;QAFAC,IAAI,EAAElB,KAAA,CAAAmB,SAAS;;0BACtB,MAAmC,C,kCAAhCnB,KAAA,CAAAmB,SAAS,qC;;;;;QAGhBhB,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;wBACxB,MAA+C,CAA/CN,mBAAA,CAA+C,cAAAO,gBAAA,CAAtCE,QAAA,CAAAM,UAAU,CAACpB,KAAA,CAAAqB,gBAAgB,kB;;;QAEtClB,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAK;wBACvB,MAAuC,CAAvCN,mBAAA,CAAuC,cAAAO,gBAAA,CAA9BZ,KAAA,CAAAsB,oBAAoB,iB;;;QAE/BnB,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAI;wBACtB,MAAsC,CAAtCN,mBAAA,CAAsC,cAAAO,gBAAA,CAA7BZ,KAAA,CAAAuB,iBAAiB,IAAG,IAAE,gB;;;QAEjCpB,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;wBACxB,MAA+B,CAA/BN,mBAAA,CAA+B,cAAAO,gBAAA,CAAtBZ,KAAA,CAAAwB,OAAO,CAACX,IAAI,iB;;;QAEvBV,YAAA,CAEeO,uBAAA;MAFDC,KAAK,EAAC;IAAM;wBACxB,MAAgC,CAAhCN,mBAAA,CAAgC,cAAAO,gBAAA,CAAvBZ,KAAA,CAAAwB,OAAO,CAACC,KAAK,iB;;;QAExBtB,YAAA,CASeO,uBAAA;wBARb,MAMY,CANZP,YAAA,CAMYuB,oBAAA;QALPC,OAAK,EAAEb,QAAA,CAAAc,kBAAkB;QAC1BV,IAAI,EAAC,SAAS;QACbW,OAAO,EAAE7B,KAAA,CAAA8B;;0BACb,MAEDC,MAAA,QAAAA,MAAA,O,iBAFC,QAED,E;;iDACA5B,YAAA,CAA2CuB,oBAAA;QAA/BC,OAAK,EAAEb,QAAA,CAAAkB;MAAM;0BAAE,MAAID,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,E;;;;;;;uBAGnClC,mBAAA,CAIM,OAAAoC,UAAA,GAHJ9B,YAAA,CAEW+B,mBAAA;IAFDC,WAAW,EAAC;EAAU;sBAC9B,MAA0D,CAA1DhC,YAAA,CAA0DuB,oBAAA;MAA/CR,IAAI,EAAC,SAAS;MAAES,OAAK,EAAEb,QAAA,CAAAkB;;wBAAQ,MAAID,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}