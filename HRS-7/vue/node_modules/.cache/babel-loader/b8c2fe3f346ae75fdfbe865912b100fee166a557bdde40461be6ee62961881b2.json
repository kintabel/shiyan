{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Password\",\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    update() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              // 成功更新\n              localStorage.removeItem('xm-user'); // 清除缓存的用户信息\n              this.$message.success('修改密码成功');\n              this.$router.push('/login');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePassword","rule","value","callback","Error","user","newPassword","JSON","parse","localStorage","getItem","rules","password","required","message","trigger","confirmPassword","validator","created","methods","update","$refs","formRef","validate","valid","$request","put","then","res","code","removeItem","$message","success","$router","push","error","msg"],"sources":["E:\\专业设计项目\\HRS\\HRS-7\\vue\\src\\views\\user\\Password.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"width: 50%\">\r\n      <el-form ref=\"formRef\" :model=\"user\" :rules=\"rules\" label-width=\"100px\" style=\"padding-right: 50px\">\r\n        <el-form-item label=\"原始密码\" prop=\"password\">\r\n          <el-input show-password v-model=\"user.password\" placeholder=\"原始密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input show-password v-model=\"user.newPassword\" placeholder=\"新密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\r\n          <el-input show-password v-model=\"user.confirmPassword\" placeholder=\"确认密码\"></el-input>\r\n        </el-form-item>\r\n        <div style=\"text-align: center; margin-bottom: 20px\">\r\n          <el-button type=\"primary\" @click=\"update\">确认修改</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Password\",\r\n  data() {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请确认密码'))\r\n      } else if (value !== this.user.newPassword) {\r\n        callback(new Error('确认密码错误'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        password: [\r\n          { required: true, message: '请输入原始密码', trigger: 'blur' },\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { validator: validatePassword, required: true, trigger: 'blur' },\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request.put('/updatePassword', this.user).then(res => {\r\n            if (res.code === '200') {\r\n              // 成功更新\r\n              localStorage.removeItem('xm-user')   // 清除缓存的用户信息\r\n              this.$message.success('修改密码成功')\r\n              this.$router.push('/login')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/.el-form-item__label {\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";AAsBA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,MAAMC,gBAAe,GAAIA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;MAClD,IAAID,KAAI,KAAM,EAAE,EAAE;QAChBC,QAAQ,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC7B,OAAO,IAAIF,KAAI,KAAM,IAAI,CAACG,IAAI,CAACC,WAAW,EAAE;QAC1CH,QAAQ,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC9B,OAAO;QACLD,QAAQ,CAAC;MACX;IACF;IAEA,OAAO;MACLE,IAAI,EAAEE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,KAAK,IAAI,CAAC;MACzDC,KAAK,EAAE;QACLC,QAAQ,EAAE,CACR;UAAEC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,SAAS;UAAEC,OAAO,EAAE;QAAO,CAAC,CACxD;QACDT,WAAW,EAAE,CACX;UAAEO,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAAO,CAAC,CACvD;QACDC,eAAe,EAAE,CACf;UAAEC,SAAS,EAAEjB,gBAAgB;UAAEa,QAAQ,EAAE,IAAI;UAAEE,OAAO,EAAE;QAAO,CAAC;MAEpE;IACF;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG,CAEV,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAEC,KAAK,IAAK;QACrC,IAAIA,KAAK,EAAE;UACT,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACrB,IAAI,CAAC,CAACsB,IAAI,CAACC,GAAE,IAAK;YAC1D,IAAIA,GAAG,CAACC,IAAG,KAAM,KAAK,EAAE;cACtB;cACApB,YAAY,CAACqB,UAAU,CAAC,SAAS,GAAI;cACrC,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,QAAQ;cAC9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ;YAC5B,OAAO;cACL,IAAI,CAACH,QAAQ,CAACI,KAAK,CAACP,GAAG,CAACQ,GAAG;YAC7B;UACF,CAAC;QACH;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}